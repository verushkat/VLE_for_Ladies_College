{"version":3,"file":"ornamentum.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://ornamentum/data-table/services/data-table-config.service.ts","ng://ornamentum/data-table/services/data-table-event.service.ts","ng://ornamentum/data-table/services/data-table-data-state.service.ts","ng://ornamentum/data-table/components/data-table-column/data-table-column.component.ts","ng://ornamentum/data-table/models/data-fetch-mode.enum.ts","ng://ornamentum/data-table/components/data-table-column-filter-header/data-table-column-filter-header.component.ts","ng://ornamentum/data-table/services/data-table-scroll-position.service.ts","ng://ornamentum/data-table/components/data-table-column-filter-template/data-table-column-filter-template.component.ts","ng://ornamentum/utility/services/object-utility.class.ts","ng://ornamentum/utility/directives/init.directive.ts","ng://ornamentum/utility/directives/focus.directive.ts","ng://ornamentum/utility/pipes/pixel-converter.pipe.ts","ng://ornamentum/utility/services/utility-config.service.ts","ng://ornamentum/utility/services/drag-and-drop.service.ts","ng://ornamentum/utility/services/global-ref.service.ts","ng://ornamentum/utility/services/resize.service.ts","ng://ornamentum/utility/services/popover-component-loader.class.ts","ng://ornamentum/utility/services/popover-component-loader-factory.service.ts","ng://ornamentum/utility/services/validator.service.ts","ng://ornamentum/utility/utility.module.ts","ng://ornamentum/data-table/components/data-table-column-title-header/data-table-column-title-header.component.ts","ng://ornamentum/data-table/components/data-table-column-selector/data-table-column-selector.component.ts","ng://ornamentum/data-table/components/data-table-header/data-table-header.component.ts","ng://ornamentum/data-table/components/data-table-col-group/data-table-col-group.component.ts","ng://ornamentum/data-table/components/data-table-pagination/data-table-pagination.component.ts","ng://ornamentum/data-table/services/data-table-persistence.service.ts","ng://ornamentum/data-table/services/data-table-resource.service.ts","ng://ornamentum/data-table/components/data-table/data-table.component.ts","ng://ornamentum/data-table/components/data-table-body/data-table-body.component.ts","ng://ornamentum/data-table/components/data-table-no-data-body/data-table-no-data-body.component.ts","ng://ornamentum/data-table/components/data-table-head/data-table-head.component.ts","ng://ornamentum/data-table/components/data-table-loading-spinner/data-table-loading-spinner.component.ts","ng://ornamentum/data-table/directives/scroll-position.directive.ts","ng://ornamentum/data-table/directives/scroll-element.directive.ts","ng://ornamentum/data-table/directives/element-width.directive.ts","ng://ornamentum/dropdown/services/dropdown-config.service.ts","ng://ornamentum/dropdown/services/dropdown-data-state.service.ts","ng://ornamentum/dropdown/services/dropdown-event-state.service.ts","ng://ornamentum/dropdown/components/dropdown-view/dropdown-view.component.ts","ng://ornamentum/dropdown/services/dropdown-resource.service.ts","ng://ornamentum/dropdown/components/dropdown/dropdown.component.ts","ng://ornamentum/dropdown/components/dropdown-filter/dropdown-filter.component.ts","ng://ornamentum/dropdown/components/dropdown-options/dropdown-options.component.ts","ng://ornamentum/dropdown/dropdown.module.ts","ng://ornamentum/data-table/data-table.module.ts","ng://ornamentum/resource-utility/services/request-param-mapper.service.ts","ng://ornamentum/resource-utility/services/resource-utility-config.service.ts","ng://ornamentum/resource-utility/resource-utility.module.ts","ng://ornamentum/data-table-resource/services/data-table-resource-config.service.ts","ng://ornamentum/data-table-resource/services/data-table-http-data-fetch.service.ts","ng://ornamentum/data-table-resource/services/data-table-http-resource-factory.service.ts","ng://ornamentum/data-table-resource/services/data-table-websocket-data-fetch.service.ts","ng://ornamentum/data-table-resource/services/data-table-websocket-resource-factory.service.ts","ng://ornamentum/data-table-resource/data-table-resource.module.ts","ng://ornamentum/dropdown-resource/services/dropdown-resource-config.service.ts","ng://ornamentum/dropdown-resource/services/dropdown-http-data-fetch.service.ts","ng://ornamentum/dropdown-resource/services/dropdown-http-resource-factory.service.ts","ng://ornamentum/dropdown-resource/services/dropdown-websocket-data-fetch.service.ts","ng://ornamentum/dropdown-resource/services/dropdown-websocket-resource-factory.service.ts","ng://ornamentum/dropdown-resource/dropdown-resource.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { DataTableTranslations } from '../models/data-table-translations.model';\nimport { DataTableConfig } from '../models/data-table-config.model';\n\nimport { DataTableStorageMode } from '../models/data-table-storage-mode.model';\nimport { DataTableSortOrder } from '../models/data-table-sort-order.model';\nimport { DataTableSelectMode } from '../models/data-table-select-mode.model';\nimport { DropdownSelectMode } from '../../dropdown/dropdown.module';\nimport { ViewPosition } from '../../utility/models/view-position.model';\n\nexport const DATA_TABLE_CONFIG = new InjectionToken<DataTableConfig>('dataTableConfig');\n\n/**\n * Data table config service\n * Manage all the global configurations of grid which can be overridden while importing the module.\n */\n@Injectable()\nexport class DataTableConfigService implements DataTableConfig {\n  // Table base config\n  public persistTableState = false;\n  public storageMode: DataTableStorageMode = 'session';\n  public multiColumnSortable = false;\n  public showHeader = false;\n  public title = '';\n  public width = undefined;\n  public minContentHeight: string | number = 200;\n  public minContentWidth = undefined;\n  public contentHeight = undefined;\n  public pageable = false;\n  public loadOnScroll = false;\n  public loadViewDistanceRatio = 1;\n  public showIndexColumn = false;\n  public indexColumnTitle = '#';\n  public rowSelectable = false;\n  public selectMode: DataTableSelectMode = 'single';\n  public showRowSelectCheckbox = true;\n  public showRowSelectAllCheckbox = false;\n  public showSubstituteRows = false;\n  public expandableRows = false;\n  public selectOnRowClick = false;\n  public expandOnRowClick = false;\n  public autoFetch = true;\n  public showLoadingSpinner = true;\n  public selectTrackBy = 'id';\n  public filterDebounceTime = 500;\n  public filterDebounce = true;\n  public showRefreshButton = false;\n  public showColumnSelector = false;\n  public columnSelectorWidth = 240;\n  public expanderColumnWidth: string | number = 30;\n  public indexColumnWidth: string | number = 30;\n  public selectionColumnWidth: string | number = 30;\n  public showRowExpandLoadingSpinner = false;\n  public offset = 0;\n  public limit = 10;\n  public maxLimit = 100;\n  public stateKeyPrefix = 'grid_state_';\n  public baseTranslations: DataTableTranslations = {\n    noDataMessage: {\n      header: 'Whoops!',\n      body: 'No data to display. Added data will appear here.',\n    },\n    pagination: {\n      limit: 'Limit:',\n      rangeKey: 'Results:',\n      rangeSeparator: 'of',\n      nextTooltip: 'Next',\n      previousTooltip: 'Previous',\n      lastTooltip: 'Last',\n      firstTooltip: 'First'\n    },\n    columnSelector: {\n      header: 'Show/Hide Column'\n    },\n    dropdownFilter: {\n      noDataMessage: 'No Results Available',\n      filterPlaceholder: 'Search',\n      selectedOptionWrapPlaceholder: 'Options',\n      selectPlaceholder: 'Select'\n    }\n  };\n\n  // Table column config\n  public sortable = false;\n  public sortOrder: DataTableSortOrder = '';\n  public filterable = false;\n  public filterPlaceholder = 'Search';\n  public columnResizable = false;\n  public columnVisible = true;\n  public showDropdownFilter = false;\n  public showFilterClearButton = true;\n\n  // Column dropdown filter options\n  public dropdownFilterMenuPosition: ViewPosition = 'bottom-left';\n  public dropdownFilterSelectMode: DropdownSelectMode = 'multi';\n  public dropdownFilterSearchable = true;\n  public dropdownFilterSearchDebounceTime = 500;\n  public dropdownFilterSearchDebounce = true;\n  public dropdownFilterWrapDisplaySelectLimit = 1;\n  public dropdownFilterGroupByField = undefined;\n  public dropdownFilterShowSelectedOptionRemoveButton = false;\n  public dropdownFilterShowClearSelectionButton = true;\n  public dropdownFilterMenuWidth = 320;\n  public dropdownFilterMenuHeight = 250;\n  public dropdownFilterMultiSelectOptionMaxWidth = 135;\n  public dropdownFilterCloseMenuOnSelect = true;\n  public dropdownFilterDynamicDimensionCalculation = true;\n  public dropdownFilterDynamicWidthRatio = 1.25;\n  public dropdownFilterDynamicHeightRatio = 1.25;\n\n  constructor(@Inject(DATA_TABLE_CONFIG) private dataTableConfig: DataTableConfig) {\n    if (dataTableConfig) {\n      Object.assign(this, dataTableConfig);\n    }\n  }\n\n  public set translations(value: DataTableTranslations) {\n    if (!value) {\n      return;\n    }\n\n    // all keys are object type.\n    for (const [key, val] of Object.entries(value)) {\n      this.baseTranslations[key] = { ...this.baseTranslations[key], ...val };\n    }\n  }\n\n  /**\n   * Returns translations.\n   */\n  public get translations(): DataTableTranslations {\n    return this.baseTranslations;\n  }\n\n  /**\n   * Get row select checkbox column.\n   */\n  public get showRowSelectCheckboxColumn(): boolean {\n    return this.rowSelectable && this.showRowSelectCheckbox;\n  }\n}\n\n","import { EventEmitter, Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs';\n\nimport { DataTableHeaderClickEventArgs } from '../models/data-table-header-click-event-args.model';\nimport { DataTableRow } from '../models/data-table-row.model';\nimport { DataTableRowClickEventArgs } from '../models/data-table-row-click-event-args.model';\nimport { DataTableDoubleClickEventArgs } from '../models/data-table-double-click-event-args.model';\nimport { DataTableCellBindEventArgs } from '../models/data-table-cell-bind-event-args.model';\nimport { DataTableCellClickEventArgs } from '../models/data-table-cell-click-event-args.model';\n\nimport { DataFetchMode } from '../models/data-fetch-mode.enum';\n\nimport { DataTableComponent } from '../components/data-table/data-table.component';\nimport { DataTableColumnComponent } from '../components/data-table-column/data-table-column.component';\n\n/**\n * Data table event state service; Manage all internal data tale event streams.\n */\n@Injectable()\nexport class DataTableEventStateService {\n  public allRowSelectChangeStream = new EventEmitter<boolean>();\n  public dataFetchStream = new EventEmitter<DataFetchMode>();\n  public headerClickStream = new EventEmitter<DataTableHeaderClickEventArgs>();\n  public rowBindStream = new EventEmitter<DataTableRow<any>>();\n  public rowClickStream = new EventEmitter<DataTableRowClickEventArgs<any>>();\n  public rowDoubleClickStream = new EventEmitter<DataTableDoubleClickEventArgs<any>>();\n  public rowSelectChangeStream = new EventEmitter<any | any[]>();\n  public cellBindStream = new EventEmitter<DataTableCellBindEventArgs<any>>();\n  public cellClickStream = new EventEmitter<DataTableCellClickEventArgs<any>>();\n  public initStream = new EventEmitter<DataTableComponent>();\n  public dataBoundStream = new EventEmitter<void>();\n  public columnBind = new EventEmitter<DataTableColumnComponent>();\n  public fetchFilterOptionsStream = new ReplaySubject(1);\n  public staticDataSourceStream = new ReplaySubject<any[]>(1);\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataTableRow } from '../models/data-table-row.model';\nimport { DataTableDynamicRowSpanExtractorCallback } from '../models/data-table-group-field-extractor-callback.model';\nimport { DataTableFilterValueExtractCallback } from '../models/data-table-filter-value-extract-callback.model';\nimport { DataTableDataBindCallback } from '../models/data-table-data-bind-callback.model';\n\n/**\n * Data table state manager service; Manage current data table state snapshot.\n */\n@Injectable()\nexport class DataTableDataStateService {\n  public id: string;\n  public allRowSelected = false;\n  public selectedRow: any;\n  public selectedRows: any[] = [];\n  public dataRows: DataTableRow<any>[] = [];\n  public itemCount: number;\n  public tableWidth: number;\n  public dataLoading = true;\n  public substituteRows: any[] = [];\n  public heardReload = false;\n  public currentSortPriority = 0;\n\n  public relativeParentElement: HTMLElement;\n  public onFilterValueExtract: DataTableFilterValueExtractCallback;\n  public onDataBind: DataTableDataBindCallback<any>;\n  public onDynamicRowSpanExtract: DataTableDynamicRowSpanExtractorCallback<any> = () => 1;\n\n  /**\n   * Get show no data overlay status.\n   * @return True if no data overlay should be shown.\n   */\n  public get showNoDataOverlay(): boolean {\n    return !this.dataRows.length && !this.dataLoading;\n  }\n\n  /**\n   * Get data table row unique id.\n   * @param append Target identifier.\n   * @param index Target index.\n   */\n  public getUniqueId(append: string, index: number): string {\n    return `${this.id}-dt-${append}-${index}`;\n  }\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { DataTableCellColorRenderCallback } from '../../models/data-table-cell-color-render-callback.model';\nimport { DataTableRow } from '../../models/data-table-row.model';\nimport { DataTableFilterFieldMapperCallback } from '../../models/data-table-filter-field-mapper-callback.model';\nimport { DataTableFilterExpressionCallback } from '../../models/data-table-filter-expression-callback.model';\n\nimport { DropdownSelectMode } from '../../../dropdown/dropdown.module';\nimport { DataTableSortOrder } from '../../models/data-table-sort-order.model';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { ViewPosition } from '../../../utility/models/view-position.model';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Data table column component. Data table columns associated data is captured via this component.\n */\n@Component({\n  selector: 'ng-data-table-column',\n  template: ''\n})\nexport class DataTableColumnComponent implements OnInit, OnDestroy {\n  private filterValueExtractorSubscription: Subscription;\n\n  private currentSortOrder: DataTableSortOrder = '';\n  private baseSortOrder: DataTableSortOrder = '';\n\n  public actualWidth: number;\n\n  // Content Child Properties\n\n  @ContentChild('ngDataTableCell', { static: true })\n  public cellTemplate: TemplateRef<any>;\n\n  @ContentChild('ngDataTableHeader', { static: true })\n  public headerTemplate: TemplateRef<any>;\n\n  @ContentChild('ngDataTableFilter', { static: true })\n  public filterTemplate: TemplateRef<any>;\n\n  @ContentChild('ngFilterDropdownLoadingSpinner', { static: true })\n  public dropdownFilterLoadingSpinnerTemplate: TemplateRef<any>;\n\n  @ContentChild('ngFilterDropdownOption', { static: true })\n  public dropdownFilterOptionTemplate: TemplateRef<any>;\n\n  @ContentChild('ngFilterDropdownOptionGroupHeader', { static: true })\n  public dropdownFilterOptionGroupHeaderTemplate: TemplateRef<any>;\n\n  // Callback event handlers\n\n  /**\n   * Filter expression event handler callback. Used to apply custom data filter expression logic.\n   */\n  @Input()\n  public filterExpression: DataTableFilterExpressionCallback;\n\n  /**\n   * Custom filter field map event handler callback. Used to extract filter field when showDropdownFilter option is true.\n   */\n  @Input()\n  public filterFieldMapper: DataTableFilterFieldMapperCallback;\n\n  /**\n   * Cell color render event handler callback.\n   */\n  @Input()\n  public onCellColorRender: DataTableCellColorRenderCallback<any>;\n\n  // Inputs\n\n  /**\n   * Column display title.\n   */\n  @Input()\n  public title: string;\n\n  /**\n   * Columns sortable if true. Show sort indicator on column title.\n   */\n  @Input()\n  public sortable: boolean;\n\n  /**\n   * Multi column sort priority. Lowest number will get the height precedence. Usage of same precedence number in\n   * multiple columns may lead to unexpected behaviors. This priority number will be displayed in the column header\n   * when multi column sorting is enabled hence, consider indexing accordingly.\n   */\n  @Input()\n  public sortPriority: number;\n\n  /**\n   * Set initial column sort order.\n   */\n  @Input()\n  public set sortOrder(value: DataTableSortOrder) {\n    this.currentSortOrder = value;\n    this.baseSortOrder = value;\n  }\n\n  /**\n   * Get initial column sort order.\n   */\n  public get sortOrder(): DataTableSortOrder {\n    return this.currentSortOrder;\n  }\n\n  /**\n   * Column filterable if true. Show filter options on filter header row when enabled.\n   */\n  @Input()\n  public filterable: boolean;\n\n  /**\n   * Column resizeable if true. Show column resize indicator on column right corner.\n   */\n  @Input()\n  public resizable: boolean;\n\n  /**\n   * Data item mapping field name.\n   */\n  @Input()\n  public field: string;\n\n  /**\n   * Filter field identifier. Fallback to field if not provided.\n   */\n  @Input()\n  public filterField: string;\n\n  /**\n   * Sort field identifier. Fallback to field if not provided.\n   */\n  @Input()\n  public sortField: string;\n\n  /**\n   * Column title CSS class names. Use space delimiter to separate class names.\n   */\n  @Input()\n  public cssClass: string;\n\n  /**\n   * Static column width in pixels or percentage.\n   */\n  @Input()\n  public width: number | string;\n\n  /**\n   * Render column if true. Else include in column selector but not rendered.\n   */\n  @Input()\n  public visible: boolean;\n\n  /**\n   * Show filed in column selector popup if true.\n   */\n  @Input()\n  public showInColumnSelector = true; // TODO: move to base conf\n\n  /**\n   * Filter placeholder value. Placeholder text to show on filter text box. Applicable only for none dropdown filter mode.\n   */\n  @Input()\n  public filterPlaceholder: string;\n\n  /**\n   * Applied filter value on initialize.\n   */\n  @Input()\n  public filter: any;\n\n  /**\n   * Show filter clear button if true. Applicable only for none dropdown filter mode.\n   */\n  @Input()\n  public showFilterClearButton: any;\n\n  /**\n   * Resize minimum limit. Column cannot be resized to fit less than the number of pixels specified here.\n   */\n  @Input()\n  public resizeMinLimit: number;\n\n  // Dropdown filter properties\n\n  /**\n   * Show dropdown filter if true. Filter data using dropdown filter.\n   */\n  @Input()\n  public showDropdownFilter: boolean;\n\n  /**\n   * Dropdown filter menu position. Placement of filter popup menu.\n   */\n  @Input()\n  public dropdownFilterMenuPosition: ViewPosition;\n\n  /**\n   * Dropdown select mode. Filter option select mode.\n   */\n  @Input()\n  public dropdownFilterSelectMode: DropdownSelectMode;\n\n  /**\n   * Dropdown filter searchable if true. Display search box within filter option menu.\n   */\n  @Input()\n  public dropdownFilterSearchable: boolean;\n\n  /**\n   * Dropdown filter search debounce time in milliseconds. Applicable only when dropdownFilterSearchDebounce is true.\n   */\n  @Input()\n  public dropdownFilterSearchDebounceTime: number;\n\n  /**\n   * Enable dropdown filter data search debounce with provided dropdownFilterSearchDebounceTime if true.\n   */\n  @Input()\n  public dropdownFilterSearchDebounce: boolean;\n\n  /**\n   * Dropdown filter show option select checkbox.\n   */\n  @Input()\n  public dropDownFilterShowOptionSelectCheckbox: boolean;\n\n  /**\n   * Dropdown filter selected items display limit.\n   */\n  @Input()\n  public dropdownFilterWrapDisplaySelectLimit: number;\n\n  /**\n   * Dropdown filter group by field name in item schema.\n   */\n  @Input()\n  public dropdownFilterGroupByField: string;\n\n  /**\n   * Dropdown filter show selected option remove button if true.\n   */\n  @Input()\n  public dropdownFilterShowSelectedOptionRemoveButton: boolean;\n\n  /**\n   * Dropdown filter show all select options clear button if true.\n   */\n  @Input()\n  public dropdownFilterShowClearSelectionButton: boolean;\n\n  /**\n   * Dropdown filter menu width in pixels.\n   */\n  @Input()\n  public dropdownFilterMenuWidth: number;\n\n  /**\n   * Dropdown filter menu height in pixels.\n   */\n  @Input()\n  public dropdownFilterMenuHeight: number;\n\n  /**\n   * Dropdown filter multi select option max width.\n   */\n  @Input()\n  public dropdownFilterMultiSelectOptionMaxWidth: number;\n\n  /**\n   * Dropdown filter close menu on select if true.\n   */\n  @Input()\n  public dropdownFilterCloseMenuOnSelect: boolean;\n\n  /**\n   * Dynamically calculate Dropdown filter menu dimensions relative to column width; dropdownFilterMenuWidth and\n   * dropdownFilterMenuHeight configuration are ignored when true.\n   */\n  @Input()\n  public dropdownFilterDynamicDimensionCalculation: boolean;\n\n  /**\n   * Dynamic dropdown view width ratio. Used for dynamic dimension calculation.\n   */\n  @Input()\n  public dropdownFilterDynamicWidthRatio: number;\n\n  /**\n   * Dynamic dropdown view height ratio. Used for dynamic dimension calculation.\n   */\n  @Input()\n  public dropdownFilterDynamicHeightRatio: number;\n\n  constructor(\n    private dataTableConfigService: DataTableConfigService,\n    private eventStateService: DataTableEventStateService,\n    private dataStateService: DataTableDataStateService) {\n    // Table column config\n    this.sortable = dataTableConfigService.sortable;\n    this.currentSortOrder = dataTableConfigService.sortOrder;\n    this.filterable = dataTableConfigService.filterable;\n    this.filterPlaceholder = dataTableConfigService.filterPlaceholder;\n    this.resizable = dataTableConfigService.columnResizable;\n    this.visible = dataTableConfigService.columnVisible;\n    this.showDropdownFilter = dataTableConfigService.showDropdownFilter;\n    this.showFilterClearButton = dataTableConfigService.showFilterClearButton;\n\n    // Dropdown filter config\n    this.dropdownFilterMenuPosition = dataTableConfigService.dropdownFilterMenuPosition;\n    this.dropdownFilterSelectMode = dataTableConfigService.dropdownFilterSelectMode;\n    this.dropdownFilterSearchable = dataTableConfigService.dropdownFilterSearchable;\n    this.dropdownFilterSearchDebounceTime = dataTableConfigService.dropdownFilterSearchDebounceTime;\n    this.dropdownFilterSearchDebounce = dataTableConfigService.dropdownFilterSearchDebounce;\n    this.dropdownFilterWrapDisplaySelectLimit = dataTableConfigService.dropdownFilterWrapDisplaySelectLimit;\n    this.dropdownFilterGroupByField = dataTableConfigService.dropdownFilterGroupByField;\n    this.dropdownFilterShowSelectedOptionRemoveButton = dataTableConfigService.dropdownFilterShowSelectedOptionRemoveButton;\n    this.dropdownFilterShowClearSelectionButton = dataTableConfigService.dropdownFilterShowClearSelectionButton;\n    this.dropdownFilterMenuWidth = dataTableConfigService.dropdownFilterMenuWidth;\n    this.dropdownFilterMenuHeight = dataTableConfigService.dropdownFilterMenuHeight;\n    this.dropdownFilterMultiSelectOptionMaxWidth = dataTableConfigService.dropdownFilterMultiSelectOptionMaxWidth;\n    this.dropdownFilterCloseMenuOnSelect = dataTableConfigService.dropdownFilterCloseMenuOnSelect;\n    this.dropdownFilterDynamicDimensionCalculation = dataTableConfigService.dropdownFilterDynamicDimensionCalculation;\n    this.dropdownFilterDynamicWidthRatio = dataTableConfigService.dropdownFilterDynamicWidthRatio;\n    this.dropdownFilterDynamicHeightRatio = dataTableConfigService.dropdownFilterDynamicHeightRatio;\n  }\n\n  /**\n   * Reset data sort order.\n   */\n  public resetSortOrder(): void {\n    this.currentSortOrder = this.baseSortOrder;\n  }\n\n  /**\n   * Get dynamic cell color.\n   * @param row Data row object.\n   * @return Cell color string.\n   */\n  public getCellColor(row: DataTableRow<any>) {\n    if (this.onCellColorRender !== undefined) {\n      return this.onCellColorRender(row, this);\n    }\n  }\n\n  /**\n   * Get new sort order upon sort click.\n   * @return New sort order enum value.\n   */\n  public getNewSortOrder(): DataTableSortOrder {\n    let newSortOrder: DataTableSortOrder;\n    switch (this.sortOrder) {\n      case 'asc':\n        newSortOrder = 'desc';\n        break;\n      case 'desc':\n        newSortOrder = '';\n        break;\n      case '':\n        newSortOrder = 'asc';\n        break;\n    }\n\n    return newSortOrder;\n  }\n\n  /**\n   * Get current sort state icon css class enabled state.\n   * @return Sort order icon css class collection object.\n   */\n  public getSortIconClass(): any {\n    return {\n      'sort-asc': this.sortOrder === 'asc',\n      'sort-dsc': this.sortOrder === 'desc',\n      'sort-reset': !this.sortOrder\n    };\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.filterValueExtractorSubscription) {\n      this.filterValueExtractorSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Component initialize lifecycle event handler.\n   */\n  public ngOnInit(): void {\n    if (!this.cssClass && this.field) {\n      if (/^[a-zA-Z0-9_]+$/.test(this.field)) {\n        this.cssClass = 'column-' + this.field;\n      } else {\n        this.cssClass = 'column-' + this.field.replace(/[^a-zA-Z0-9_]/g, '');\n      }\n    }\n\n    this.eventStateService.columnBind.emit(this);\n\n    if (this.dataTableConfigService.multiColumnSortable && this.sortable) {\n      if (this.sortOrder === '') {\n        if (this.sortPriority !== undefined) {\n          throw Error('[sortPriority] should be ignored when multi column sorting is enabled with natural sort order.');\n        }\n      } else {\n        if (this.sortPriority === undefined) {\n          throw Error('[sortPriority] is required when multi column sorting is enabled with an explicit sort order.');\n        }\n      }\n\n      if (this.sortPriority < 1) {\n        throw Error('[sortPriority] must be greater than 1.');\n      }\n\n      if (this.dataStateService.currentSortPriority < this.sortPriority) {\n        this.dataStateService.currentSortPriority = this.sortPriority;\n      }\n    }\n  }\n}\n","/**\n * Data table export mode model.\n */\nexport enum DataFetchMode {\n  /**\n   * Re-fetch data from source and load data after resetting table state.\n   */\n  HARD_RELOAD,\n\n  /**\n   * Re-fetch data from source and load data without resetting table state.\n   */\n  SOFT_RELOAD,\n\n  /**\n   * Load data without changing table state state.\n   */\n  SOFT_LOAD\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DataTableFilterEventArgs } from '../../models/data-table-filter-event-args.model';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\n\n/**\n * Data table column filter header component. Apply columns associated data filtering.\n */\n@Component({\n  exportAs: 'ngDataTableColumnFilterHeader',\n  // tslint:disable-next-line\n  selector: '[ngDataTableColumnFilterHeader]',\n  templateUrl: './data-table-column-filter-header.component.html'\n})\nexport class DataTableColumnFilterHeaderComponent implements OnInit, OnDestroy {\n  private columnFilterStream = new Subject();\n\n  private customFilterSubscription: Subscription;\n  private columnFilterSubscription: Subscription;\n\n  public customFilterStream = new EventEmitter<DataTableFilterEventArgs>();\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  constructor(public config: DataTableConfigService, private eventStateService: DataTableEventStateService) {}\n\n  /**\n   * Component initialize lifecycle event handler.\n   */\n  public ngOnInit(): void {\n    this.initCustomFilterEvent();\n    this.initDebounceDefaultFilterEvent();\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.customFilterSubscription) {\n      this.customFilterSubscription.unsubscribe();\n    }\n\n    if (this.columnFilterSubscription) {\n      this.columnFilterSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Initialize custom filter event.\n   */\n  private initCustomFilterEvent(): void {\n    this.customFilterSubscription = this.customFilterStream.subscribe((filterEventArgs: DataTableFilterEventArgs) => {\n      filterEventArgs.column.filter = filterEventArgs.filter;\n      this.onFilter();\n    });\n  }\n\n  /**\n   * Initialize debounce default filtering logic.\n   */\n  private initDebounceDefaultFilterEvent(): void {\n    this.columnFilterSubscription = this.columnFilterStream.pipe(debounceTime(this.config.filterDebounceTime)).subscribe(() => {\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    });\n  }\n\n  /**\n   * Filter event handler.\n   */\n  public onFilter(): void {\n    if (this.config.filterDebounce) {\n      this.columnFilterStream.next();\n    } else {\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { DataTableScrollPoint } from '../models/data-table-scroll-point.model';\n\n/**\n * Scroll position stream service; Manage common scroll position observable.\n */\n@Injectable()\nexport class DataTableScrollPositionService {\n  public scrollPositionStream = new Subject<DataTableScrollPoint>();\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { DataTableFilterEventArgs } from '../../models/data-table-filter-event-args.model';\nimport { DataTableFilterOption } from '../../models/data-table-filter-option.model';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\nimport { DropdownComponent } from '../../../dropdown/components/dropdown/dropdown.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableScrollPositionService } from '../../services/data-table-scroll-position.service';\nimport { DataTableScrollPoint } from '../../../data-table/models/data-table-scroll-point.model';\n\n/**\n * Column filter template component. Render column filter template via this component.\n */\n@Component({\n  selector: 'ng-data-table-column-filter-template',\n  templateUrl: './data-table-column-filter-template.component.html'\n})\nexport class DataTableColumnFilterTemplateComponent implements OnInit, OnDestroy {\n  @Input()\n  public column: DataTableColumnComponent;\n\n  @Input()\n  public customFilterStream: Observable<DataTableFilterEventArgs>;\n\n  @Input()\n  public index: number;\n\n  @Output()\n  public filter = new EventEmitter();\n\n  public filterDataStream = new Subject<DataTableFilterOption[]>();\n\n  private fetchFilterOptionsStreamSubscription: Subscription;\n  private scrollPositionStreamSubscription: Subscription;\n\n  private filterDropdown: DropdownComponent;\n\n  constructor(\n    public config: DataTableConfigService,\n    public dataStateService: DataTableDataStateService,\n    private eventStateService: DataTableEventStateService,\n    private scrollPositionService: DataTableScrollPositionService\n  ) {}\n\n  /**\n   * Component initialize lifecycle event.\n   */\n  public ngOnInit(): void {\n    if (this.column.showDropdownFilter) {\n      this.scrollPositionStreamSubscription = this.scrollPositionService.scrollPositionStream\n        .subscribe((pos: DataTableScrollPoint) => {\n          if (pos.isHorizontal) {\n            this.filterDropdown.close();\n          }\n        });\n\n      if (this.dataStateService.onFilterValueExtract) {\n        this.fetchFilterOptionsStreamSubscription = this.eventStateService.fetchFilterOptionsStream\n          .pipe(\n            switchMap(() => {\n              return this.dataStateService.onFilterValueExtract(this.column);\n            })\n          )\n          .subscribe((options: DataTableFilterOption[]) => {\n            setTimeout(() => this.filterDataStream.next(options), 0); // TODO: remove the timeout\n          });\n      }\n    }\n  }\n\n  /**\n   * Component destroy lifecycle event.\n   */\n  public ngOnDestroy(): void {\n    if (this.fetchFilterOptionsStreamSubscription) {\n      this.fetchFilterOptionsStreamSubscription.unsubscribe();\n    }\n\n    if (this.scrollPositionStreamSubscription) {\n      this.scrollPositionStreamSubscription.unsubscribe();\n    }\n\n    this.filterDataStream.complete();\n  }\n\n  public onFilterDropdownInit(filterDropdown: DropdownComponent): void {\n    this.filterDropdown = filterDropdown;\n  }\n\n  /**\n   * Clear current column filter value.\n   */\n  public clearFilter(): void {\n    this.column.filter = '';\n    this.filter.emit();\n  }\n}\n","const splitPathExpression = /[,[\\].]+?/;\n\nexport function get(obj: any, path: string): any {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n\n  return String.prototype.split.call(path, splitPathExpression)\n    .filter(Boolean)\n    .reduce((res, key) => {\n      if (res !== null && typeof res === 'object') {\n        return res[key];\n      }\n\n      return undefined;\n    }, obj);\n}\n\nexport function orderBy(collection: any[], fields: string[], orders: Array<'asc'|'desc'>): any {\n  console.log(fields);\n  return collection.concat().sort((a: any, b: any) => {\n    for (let i = 0; i < fields.length; i++) {\n      const field = fields[i];\n      const order = orders[i];\n      if (a[field] > b[field]) {\n        return order === 'asc' ? 1 : -1;\n      }\n\n      if (a[field] < b[field]) {\n        return order === 'asc' ? -1 : 1;\n      }\n    }\n\n    return 0;\n  });\n}\n","import { Directive, EventEmitter, OnInit, Output } from '@angular/core';\n\n/**\n * Element initialize directive; Notify on target element initialize.\n */\n@Directive({\n  selector: '[ngInit]'\n})\nexport class InitDirective implements OnInit {\n  @Output()\n  public ngInit = new EventEmitter();\n\n  /**\n   * On directive initialize.\n   */\n  public ngOnInit(): void {\n    this.ngInit.emit();\n  }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n/**\n * Element focus directive; Set focus to target element on initialize.\n */\n@Directive({\n  selector: '[ngFocus]'\n})\nexport class FocusDirective implements OnInit {\n  constructor(private el: ElementRef) {}\n\n  /**\n   * On directive initialize.\n   */\n  public ngOnInit(): void {\n    this.el.nativeElement.focus();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pixel converter pipe.\n * Append 'px' if value is number type, else return the same.\n */\n@Pipe({\n  name: 'ngPx'\n})\nexport class PixelConverterPipe implements PipeTransform {\n  /**\n   * Pipe transform implementation.\n   * @param value Source value.\n   * @returns Converted pixel value.\n   */\n  public transform(value: string | number): string {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (typeof value === 'number') {\n      return `${value}px`;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Utility config service holds all the global configurations of utility which can be overridden while\n * importing the module.\n */\n@Injectable()\nexport class UtilityConfigService {}\n","import { Injectable } from '@angular/core';\n\nexport type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\n\n/**\n * Element drag and drop service.\n */\n@Injectable()\nexport class DragAndDropService {\n  /**\n   * Register drag and drop event.\n   * @param event Mouse event reference.\n   * @param move Mouse move event handler.\n   * @param up Mouse up Event handler.\n   */\n  public drag(event: MouseEvent, { move, up }: { move: MoveHandler; up?: UpHandler }): void {\n    const startX = event.pageX;\n    const startY = event.pageY;\n    let x = startX;\n    let y = startY;\n    let moved = false;\n\n    const mouseMoveHandler = (mouseMoveEvent: MouseEvent): void => {\n      const dx = mouseMoveEvent.pageX - x;\n      const dy = mouseMoveEvent.pageY - y;\n      x = mouseMoveEvent.pageX;\n      y = mouseMoveEvent.pageY;\n      if (dx || dy) {\n        moved = true;\n      }\n\n      move(mouseMoveEvent, dx, dy, x, y);\n\n      mouseMoveEvent.preventDefault(); // to avoid text selection\n    };\n\n    const mouseUpHandler = (mouseUpEvent: MouseEvent): void => {\n      x = mouseUpEvent.pageX;\n      y = mouseUpEvent.pageY;\n\n      document.removeEventListener('mousemove', mouseMoveHandler);\n      document.removeEventListener('mouseup', mouseUpHandler);\n\n      if (up) {\n        up(mouseUpEvent, x, y, moved);\n      }\n    };\n\n    document.addEventListener('mousemove', mouseMoveHandler);\n    document.addEventListener('mouseup', mouseUpHandler);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Global reference service; List all global javascript references here.\n */\n@Injectable()\nexport class GlobalRefService {\n  private scrollbarWidthValue: number;\n\n  constructor() {\n    this.setScrollbarWidth();\n  }\n\n  /**\n   * Set scrollbar width of current browser environment; Ony set on browser environment to support SSR.\n   */\n  public setScrollbarWidth(): void {\n    if (this.scrollbarWidthValue !== undefined) {\n      return;\n    }\n\n    if (this.isBrowser) {\n      const outer = document.createElement('div');\n      outer.style.visibility = 'hidden';\n      outer.style.width = '100px';\n      outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n\n      document.body.appendChild(outer);\n\n      const widthNoScroll = outer.offsetWidth;\n      // force scrollbars\n      outer.style.overflow = 'scroll';\n\n      // add inner div\n      const inner = document.createElement('div');\n      inner.style.width = '100%';\n      outer.appendChild(inner);\n\n      const widthWithScroll = inner.offsetWidth;\n\n      // remove divs\n      outer.parentNode.removeChild(outer);\n\n      this.scrollbarWidthValue = widthNoScroll - widthWithScroll;\n    }\n  }\n\n  /**\n   * Get scrollbar width.\n   * @returns Scroll bar width.\n   */\n  public get scrollbarWidth(): number {\n    return this.scrollbarWidthValue;\n  }\n  /**\n   * Get window reference.\n   * @return Window reference.\n   */\n  public get window(): Window {\n    return window;\n  }\n\n  /**\n   * Is browser environment.\n   * @return True if current environment is browser.\n   */\n  public get isBrowser(): boolean {\n    return typeof window !== 'undefined';\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { fromEvent, Subject, Observable } from 'rxjs';\n\nimport { GlobalRefService } from './global-ref.service';\n\n/**\n * Resize handler service; Window resize global event handler.\n */\n@Injectable()\nexport class ResizeService {\n  public resize: Observable<Event>;\n\n  constructor(private globalRefService: GlobalRefService) {\n    if (this.globalRefService.isBrowser) {\n      this.resize = fromEvent(this.globalRefService.window, 'resize');\n    } else {\n      this.resize = new Subject();\n    }\n  }\n}\n","import { Injector, ComponentFactoryResolver, EmbeddedViewRef, ApplicationRef, ComponentRef, Type, Renderer2 } from '@angular/core';\n\nimport { take } from 'rxjs/operators';\n\nimport { Subscription } from 'rxjs';\n\nimport { ComponentLoader } from './component-loader.interface';\n\nimport { GlobalRefService } from './global-ref.service';\nimport { ResizeService } from './resize.service';\n\nimport { ComponentLoaderOptions } from '../models/component-loader-options.model';\n\n/**\n * Popover dynamic component loader; Responsible of dynamically rendering angular components to show popover layout.\n */\nexport class PopoverComponentLoader<T> implements ComponentLoader<T> {\n  private componentReference: ComponentRef<T>;\n  private isVisible: boolean;\n  private clickListener: () => void;\n  private touchStartListener: () => void;\n  private resizeEventSubscription: Subscription;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private globalRefService: GlobalRefService,\n    private renderer: Renderer2,\n    private resizeService: ResizeService\n  ) {\n    this.isVisible = false;\n  }\n\n  /**\n   * Register close on click outside event; Hide event is triggered only if click target is not included in\n   * exclusion elements collection.\n   * @param exclude - Exclude DOM element reference collection.\n   */\n  private registerClickOutside(...exclude: HTMLElement[]): void {\n    const trackOutsideClick = (event: Event) => {\n      if (!exclude.some(el => {\n        return el.contains(event.target as HTMLElement);\n      })) {\n        this.hide();\n      }\n    };\n\n    this.clickListener = this.renderer.listen('document', 'click', trackOutsideClick);\n    this.touchStartListener = this.renderer.listen('document', 'touchstart', trackOutsideClick);\n  }\n\n  /**\n   * Set dynamic popover position relative to parent.\n   * @param parentElement Parent element reference.\n   * @param options Component loader options.\n   */\n  private setPosition(parentElement: HTMLElement, options: ComponentLoaderOptions): void {\n    const holderElement =  options.relativeParentElement || parentElement;\n    const bodyClientRect = holderElement.getBoundingClientRect();\n    const elementClientRect = parentElement.getBoundingClientRect();\n\n    let left = 0;\n    let top = 0;\n\n    if (options.position.includes('right')) {\n      left = parentElement.offsetWidth;\n    }\n\n    if (options.position.includes('bottom')) {\n      top = parentElement.offsetHeight;\n    }\n\n    const componentElement = this.componentReference.location.nativeElement as HTMLElement;\n    componentElement.style.top = `${elementClientRect.top - bodyClientRect.top + top + options.floatTop}px`;\n    componentElement.style.left = `${elementClientRect.left - bodyClientRect.left + left + options.floatLeft}px`;\n    componentElement.style.position = 'absolute';\n    componentElement.style.display = 'block';\n\n    const childElement = componentElement.firstElementChild as HTMLElement;\n    if (childElement) {\n      if (options.position.includes('right')) {\n        childElement.style.right = '0px';\n      }\n\n      if (options.position.includes('top')) {\n        childElement.style.bottom = '0px';\n      }\n\n      childElement.style.position = 'absolute';\n    }\n\n    this.resizeEventSubscription = this.resizeService.resize.pipe(take(1)).subscribe(() => {\n      this.hide();\n    });\n  }\n\n  /**\n   * Render component if not available, else display hidden component.\n   * @param component Component class type.\n   * @param parentElement Parent element to append the target component.\n   * @param injector Component injector reference.\n   * @param options Component loader options object.\n   * @return Rendered component reference.\n   */\n  public show(component: Type<T>, parentElement: HTMLElement, injector: Injector, options: ComponentLoaderOptions): T {\n    options = Object.assign(\n      {\n        closeOnOutsideClick: true,\n        floatLeft: 0,\n        floatTop: 0,\n        position: 'bottom-left'\n      },\n      options\n    );\n\n    if (this.componentReference) {\n      this.setPosition(parentElement, options);\n      this.isVisible = true;\n      return;\n    }\n\n    // 1. Create a component reference from the component\n    this.componentReference = this.componentFactoryResolver.resolveComponentFactory(component).create(injector);\n\n    if (options.context) {\n      Object.assign(this.componentReference.instance, options.context);\n    }\n\n    // 2. Attach component to the appRef so that it's inside the ng component tree\n    this.appRef.attachView(this.componentReference.hostView);\n\n    // 3. Get DOM element from component\n    const domElem = (this.componentReference.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\n    this.setPosition(parentElement, options);\n\n    // 4. Append DOM element to the body\n    (options.relativeParentElement || parentElement).appendChild(domElem);\n\n    // Trigger change detection\n    this.componentReference.changeDetectorRef.markForCheck();\n    this.componentReference.changeDetectorRef.detectChanges();\n\n    this.isVisible = true;\n\n    if (options.closeOnOutsideClick) {\n      this.registerClickOutside(parentElement, this.componentReference.location.nativeElement);\n    }\n\n    return this.componentReference.instance;\n  }\n\n  /**\n   * Hide component if visible.\n   * @return Rendered component reference.\n   */\n  public hide(): T {\n    if (this.componentReference) {\n      this.componentReference.location.nativeElement.style.display = 'none';\n      this.isVisible = false;\n      return this.componentReference.instance;\n    }\n  }\n\n  /**\n   * Toggle component display state or render if not available.\n   * @param component Component class type.\n   * @param parentElement Parent element to append the target component.\n   * @param injector Component injector reference.\n   * @param options Component loader options object.\n   * @return Rendered component reference.\n   */\n  public toggle(component: Type<T>, parentElement: HTMLElement, injector: Injector, options?: ComponentLoaderOptions): T {\n    return this.isVisible ? this.hide() : this.show(component, parentElement, injector, options);\n  }\n\n  /**\n   * Dispose rendered component reference and bindings.\n   */\n  public dispose(): void {\n    if (this.resizeEventSubscription) {\n      this.resizeEventSubscription.unsubscribe();\n    }\n\n    if (this.componentReference) {\n      this.appRef.detachView(this.componentReference.hostView);\n      this.componentReference.destroy();\n    }\n\n    if (this.clickListener) {\n      this.clickListener();\n      this.clickListener = null;\n    }\n\n    if (this.touchStartListener) {\n      this.touchStartListener();\n      this.touchStartListener = null;\n    }\n\n    this.componentReference = null;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Renderer2 } from '@angular/core';\n\nimport { ComponentLoader } from './component-loader.interface';\n\nimport { GlobalRefService } from './global-ref.service';\nimport { ResizeService } from './resize.service';\n\nimport { PopoverComponentLoader } from './popover-component-loader.class';\n\n/**\n * Popover component loader factory service.\n */\n@Injectable()\nexport class PopoverComponentLoaderFactoryService {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private globalRefService: GlobalRefService,\n    private resizeService: ResizeService\n  ) {}\n\n  /**\n   * Create new component loader.\n   * @param renderer Angular renderer reference.\n   * @return Popover component loader reference.\n   */\n  public createLoader<T>(renderer: Renderer2): ComponentLoader<T> {\n    return new PopoverComponentLoader<T>(this.componentFactoryResolver, this.appRef, this.globalRefService, renderer, this.resizeService);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Common validation regular expressions.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorService {\n\n  /**\n   * Unique id value validation patten expression.\n   */\n  public static readonly idPatternValidatorExpression = new RegExp('^[A-Za-z]+[\\\\w\\\\-]*$');\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InitDirective } from './directives/init.directive';\nimport { FocusDirective } from './directives/focus.directive';\n\nimport { PixelConverterPipe } from './pipes/pixel-converter.pipe';\n\nimport { UtilityConfigService } from './services/utility-config.service';\nimport { DragAndDropService } from './services/drag-and-drop.service';\nimport { GlobalRefService } from './services/global-ref.service';\nimport { PopoverComponentLoaderFactoryService } from './services/popover-component-loader-factory.service';\nimport { ResizeService } from './services/resize.service';\nimport { ValidatorService } from './services/validator.service';\n\nconst DIRECTIVES = [InitDirective, FocusDirective];\n\nconst PIPES = [PixelConverterPipe];\n\nconst PROVIDERS = [DragAndDropService, GlobalRefService, PopoverComponentLoaderFactoryService, ResizeService, ValidatorService];\n\n/**\n * Module representing utility providers, directives and pipes.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...DIRECTIVES, ...PIPES],\n  providers: [...PROVIDERS],\n  exports: [...DIRECTIVES, ...PIPES]\n})\nexport class UtilityModule {\n  /**\n   * Set module root configuration overrides.\n   * @return Module with custom providers.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: UtilityModule,\n      providers: [UtilityConfigService]\n    };\n  }\n}\n\nexport { ComponentLoader } from './services/component-loader.interface';\n\nexport { DragAndDropService } from './services/drag-and-drop.service';\nexport { GlobalRefService } from './services/global-ref.service';\nexport { UtilityConfigService } from './services/utility-config.service';\nexport { PopoverComponentLoaderFactoryService } from './services/popover-component-loader-factory.service';\n\nexport { PopoverComponentLoader } from './services/popover-component-loader.class';\n","import { Component, Input } from '@angular/core';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DragAndDropService } from '../../../utility/utility.module';\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Column title header component. Render data table column headers.\n */\n@Component({\n  exportAs: 'ngDataTableColumnTitleHeader',\n  // tslint:disable-next-line\n  selector: '[ngDataTableColumnTitleHeader]',\n  templateUrl: './data-table-column-title-header.component.html'\n})\nexport class DataTableColumnTitleHeaderComponent {\n  private resizeInProgress = false;\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  constructor(\n    private dragAndDropService: DragAndDropService,\n    private eventStateService: DataTableEventStateService,\n    public dataStateService: DataTableDataStateService,\n    public config: DataTableConfigService\n  ) {}\n\n  /**\n   * Header click event handler.\n   * @param column Data table column component reference.\n   * @param event Mouse event arguments object.\n   */\n  public onHeaderClick(column: DataTableColumnComponent, event: MouseEvent): void {\n    if (!this.resizeInProgress) {\n      this.sortData(column);\n      this.eventStateService.headerClickStream.emit({ column, event });\n    } else {\n      this.resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n    }\n  }\n\n  /**\n   * Sort data event handler.\n   * @param column Data table column component reference.\n   */\n  private sortData(column: DataTableColumnComponent): void {\n    if (column.sortable) {\n      const prevSortOrder = column.sortOrder;\n      if (column.sortOrder) {\n        column.sortOrder = column.getNewSortOrder();\n      } else {\n        if (!this.config.multiColumnSortable) {\n          const sortColumns = this.columns.filter(item => item.sortable);\n          sortColumns.forEach((sortColumn: DataTableColumnComponent) => {\n            if (sortColumn !== column) {\n              sortColumn.sortOrder = '';\n            }\n          });\n        }\n\n        column.sortOrder = 'asc';\n      }\n\n      if (this.config.multiColumnSortable) {\n        if (column.sortOrder === '') {\n          const sortColumns = this.columns.filter(item => item.sortable);\n          sortColumns.forEach((sortColumn: DataTableColumnComponent) => {\n            if (sortColumn !== column && sortColumn.sortPriority > column.sortPriority) {\n              --sortColumn.sortPriority;\n            }\n          });\n\n          column.sortPriority = undefined;\n          --this.dataStateService.currentSortPriority;\n        } else {\n          if (!prevSortOrder) {\n            column.sortPriority = ++this.dataStateService.currentSortPriority;\n          }\n        }\n      }\n\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    }\n  }\n\n  /**\n   * Set column width.\n   * @param width Width value in pixels.\n   * @param column Data table column component reference.\n   */\n  public setColumnWidth(width: number, column: DataTableColumnComponent): void {\n    column.actualWidth = width;\n  }\n\n  /**\n   * Column resize event handler.\n   * @param event Resize mouse event.\n   * @param column Data table column component.\n   * @param columnElement Table header cell element DOM reference.\n   */\n  public onColumnResize(event: MouseEvent, column: DataTableColumnComponent, columnElement: HTMLTableHeaderCellElement): void {\n    this.resizeInProgress = true;\n\n    this.dragAndDropService.drag(event, {\n      move: (moveEvent: MouseEvent, dx: number) => {\n        const newWidth = columnElement.offsetWidth + dx;\n        if (column.resizeMinLimit !== undefined && newWidth < column.resizeMinLimit) {\n          return;\n        }\n\n        column.actualWidth = newWidth;\n        let totalWidth = 0;\n\n        this.columns.forEach(col => {\n          col.width = col.actualWidth;\n          totalWidth += col.width;\n        });\n\n        this.dataStateService.tableWidth = totalWidth;\n      }\n    });\n  }\n\n  /**\n   * Set all row selected state.\n   * @param value All row selected status.\n   */\n  public set allRowSelected(value: boolean) {\n    this.dataStateService.allRowSelected = value;\n    this.allRowSelectedChanged(this.dataStateService.allRowSelected);\n    this.eventStateService.allRowSelectChangeStream.emit(this.dataStateService.allRowSelected);\n  }\n\n  /**\n   * Get all row selected state.\n   */\n  public get allRowSelected(): boolean {\n    return this.dataStateService.allRowSelected;\n  }\n\n  /**\n   * All row select change event handler.\n   * @param selectedState Row selected status.\n   */\n  private allRowSelectedChanged(selectedState: boolean): void {\n    this.dataStateService.dataRows.forEach(row => {\n      const id = get(row.item, this.config.selectTrackBy);\n      const index = this.dataStateService.selectedRows.indexOf(id);\n      if (selectedState && index < 0) {\n        this.dataStateService.selectedRows.push(id);\n      } else if (!selectedState && index > -1) {\n        this.dataStateService.selectedRows.splice(index, 1);\n      }\n\n      row.selected = selectedState;\n    });\n\n    this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRows);\n  }\n\n  /**\n   * Get all row select checkbox display status.\n   * @return True if all row select checkbox should be displayed.\n   */\n  public get showAllRowSelectCheckbox(): boolean {\n    return this.config.selectMode === 'multi' && this.config.showRowSelectAllCheckbox;\n  }\n\n  public showSortPriorityLabel(column: DataTableColumnComponent): boolean {\n    return !!(this.config.multiColumnSortable && this.dataStateService.currentSortPriority > 1 && column.sortPriority);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableConfigService } from '../../services/data-table-config.service';\n\n/**\n * Data table column selector component. Toggle display state of columns via this popup component.\n */\n@Component({\n  selector: 'ng-data-table-column-selector',\n  templateUrl: './data-table-column-selector.component.html'\n})\nexport class DataTableColumnSelectorComponent {\n  constructor(public dataStateService: DataTableDataStateService, public config: DataTableConfigService) {}\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  @Input()\n  public width: number|string;\n}\n","import { Component, Injector, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { ComponentLoader, PopoverComponentLoaderFactoryService } from '../../../utility/utility.module';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnSelectorComponent } from '../data-table-column-selector/data-table-column-selector.component';\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Data table header component. Render table title header with column selector widget.\n */\n@Component({\n  selector: 'ng-data-table-header',\n  templateUrl: './data-table-header.component.html'\n})\nexport class DataTableHeaderComponent implements OnDestroy {\n  private componentLoader: ComponentLoader<DataTableColumnSelectorComponent>;\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  constructor(\n    private componentLoaderFactory: PopoverComponentLoaderFactoryService,\n    private injector: Injector,\n    private eventStateService: DataTableEventStateService,\n    private renderer: Renderer2,\n    public dataStateService: DataTableDataStateService,\n    public config: DataTableConfigService\n  ) {\n    this.componentLoader = this.componentLoaderFactory.createLoader<DataTableColumnSelectorComponent>(this.renderer);\n  }\n\n  /**\n   * Toggle column selector.\n   * @param element DOM element reference.\n   */\n  public toggleColumnSelector(element: HTMLElement): void {\n    this.componentLoader.toggle(DataTableColumnSelectorComponent, element, this.injector, {\n      // relativeParent: element, // this.dataStateService.relativeParentElement,\n      context: {\n        columns: this.columns,\n        width: this.config.columnSelectorWidth,\n      },\n      position: 'bottom-right'\n    });\n  }\n\n  /**\n   * On data reload click event handler.\n   */\n  public onReload(): void {\n    this.eventStateService.dataFetchStream.next(DataFetchMode.HARD_RELOAD);\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    this.componentLoader.dispose();\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\n\n/**\n * Data table column group component. This component wraps data table column groups.\n */\n@Component({\n  exportAs: 'ngDataTableColGroup',\n  // tslint:disable-next-line\n  selector: '[ngDataTableColGroup]',\n  templateUrl: './data-table-col-group.component.html'\n})\nexport class DataTableColGroupComponent {\n  @Input()\n  public columns: DataTableColumnComponent;\n\n  constructor(public config: DataTableConfigService) {}\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { ResizeService } from '../../../utility/services/resize.service';\n\n/**\n * Data table pagination component. Render data table paginator widget.\n */\n@Component({\n  selector: 'ng-data-table-pagination',\n  templateUrl: './data-table-pagination.component.html'\n})\nexport class DataTablePaginationComponent implements OnInit {\n  @ViewChild('paginationContainer', { static: true })\n  private paginationContainer: ElementRef<HTMLElement>;\n\n  public isMobile = false;\n\n  constructor(\n    public config: DataTableConfigService,\n    public dataStateService: DataTableDataStateService,\n    private eventStateService: DataTableEventStateService,\n    private resizeService: ResizeService\n  ) {}\n\n  /**\n   * Set mobile mode state.\n   */\n  private setMobileModeState(): void {\n    this.isMobile = this.paginationContainer.nativeElement.clientWidth < 767;\n  }\n\n  /**\n   * First page click event handler.\n   */\n  public firstPageClick(): void {\n    this.config.offset = 0;\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Previous page click event handler.\n   */\n  public previousPageClick(): void {\n    this.config.offset = this.config.offset - Math.min(this.config.limit, this.config.offset);\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Next page click event handler.\n   */\n  public nextPageClick(): void {\n    this.config.offset = this.config.offset + this.config.limit;\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Last page click event handler.\n   */\n  public lastPageClick(): void {\n    this.config.offset = (this.maxPage - 1) * this.config.limit;\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Get maximum page count.\n   */\n  public get maxPage(): number {\n    return Math.ceil(this.dataStateService.itemCount / this.config.limit);\n  }\n\n  /**\n   * Get page number.\n   */\n  public get page(): number {\n    return Math.floor(this.config.offset / this.config.limit) + 1;\n  }\n\n  /**\n   * Check limit invalid status. True if limit is invalid.\n   * @param element Limit input DOM element.\n   * @return Invalid status.\n   */\n  public isInvalidLimit(element: HTMLInputElement): boolean {\n    const limit = Number(element.value);\n    return element.value === '' || limit > this.config.maxLimit || limit < 1;\n  }\n\n  /**\n   * On page size change event handler.\n   * @param element HTML input element.\n   */\n  public onPageSizeChange(element: HTMLInputElement): void {\n    if (this.isInvalidLimit(element)) {\n      element.value = String(this.config.limit);\n      return;\n    }\n\n    const limit = Number(element.value);\n    if (this.config.limit !== limit) {\n      this.config.offset = 0;\n      this.config.limit = limit;\n      this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n    }\n  }\n\n  /**\n   * On page size revert event handler.\n   * @param element HTML input element.\n   */\n  public onPageSizeRevert(element: HTMLInputElement): void {\n    element.value = String(this.config.limit);\n  }\n\n  /**\n   * Is invalid page index; True if page index is invalid.\n   * @param element Page index DOM element.\n   * @return Invalid status.\n   */\n  public isInvalidPageIndex(element: HTMLInputElement): boolean {\n    const page = Number(element.value);\n    return element.value === '' || page > this.maxPage || page < 1;\n  }\n\n  /**\n   * On page size change event handler.\n   * @param element HTML input element.\n   */\n  public onPageIndexChange(element: HTMLInputElement): void {\n    if (this.isInvalidPageIndex(element)) {\n      element.value = String(this.page);\n      return;\n    }\n\n    const page = Number(element.value);\n    if (this.page !== page) {\n      this.config.offset = (page - 1) * this.config.limit;\n      this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n    }\n  }\n\n  /**\n   * On page size revert event handler.\n   * @param element HTML input element.\n   */\n  public onPageIndexRevert(element: HTMLInputElement): void {\n    element.value = String(this.page);\n  }\n\n  /**\n   * Get previous page availability status.\n   */\n  public get hasPrevious(): boolean {\n    return this.config.offset <= 0;\n  }\n\n  /**\n   * Get next page availability status.\n   */\n  public get hasNext(): boolean {\n    return this.config.offset + this.config.limit >= this.dataStateService.itemCount;\n  }\n\n  /**\n   * Get start row index.\n   */\n  public get startRowIndex(): number {\n    return this.config.offset + 1;\n  }\n\n  /**\n   * Get end row index.\n   */\n  public get endRowIndex(): number {\n    return Math.min(this.config.offset + this.config.limit, this.dataStateService.itemCount);\n  }\n\n  /**\n   * Prevent invalid key press.\n   * @param event Keyboard event argument object.\n   */\n  public preventInvalidKeyPress(event: KeyboardEvent): void {\n    if (\n      (event.key >= '0' && event.key <= '9') ||\n      event.key === 'ArrowLeft' ||\n      event.key === 'ArrowRight' ||\n      event.key === 'Delete' ||\n      event.key === 'Backspace' ||\n      event.key === 'Escape' ||\n      event.key === 'Enter'\n    ) {\n      return;\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * component init lifecycle event handler.\n   */\n  public ngOnInit(): void {\n    this.setMobileModeState();\n\n    this.resizeService.resize.pipe(debounceTime(200)).subscribe(() => {\n      this.setMobileModeState();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataTableRequestParams } from '../models/data-table-request-params.model';\n\nimport { DataTableStorageMode } from '../models/data-table-storage-mode.model';\n\nimport { GlobalRefService } from '../../utility/utility.module';\nimport { DataTableConfigService } from './data-table-config.service';\n\n/**\n * Data table persistence service; Manage data table state when persist state options is enabled.\n */\n@Injectable()\nexport class DataTablePersistenceService {\n  private storage: Storage;\n\n  constructor(private globalRefService: GlobalRefService, private config: DataTableConfigService) {}\n\n  /**\n   * Set table state storage mode.\n   * @param value Storage mode.\n   */\n  public set storageMode(value: DataTableStorageMode) {\n    if (this.globalRefService.isBrowser) {\n      if (value === 'local') {\n        this.storage = this.globalRefService.window.localStorage;\n      } else {\n        this.storage = this.globalRefService.window.sessionStorage;\n      }\n    }\n  }\n\n  /**\n   * Set table state by identifier.\n   * @param id Table identifier.\n   * @param version Data version.\n   * @param value Data table request parameters object.\n   */\n  public setState(id: string, value: DataTableRequestParams, version: string = 'v1'): void {\n    if (this.globalRefService.isBrowser) {\n      const data = {\n        ver: version,\n        val: value\n      };\n      this.storage.setItem(`${this.config.stateKeyPrefix}${id}`, JSON.stringify(data));\n    }\n  }\n\n  /**\n   * Get table state by identifier.\n   * @param id Table identifier.\n   * @param version Data version.\n   * @return Data table request params object.\n   */\n  public getState(id: string, version: string = 'v1'): DataTableRequestParams {\n    if (this.globalRefService.isBrowser) {\n      const data = JSON.parse(this.storage.getItem(`${this.config.stateKeyPrefix}${id}`));\n\n      if (data && data.ver === version) {\n        return data.val;\n      }\n    }\n\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, ReplaySubject, Subscription, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { orderBy, get } from '../../utility/services/object-utility.class';\n\nimport { DataTableRequestParams } from '../models/data-table-request-params.model';\nimport { DataTableQueryResult } from '../models/data-table-query-result.model';\nimport { DataTableFilterOption } from '../models/data-table-filter-option.model';\nimport { DataTableQueryField } from '../models/data-table-query-field.model';\n\nimport { DataTableColumnComponent } from '../components/data-table-column/data-table-column.component';\n\n/**\n * Data table resource service; Manage data table client side data querying.\n */\n@Injectable()\nexport class DataTableResourceService<T> {\n  private itemDataStream: ReplaySubject<T[]>;\n  private dataSourceSubscription: Subscription;\n\n  /**\n   * Set data source stream to query.\n   * @param dataSource Data source stream.\n   */\n  public setDataSource(dataSource: Observable<T[]>): void {\n    this.dispose();\n\n    if (this.itemDataStream && !this.itemDataStream.closed) {\n      this.itemDataStream.complete();\n    }\n\n    this.itemDataStream = new ReplaySubject<T[]>(1);\n    this.dataSourceSubscription = dataSource.subscribe((items: T[]) => {\n      this.itemDataStream.next(items);\n    });\n  }\n\n  /**\n   * Query items by data table request params.\n   * @param params Data table parameters object.\n   * @return Query result stream.\n   */\n  public query(params: DataTableRequestParams): Observable<DataTableQueryResult<T>> {\n    return this.itemDataStream.pipe(\n      switchMap((items: T[]) => {\n        let itemCount = items.length;\n        let result: T[] = items.slice();\n\n        if (params.fields.length) {\n          const filterFields = params.fields.filter(field => field.filterable);\n\n          if (filterFields.length) {\n            result = items.filter(item => {\n              return filterFields.every((filterColumn: DataTableQueryField) => {\n                if (filterColumn.filterExpression) {\n                  return filterColumn.filterExpression(item, filterColumn.field, filterColumn.filterValue);\n                }\n\n                if (filterColumn.filterValue === undefined || filterColumn.filterValue === '') {\n                  return true;\n                }\n\n                const fieldValue = get(item, filterColumn.field);\n                if (fieldValue === undefined) {\n                  return true;\n                }\n\n                if (Array.isArray(filterColumn.filterValue)) {\n                  return filterColumn.filterValue.length === 0 || filterColumn.filterValue.includes(fieldValue);\n                }\n\n                const value = String(fieldValue).toLowerCase();\n                const filterValue = String(filterColumn.filterValue).toLowerCase();\n                return value.includes(filterValue);\n              });\n            });\n            itemCount = result.length;\n          }\n\n          const sortColumns = params.fields.filter((column: DataTableQueryField) => {\n            return column.sortable && column.sortOrder !== '';\n          });\n\n          if (sortColumns.length) {\n            let orderedSortColumns = sortColumns;\n            if (sortColumns.length > 1) {\n              orderedSortColumns = sortColumns.concat().sort((a, b) => {\n                return a.sortPriority - b.sortPriority;\n              });\n            }\n\n            const orderParams = orderedSortColumns.reduce((accumulator: any, column: DataTableQueryField) => {\n                if (accumulator) {\n                  accumulator.fields.push(column.field);\n                  accumulator.orders.push(column.sortOrder);\n                }\n\n                return accumulator;\n              },\n              {\n                fields: [],\n                orders: []\n              }\n            );\n\n            result = orderBy(result, orderParams.fields, orderParams.orders);\n          }\n        }\n\n        if (params.offset !== undefined) {\n          const offset = params.offset + 1 > result.length ? 0 : params.offset;\n\n          if (params.limit === undefined) {\n            result = result.slice(offset, result.length);\n          } else {\n            result = result.slice(offset, offset + params.limit);\n          }\n        }\n\n        return of({\n          items: result,\n          count: itemCount\n        });\n      })\n    );\n  }\n\n  /**\n   * Extract data table filter options.\n   * @param filterColumn Data table column component.\n   * @return Filter options collection stream.\n   */\n  public extractFilterOptions(filterColumn: DataTableColumnComponent): Observable<DataTableFilterOption[]> {\n    return this.itemDataStream.pipe(\n      switchMap((items: T[]) => {\n        const filteredItems = items\n          .reduce((acc: DataTableFilterOption[], item: T, index: number): DataTableFilterOption[] => {\n            if (filterColumn.filterFieldMapper) {\n              return acc.concat(filterColumn.filterFieldMapper(item, index));\n            }\n\n            const filterField = filterColumn.filterField || filterColumn.field;\n            const filterValue = get(item, filterField);\n            acc.push({\n              key: filterValue,\n              value: filterValue\n            });\n\n            return acc;\n          }, [])\n          .filter((value: DataTableFilterOption, index, self) => {\n            return self.findIndex(item => item.key === value.key) === index;\n          });\n\n        return of(filteredItems);\n      })\n    );\n  }\n\n  /**\n   * Dispose client data source streams.\n   */\n  public dispose(): void {\n    if (this.dataSourceSubscription) {\n      this.dataSourceSubscription.unsubscribe();\n      this.dataSourceSubscription = null;\n    }\n\n    if (this.itemDataStream && !this.itemDataStream.closed) {\n      this.itemDataStream.complete();\n    }\n  }\n}\n","import {\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  TemplateRef,\n  AfterContentInit,\n  forwardRef,\n  ElementRef,\n  ViewChild,\n  OnInit,\n  NgZone\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription, Observable, of, Subject } from 'rxjs';\nimport { catchError, debounceTime, switchMap } from 'rxjs/operators';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DataTableFilterValueExtractCallback } from '../../models/data-table-filter-value-extract-callback.model';\nimport { DataTableCellBindEventArgs } from '../../models/data-table-cell-bind-event-args.model';\nimport { DataTableCellClickEventArgs } from '../../models/data-table-cell-click-event-args.model';\nimport { DataTableHeaderClickEventArgs } from '../../models/data-table-header-click-event-args.model';\nimport { DataTableDoubleClickEventArgs } from '../../models/data-table-double-click-event-args.model';\nimport { DataTableRowClickEventArgs } from '../../models/data-table-row-click-event-args.model';\nimport { DataTableRow } from '../../models/data-table-row.model';\nimport { DataTableRequestParams } from '../../models/data-table-request-params.model';\nimport { DataTableTranslations } from '../../models/data-table-translations.model';\nimport { DataTableDynamicRowSpanExtractorCallback } from '../../models/data-table-group-field-extractor-callback.model';\nimport { DataTableQueryResult } from '../../models/data-table-query-result.model';\nimport { DataTableDataBindCallback } from '../../models/data-table-data-bind-callback.model';\nimport { DataTableFilterOption } from '../../models/data-table-filter-option.model';\nimport { DataTableUniqueField } from '../../models/data-table-unique-field.model';\n\nimport { DataTableSelectMode } from '../../models/data-table-select-mode.model';\nimport { DataTableStorageMode } from '../../models/data-table-storage-mode.model';\nimport { DataTableScrollPoint } from '../../models/data-table-scroll-point.model';\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DragAndDropService, GlobalRefService } from '../../../utility/utility.module';\nimport { ValidatorService } from '../../../utility/services/validator.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTablePersistenceService } from '../../services/data-table-persistence.service';\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableScrollPositionService } from '../../services/data-table-scroll-position.service';\nimport { DataTableResourceService } from '../../services/data-table-resource.service';\n\n/**\n * Data table component; Data table entry component.\n */\n@Component({\n  selector: 'ng-data-table',\n  templateUrl: './data-table.component.html',\n  providers: [\n    DataTableConfigService,\n    DataTableEventStateService,\n    DataTablePersistenceService,\n    DataTableDataStateService,\n    DataTableScrollPositionService,\n    DataTableResourceService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DataTableComponent),\n      multi: true\n    }\n  ]\n})\nexport class DataTableComponent implements OnDestroy, OnInit, AfterContentInit, ControlValueAccessor {\n  private rowSelectChangeSubscription: Subscription;\n  private dataFetchStreamSubscription: Subscription;\n  private scrollPositionSubscription: Subscription;\n\n  /**\n   * Data table column component collection.\n   */\n  @ContentChildren(DataTableColumnComponent)\n  public columns: QueryList<DataTableColumnComponent>;\n\n  /**\n   * Template to display when data row is expanded for detail view.\n   */\n  @ContentChild('ngDataTableRowExpand', { static: true })\n  public rowExpandTemplate: TemplateRef<any>;\n\n  /**\n   * Template to display when data set is empty.\n   */\n  @ContentChild('ngDataTableNoRecords', { static: true })\n  public noRecordsTemplate: TemplateRef<any>;\n\n  /**\n   * Template to display while loading data.\n   */\n  @ContentChild('ngDataTableLoadingSpinner', { static: true })\n  public loadingSpinnerTemplate: TemplateRef<any>;\n\n  /**\n   * Template to display while row is expanding to load detail view.\n   */\n  @ContentChild('ngDataTableRowExpandLoadingSpinner', { static: true })\n  public rowExpandLoadingSpinnerTemplate: TemplateRef<any>;\n\n  /**\n   * Data table self DOM element reference.\n   */\n  @ViewChild('dataTableElement', { static: true })\n  public dataTableElement: ElementRef<HTMLDivElement>;\n\n  // Event handlers\n\n  /**\n   * Data table initialize event handler.\n   * Triggered after data table initialize.\n   */\n  @Output()\n  public init: EventEmitter<DataTableComponent>;\n\n  /**\n   * Row selected state change event handler.\n   * Triggered when table row selected state change.\n   */\n  @Output()\n  public rowSelectChange: EventEmitter<any | any[]>;\n\n  /**\n   * Row click event handler.\n   * Triggered when data row is clicked.\n   */\n  @Output()\n  public rowClick: EventEmitter<DataTableRowClickEventArgs<any>>;\n\n  /**\n   * Row double click event handler.\n   * Triggered when data row is double clicked.\n   */\n  @Output()\n  public rowDoubleClick: EventEmitter<DataTableDoubleClickEventArgs<any>>;\n\n  /**\n   * Header click event handler.\n   * Triggered when header column clicked.\n   */\n  @Output()\n  public headerClick: EventEmitter<DataTableHeaderClickEventArgs>;\n\n  /**\n   * All row select change event handler.\n   * Triggered when all row select state changed.\n   */\n  @Output()\n  public allRowSelectChange: EventEmitter<boolean>;\n\n  /**\n   * Cell click event handler.\n   * Triggered when clicked on a cell.\n   */\n  @Output()\n  public cellClick: EventEmitter<DataTableCellClickEventArgs<any>>;\n\n  /**\n   * Data bound event handler.\n   * Triggered after data bind.\n   */\n  @Output()\n  public dataBound: EventEmitter<void>;\n\n  /**\n   * Row bind event handler.\n   * Trigger on each row data bind.\n   */\n  @Output()\n  public rowBind: EventEmitter<DataTableRow<any>>;\n\n  /**\n   * Column bind event handler.\n   * Triggered after column data bind.\n   */\n  @Output()\n  public columnBind: EventEmitter<DataTableColumnComponent>;\n\n  /**\n   * Cell bind event handler.\n   * Triggered after data table cell data bind.\n   */\n  @Output()\n  public cellBind: EventEmitter<DataTableCellBindEventArgs<any>>;\n\n  // Input Events\n\n  /**\n   * Set data bind event handler callback. This handler is fired on each data fetch request.\n   */\n  @Input()\n  public set onDataBind(value: DataTableDataBindCallback<any>) {\n    this.dataStateService.onDataBind = value;\n  }\n\n  /**\n   * Set filter value extract event handler callback. Used to extract filter value collection dynamically when\n   * explicit data bind functionality is used with onDataBind callback.\n   */\n  @Input()\n  public set onFilterValueExtract(value: DataTableFilterValueExtractCallback) {\n    this.dataStateService.onFilterValueExtract = value;\n  }\n\n  /**\n   * Set on dynamic row span extract event handler callback.\n   */\n  @Input()\n  public set onDynamicRowSpanExtract(value: DataTableDynamicRowSpanExtractorCallback<any>) {\n    this.dataStateService.onDynamicRowSpanExtract = value;\n  }\n\n  // Input parameters\n\n  /**\n   * Set static data items collection. No need to set data source when static items collection is provided.\n   */\n  @Input()\n  public set items(value: any[]) {\n    if (!value) {\n      return;\n    }\n\n    this.eventStateService.staticDataSourceStream.next(value);\n  }\n\n  /**\n   * Set data source observable. This observable is used to retrieve row data for binding.\n   */\n  @Input()\n  public set dataSource(source: Observable<any[]>) {\n    this.initDataSource(source);\n  }\n\n  /**\n   * Set data table unique identifier.\n   */\n  @Input()\n  public set id(value: string) {\n    if (!ValidatorService.idPatternValidatorExpression.test(value)) {\n      throw Error('Invalid [id] input value. Unique identifier parameter only accept string begin with a letter ([A-Za-z]) and may be followed by any number of letters, digits ([0-9]), hyphens (\"-\"), underscores (\"_\").');\n    }\n\n    this.dataStateService.id = value;\n  }\n\n  /**\n   * Set persist table state on provided storage mode if true. Depends on storageMode property.\n   */\n  @Input()\n  public set persistTableState(value: boolean) {\n    this.config.persistTableState = value;\n  }\n\n  /**\n   * Set storage mode to persist table state. Only applicable when persistTableState is true.\n   */\n  @Input()\n  public set storageMode(value: DataTableStorageMode) {\n    this.dataTableStateService.storageMode = value;\n  }\n\n  /**\n   * Set multiple column sortable if true. Only applicable for sortable true columns.\n   */\n  @Input()\n  public set multiColumnSortable(value: boolean) {\n    this.config.multiColumnSortable = value;\n  }\n\n  /**\n   * Set table header bar visible if true.\n   */\n  @Input()\n  public set showHeader(value: boolean) {\n    this.config.showHeader = value;\n  }\n\n  /**\n   * Set title to be shown in the header. Only applicable when showHeader is true.\n   */\n  @Input()\n  public set title(value: string) {\n    this.config.title = value;\n  }\n\n  /**\n   * Set width value in pixels. Can be used to set the width of teh table (responsive if not set).\n   */\n  @Input()\n  public set width(value: string | number) {\n    this.config.width = value;\n  }\n\n  /**\n   * Set minimum table content height value in pixels. Can be used to set the minimum height of the table content area.\n   */\n  @Input()\n  public set minContentHeight(value: string | number) {\n    this.config.minContentHeight = value;\n  }\n\n  /**\n   * Minimum table content width value in pixels. Can be used to set the minimum width of the table content area.\n   */\n  @Input()\n  public set minContentWidth(value: string | number) {\n    this.config.minContentWidth = value;\n  }\n\n  /**\n   * Table content height value in pixels. This configuration can be used to enable table content vertical\n   * scrolling for responsive design.\n   */\n  @Input()\n  public set contentHeight(value: string | number) {\n    this.config.contentHeight = value;\n  }\n\n  /**\n   * Show pagination bar if true. Depends on offset and limit values. Trigger dataLoad event with offset\n   * and limit values.\n   */\n  @Input()\n  public set pageable(value: boolean) {\n    this.config.pageable = value;\n  }\n\n  /**\n   * Enable scrolling based on-demand data loading functionality if true. Trigger dataLoad event with offset\n   * and limit values when scroll to bottom until data source exhaust.\n   */\n  @Input()\n  public set loadOnScroll(value: boolean) {\n    this.config.loadOnScroll = value;\n  }\n\n  /**\n   * Set view height distance ratio to trigger data fetch on scroll. Applicable only when load on scroll mode is enabled.\n   */\n  @Input()\n  public set loadViewDistanceRatio(value: number) {\n    this.config.loadViewDistanceRatio = value;\n  }\n\n  /**\n   * Set auto generated index column with row numbering if true.\n   */\n  @Input()\n  public set showIndexColumn(value: boolean) {\n    this.config.showIndexColumn = value;\n  }\n\n  /**\n   * Set index column header title. Applicable when showIndexColumn is true.\n   */\n  @Input()\n  public set indexColumnTitle(value: string) {\n    this.config.indexColumnTitle = value;\n  }\n\n  /**\n   * Set row select checkbox and select state if true.\n   */\n  @Input()\n  public set rowSelectable(value: boolean) {\n    this.config.rowSelectable = value;\n  }\n\n  /**\n   * Data table row select mode. Applicable only when rowSelectable is true.\n   */\n  @Input()\n  public set selectMode(value: DataTableSelectMode) {\n    this.config.selectMode = value;\n  }\n\n  /**\n   * Set select all row checkbox on column header visible if true.\n   * Only applicable when showRowSelectCheckbox, rowSelectable is true & item selectMode is  multi.\n   */\n  @Input()\n  public set showRowSelectCheckbox(value: boolean) {\n    this.config.showRowSelectCheckbox = value;\n  }\n\n  /**\n   * Set select all row checkbox on column header visible if true.\n   * Only applicable when showRowSelectCheckbox, rowSelectable is true & item selectMode is  multi.\n   */\n  @Input()\n  public set showRowSelectAllCheckbox(value: boolean) {\n    this.config.showRowSelectAllCheckbox = value;\n  }\n\n  /**\n   * Set substitute rows visible if true. Fill with empty rows when row count < limit.\n   */\n  @Input()\n  public set showSubstituteRows(value: boolean) {\n    this.config.showSubstituteRows = value;\n  }\n\n  /**\n   * Set row expander visible if true. Render ngDataTableExpand template on expand click.\n   */\n  @Input()\n  public set expandableRows(value: boolean) {\n    this.config.expandableRows = value;\n  }\n\n  /**\n   * Set trigger row select on click event if true. Applicable only when rowSelectable is true.\n   */\n  @Input()\n  public set selectOnRowClick(value: boolean) {\n    this.config.selectOnRowClick = value;\n  }\n\n  /**\n   * Set expand and render expand template on row click if true. Only applicable when expandableRows is true.\n   */\n  @Input()\n  public set expandOnRowClick(value: boolean) {\n    this.config.expandOnRowClick = value;\n  }\n\n  /**\n   * Auto trigger dataLoad event on initialization if true.\n   */\n  @Input()\n  public set autoFetch(value: boolean) {\n    this.config.autoFetch = value;\n  }\n\n  /**\n   * Set loading spinner visible if true. Show loading spinner when data fetch operation is triggered.\n   */\n  @Input()\n  public set showLoadingSpinner(value: boolean) {\n    this.config.showLoadingSpinner = value;\n  }\n\n  /**\n   * Set select option track by field path which is used to uniquely identify row for selection tracking.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set selectTrackBy(value: string) {\n    this.config.selectTrackBy = value;\n  }\n\n  /**\n   * Set selected row identifier. Select specified row on initial load.\n   * Applicable when row select mode is SINGLE or SINGLE_TOGGLE.\n   */\n  @Input()\n  public set selectedRow(value: any) {\n    this.dataStateService.selectedRow = value;\n    this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRow);\n  }\n\n  /**\n   * Set selected row identifiers collection. Select specified rows on initial load.\n   * Applicable when selectMode is SINGLE or SINGLE_TOGGLE true.\n   */\n  @Input()\n  public set selectedRows(value: any[]) {\n    this.dataStateService.selectedRows = value || [];\n    this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRows);\n  }\n\n  /**\n   * Set filter debounce time in milliseconds. Applicable only when filterDebounce is true.\n   */\n  @Input()\n  public set filterDebounceTime(value: number) {\n    this.config.filterDebounceTime = value;\n  }\n\n  /**\n   * Set filter data debounce enabled state with provided filterDebounceTime if true.\n   */\n  @Input()\n  public set filterDebounce(value: boolean) {\n    this.config.filterDebounce = value;\n  }\n\n  /**\n   * Set refresh button visible if true. Only applicable when showHeader is true.\n   */\n  @Input()\n  public set showRefreshButton(value: boolean) {\n    this.config.showRefreshButton = value;\n  }\n\n  /**\n   * Row selector column width in pixels. Applicable only when showColumnSelector is true.\n   */\n  @Input()\n  public set showColumnSelector(value: boolean) {\n    this.config.showColumnSelector = value;\n  }\n\n  /**\n   * Set column selector dropdown width in pixels. Only applicable when showColumnSelector is true.\n   */\n  @Input()\n  public set columnSelectorWidth(value: number) {\n    this.config.columnSelectorWidth = value;\n  }\n\n  /**\n   * Set expander column width in pixels. Applicable only when expandableRows is true.\n   */\n  @Input()\n  public set expanderColumnWidth(value: number | string) {\n    this.config.expanderColumnWidth = value;\n  }\n\n  /**\n   * Set index column width in pixels. Applicable only when showIndexColumn is true.\n   */\n  @Input()\n  public set indexColumnWidth(value: number | string) {\n    this.config.indexColumnWidth = value;\n  }\n\n  /**\n   * Set row selector column width in pixels. Applicable only when showColumnSelector is true.\n   */\n  @Input()\n  public set selectionColumnWidth(value: number | string) {\n    this.config.selectionColumnWidth = value;\n  }\n\n  /**\n   * Set translation data object. Used to localize table static label text.\n   */\n  @Input()\n  public set translations(data: DataTableTranslations) {\n    this.config.translations = data;\n  }\n\n  /**\n   * Set row expand loading spinner visible if true. Applicable only when row expand is enabled.\n   */\n  @Input()\n  public set showRowExpandLoadingSpinner(value: boolean) {\n    this.config.showRowExpandLoadingSpinner = value;\n  }\n\n  /**\n   * Set data offset value (start offset index). Applicable only when pageable is true.\n   */\n  @Input()\n  public set offset(value: number) {\n    this.config.offset = value;\n    this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Set data limit value (page size). Applicable only when pageable is true.\n   */\n  @Input()\n  public set limit(value: number) {\n    this.config.limit = value;\n    this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Set current page number. Auto calculate offset depending on page number,\n   * do not explicitly set offset when page is used.\n   */\n  @Input()\n  public set page(value: number) {\n    this.offset = (value - 1) * this.config.limit;\n  }\n\n  /**\n   * Get current page number.\n   */\n  public get page(): number {\n    return Math.floor(this.config.offset / this.config.limit) + 1;\n  }\n\n  /**\n   * Get data table header padding in pixels.\n   */\n  public get headerPadding(): number {\n    return this.config.contentHeight ? this.globalRefService.scrollbarWidth : 0;\n  }\n\n  /**\n   * Get data loading status.\n   */\n  public get isLoading(): boolean {\n    return !(this.config.loadOnScroll && this.dataStateService.dataRows.length)\n      && this.config.showLoadingSpinner && this.dataStateService.dataLoading;\n  }\n\n  constructor(\n    private dragAndDropService: DragAndDropService,\n    private dataTableStateService: DataTablePersistenceService,\n    private globalRefService: GlobalRefService,\n    private eventStateService: DataTableEventStateService,\n    private dataTableResourceService: DataTableResourceService<any>,\n    private zone: NgZone,\n    public dataStateService: DataTableDataStateService,\n    public scrollPositionService: DataTableScrollPositionService,\n    public config: DataTableConfigService\n  ) {\n    this.storageMode = config.storageMode;\n\n    this.headerClick = this.eventStateService.headerClickStream;\n    this.allRowSelectChange = this.eventStateService.allRowSelectChangeStream;\n    this.rowBind = this.eventStateService.rowBindStream;\n    this.rowClick = this.eventStateService.rowClickStream;\n    this.rowDoubleClick = this.eventStateService.rowDoubleClickStream;\n    this.rowSelectChange = this.eventStateService.rowSelectChangeStream;\n    this.cellBind = this.eventStateService.cellBindStream;\n    this.cellClick = this.eventStateService.cellClickStream;\n    this.init = this.eventStateService.initStream;\n    this.dataBound = this.eventStateService.dataBoundStream;\n    this.columnBind = this.eventStateService.columnBind;\n  }\n\n  /**\n   * On after data bind event handler\n   * @param queryResult Query result object\n   */\n  private onAfterDataBind(queryResult: DataTableQueryResult<any>): void {\n    this.dataStateService.itemCount = queryResult.count;\n    this.setDataRows(queryResult.items);\n\n    if (this.dataStateService.heardReload) {\n      this.eventStateService.fetchFilterOptionsStream.next(false);\n      this.dataStateService.heardReload = false;\n    }\n\n    this.dataStateService.dataLoading = false;\n    this.eventStateService.dataBoundStream.emit();\n  }\n\n  /**\n   * Get data item selected state\n   * @param item Data item object\n   * @return True if item is selected\n   */\n  private getSelectedState(item: any): boolean {\n    const id = get(item, this.config.selectTrackBy);\n    if (id === undefined) {\n      return false;\n    }\n\n    if (this.config.selectMode === 'multi') {\n      return this.dataStateService.selectedRows.indexOf(id) > -1;\n    }\n\n    return this.dataStateService.selectedRow === id;\n  }\n\n  /**\n   * Set data table item collection\n   * @param items Data table item collection\n   */\n  private setDataRows(items: any[]): void {\n    const mappedItems = items.map((item: any, index: number) => {\n      let currentIndex;\n      if (this.config.loadOnScroll || this.config.pageable) {\n        currentIndex = this.config.offset + index + 1;\n      } else {\n        currentIndex = index + 1;\n      }\n\n      return {\n        dataLoaded: false,\n        expanded: false,\n        disabled: false,\n        color: '',\n        cssClass: '',\n        tooltip: '',\n        index: currentIndex,\n        item,\n        selected: this.getSelectedState(item)\n      };\n    });\n\n    if (this.config.loadOnScroll) {\n      this.dataStateService.dataRows = [ ...this.dataStateService.dataRows, ...mappedItems ];\n    } else {\n      this.dataStateService.dataRows = mappedItems;\n    }\n\n    if (this.config.selectMode === 'multi') {\n      this.dataStateService.allRowSelected =\n        this.dataStateService.dataRows.length !== 0 &&\n        this.dataStateService.dataRows.every((dataRow: DataTableRow<any>) => {\n          return dataRow.selected;\n        });\n    }\n\n    if (!this.config.loadOnScroll) {\n      const substituteRowCount = this.config.limit - this.dataStateService.dataRows.length;\n      this.dataStateService.substituteRows = Array.from({\n        length: substituteRowCount\n      });\n    }\n  }\n\n  /**\n   * Initialize data fetch event\n   */\n  private initDataFetchEvent(): void {\n    const noop = {\n      items: [],\n      count: 0\n    };\n\n    this.dataFetchStreamSubscription = this.eventStateService.dataFetchStream\n      .pipe(\n        debounceTime(20),\n        switchMap((fetchMode: DataFetchMode) => this.mapDataBind(fetchMode)),\n        catchError(() => {\n          return of(noop);\n        })\n      )\n      .subscribe(\n        (queryResult: DataTableQueryResult<any>) => {\n          this.onAfterDataBind(queryResult);\n        },\n        () => {\n          this.onAfterDataBind(noop);\n        }\n      );\n  }\n\n  /**\n   * Re-map data binding data\n   * @param fetchMode Data fetch mode\n   * @return Data table query result stream\n   */\n  private mapDataBind(fetchMode: DataFetchMode): Observable<DataTableQueryResult<any>> {\n    this.dataStateService.dataLoading = true;\n    if (fetchMode === DataFetchMode.HARD_RELOAD) {\n      this.clearRowSelectState();\n      this.clearColumnState();\n      this.dataStateService.heardReload = true;\n      this.config.offset = 0;\n    }\n\n    const params: DataTableRequestParams = {\n      loadData: fetchMode === DataFetchMode.HARD_RELOAD || fetchMode === DataFetchMode.SOFT_RELOAD\n    };\n\n    if (this.columns) {\n      params.fields = this.columns\n        .filter(column => {\n          return column.sortable || column.filterable;\n        })\n        .reduce((acc: DataTableUniqueField[], column: DataTableColumnComponent) => {\n          if (column.sortField || column.filterField) {\n            acc.push({\n              field: column.sortField || column.filterField,\n              column\n            });\n          } else {\n            acc.push({\n              field: column.field,\n              column\n            });\n          }\n\n          return acc;\n        }, [])\n        .map((uniqueField: DataTableUniqueField) => {\n          let filter;\n          if (uniqueField.column.showDropdownFilter) {\n            if (uniqueField.column.dropdownFilterSelectMode === 'multi') {\n              filter = uniqueField.column.filter && uniqueField.column.filter.map(filterValue => filterValue.key);\n            } else {\n              filter = uniqueField.column.filter && uniqueField.column.filter.key;\n            }\n          } else {\n            filter = uniqueField.column.filter;\n          }\n\n          return {\n            field: uniqueField.field,\n            sortable: uniqueField.column.sortable,\n            sortOrder: uniqueField.column.sortOrder,\n            sortPriority: uniqueField.column.sortPriority || (uniqueField.column.sortOrder ? 1 : 0),\n            filterable: uniqueField.column.filterable,\n            filterValue: filter,\n            filterExpression: uniqueField.column.filterExpression,\n          };\n        });\n    }\n\n    if (this.config.pageable || this.config.loadOnScroll) {\n      params.offset = this.config.offset;\n      params.limit = this.config.limit;\n    }\n\n    if (this.config.persistTableState) {\n      this.dataTableStateService.setState(this.dataStateService.id, params);\n    }\n\n    return this.dataStateService.onDataBind(params);\n  }\n\n  /**\n   * Initialize data table state via previous state snapshot; Applicable only when persist table state is enabled\n   */\n  private initDataTableState(): void {\n    if (this.config.persistTableState) {\n      const dataTableState = this.dataTableStateService.getState(this.dataStateService.id);\n      if (dataTableState) {\n        this.columns.forEach(column => {\n          const field = dataTableState.fields.find(col => {\n            return col.field === column.field;\n          });\n\n          if (field) {\n            if (column.filterable && field.filterable) {\n              if (column.showDropdownFilter) {\n                if (field.filterValue) {\n                  if (column.dropdownFilterSelectMode === 'multi') {\n                    column.filter = field.filterValue.map((filterValue) => {\n                      return {\n                        key: filterValue,\n                        value: filterValue\n                      };\n                    });\n                  } else {\n                    column.filter = {\n                      key: field.filterValue,\n                      value: field.filterValue\n                    };\n                  }\n                }\n              } else {\n                column.filter = field.filterValue;\n              }\n            }\n\n            if (column.sortable && field.sortable) {\n              column.sortOrder = field.sortOrder;\n            }\n          }\n        });\n\n        this.config.limit = dataTableState.limit;\n        this.config.offset = dataTableState.offset;\n      }\n    }\n  }\n\n  /**\n   * After component initialize lifecycle event handler\n   */\n  public ngAfterContentInit(): void {\n    this.dataStateService.relativeParentElement = this.dataTableElement.nativeElement;\n\n    if (!this.dataStateService.onDataBind) {\n      this.dataSource = this.eventStateService.staticDataSourceStream;\n    }\n\n    this.initDataTableState();\n    this.initDataFetchEvent();\n\n    if (this.config.autoFetch) {\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    }\n\n    this.eventStateService.fetchFilterOptionsStream.next(true);\n    this.eventStateService.initStream.emit(this);\n\n    if (this.config.loadOnScroll) {\n      this.scrollPositionSubscription = this.scrollPositionService.scrollPositionStream.subscribe((pos: DataTableScrollPoint) => {\n        const roundingPixel = 1;\n        const gutterPixel = 1;\n\n        if (\n          pos.isVertical\n          && pos.scrollTop >= pos.scrollHeight - (1 + this.config.loadViewDistanceRatio) * pos.clientHeight - roundingPixel - gutterPixel\n          && (this.config.offset + this.config.limit) < this.dataStateService.itemCount\n          && !this.dataStateService.dataLoading\n        ) {\n          this.dataStateService.dataLoading = true;\n          this.zone.run(() => {\n            this.offset = this.config.offset + this.config.limit;\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Reset column sort and filter state\n   */\n  private clearColumnState(): void {\n    this.columns.forEach((column: DataTableColumnComponent) => {\n      column.resetSortOrder();\n      column.filter = undefined;\n    });\n  }\n\n  /**\n   * Clear selected data row status\n   */\n  private clearRowSelectState(): void {\n    this.dataStateService.selectedRow = undefined;\n    this.dataStateService.selectedRows = [];\n    this.dataStateService.allRowSelected = false;\n  }\n\n  /**\n   * Fetch data from data source\n   * @param fetchMode Data fetch mode\n   */\n  public fetchData(fetchMode: DataFetchMode = DataFetchMode.SOFT_RELOAD): void {\n    this.eventStateService.dataFetchStream.next(fetchMode);\n  }\n\n  /**\n   * Initialize data source\n   * @param source Data source stream\n   */\n  public initDataSource(source: Observable<any>): void {\n    this.dataTableResourceService.setDataSource(source);\n\n    this.onDataBind = (params: DataTableRequestParams): Observable<DataTableQueryResult<any>> => {\n      if (params.loadData) {\n        this.dataTableResourceService.setDataSource(source);\n      }\n\n      return this.dataTableResourceService.query(params);\n    };\n\n    this.onFilterValueExtract = (column: DataTableColumnComponent): Observable<DataTableFilterOption[]> => {\n      return this.dataTableResourceService.extractFilterOptions(column);\n    };\n  }\n\n  /**\n   * Component value write event handler; Form control support implementation\n   */\n  public writeValue(value: any): void {\n    if (this.config.selectMode === 'multi') {\n      this.selectedRows = value;\n    } else {\n      this.selectedRow = value;\n    }\n  }\n\n  /**\n   * Register select change event handler; Form control support implementation\n   * @param onSelectChange Select change event handler callback\n   */\n  public registerOnChange(onSelectChange: (value: any) => void): void {\n    this.rowSelectChangeSubscription = this.eventStateService.rowSelectChangeStream.subscribe((selectedIds: any | any[]) => {\n      onSelectChange(selectedIds);\n    });\n  }\n\n  /**\n   * Register on touch event handler; Form control support implementation\n   * @param fn Touch event callback handler\n   */\n  public registerOnTouched(fn: any): void {}\n\n  /**\n   * Get table width in pixels\n   */\n  public get tableWidth(): number {\n    return this.config.width || this.dataStateService.tableWidth;\n  }\n\n  public ngOnInit(): void {\n    if (!this.dataStateService.id) {\n      throw Error('Missing required parameter value for [id] input.');\n    }\n\n    if (this.config.loadOnScroll) {\n      if (!this.config.minContentHeight) {\n        throw Error('[minContentHeight] is required when [infiniteScrollable] is enabled.');\n      }\n\n      if (this.config.pageable) {\n        throw Error('[pageable] and [infiniteScrollable] cannot be enabled at the same time.');\n      }\n    }\n  }\n\n  /**\n   * Component destroy lifecycle event handler\n   */\n  public ngOnDestroy(): void {\n    if (this.dataFetchStreamSubscription) {\n      this.dataFetchStreamSubscription.unsubscribe();\n    }\n\n    if (this.rowSelectChangeSubscription) {\n      this.rowSelectChangeSubscription.unsubscribe();\n    }\n\n    if (this.scrollPositionSubscription) {\n      this.scrollPositionSubscription.unsubscribe();\n    }\n\n    this.dataTableResourceService.dispose();\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\nimport { DataTableRow } from '../../models/data-table-row.model';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\n/**\n * Data table body component. Data table body table definition rendering is handled by this component.\n */\n@Component({\n  exportAs: 'ngDataTableBody',\n  // tslint:disable-next-line\n  selector: '[ngDataTableBody]',\n  templateUrl: './data-table-body.component.html'\n})\nexport class DataTableBodyComponent {\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  @Input()\n  public rowExpandTemplate: TemplateRef<any>;\n\n  @Input()\n  public rowExpandLoadingSpinnerTemplate: TemplateRef<any>;\n\n  constructor(\n    public config: DataTableConfigService,\n    public dataStateService: DataTableDataStateService,\n    private eventStateService: DataTableEventStateService\n  ) {}\n\n  /**\n   * Unique data row tracking callback.\n   * @param index Current index.\n   * @param dataRow Data row object reference.\n   */\n  public dataRowTrackBy(index: number, dataRow: DataTableRow<any>): number {\n    return dataRow.index;\n  }\n\n  /**\n   * Odd row status; True if row index is a odd number.\n   * @param row Data row object.\n   * @return True if odd row.\n   */\n  public isOddRow(row: DataTableRow<any>): boolean {\n    return row.index % 2 === 0;\n  }\n\n  /**\n   * Even row status; True if row index is a even number.\n   * @param row Data row object.\n   * @return True if even row.\n   */\n  public isEvenRow(row: DataTableRow<any>): boolean {\n    return row.index % 2 === 1;\n  }\n\n  /**\n   * Odd substitute row status by row index; True if row index is an odd substitute row.\n   * @param index Row index.\n   * @return True if odd substitute row.\n   */\n  public isOddSubstituteRow(index: number): boolean {\n    return (index + this.dataStateService.substituteRows.length) % 2 === 0;\n  }\n\n  /**\n   * Even substitute row status by row index; True if row index is an even substitute row.\n   * @param index Row index.\n   * @return True if even substitute row.\n   */\n  public isEvenSubstituteRow(index: number): boolean {\n    return (index + this.dataStateService.substituteRows.length) % 2 === 1;\n  }\n\n  /**\n   * On row expand event handler.\n   * @param $event Click event argument reference.\n   * @param dataRow Data row object.\n   */\n  public onRowExpand($event: Event, dataRow: DataTableRow<any>): void {\n    dataRow.expanded = !dataRow.expanded;\n\n    if (!this.config.showRowExpandLoadingSpinner) {\n      dataRow.dataLoaded = true;\n    }\n  }\n\n  /**\n   * On row initialize event handler.\n   * @param dataRow Data table row.\n   */\n  public onRowInit(dataRow): void {\n    this.eventStateService.rowBindStream.emit(dataRow);\n  }\n\n  /**\n   * On cell initialize event handler.\n   * @param column Data table column component reference.\n   * @param row Data table row object.\n   */\n  public onCellInit(column: DataTableColumnComponent, row: DataTableRow<any>): void {\n    this.eventStateService.cellBindStream.emit({\n      column,\n      row\n    });\n  }\n\n  /**\n   * Cell clicked event handler.\n   * @param column Column data table component reference.\n   * @param row Data table row reference.\n   * @param event Mouse click event argument reference.\n   */\n  public cellClicked(column: DataTableColumnComponent, row: DataTableRow<any>, event: MouseEvent): void {\n    this.eventStateService.cellClickStream.emit({ row, column, event });\n  }\n\n  /**\n   * Get row span collection by data row.\n   * @param row Data row reference.\n   * @return Dummy row span collection.\n   */\n  public getRowSpanCollection(row: DataTableRow<any>): any[] {\n    return Array.from({\n      length: this.dataStateService.onDynamicRowSpanExtract(row)\n    });\n  }\n\n  /**\n   * Get total column count used for substitute row generation.\n   * @return Number of columns.\n   */\n  public get totalColumnCount(): number {\n    let count = 0;\n    count += this.config.showIndexColumn ? 1 : 0;\n    count += this.config.showRowSelectCheckboxColumn ? 1 : 0;\n    count += this.config.expandableRows ? 1 : 0;\n    this.columns.forEach(column => {\n      count += column.visible ? 1 : 0;\n    });\n\n    return count;\n  }\n\n  /**\n   * On row select click event handler.\n   * @param row Data row reference.\n   * @param event Row click event.\n   */\n  public onRowSelectClick(row: DataTableRow<any>, event: Event): void {\n    // Prevent single mode checkbox getting unchecked on tapping already selected.\n    if (this.config.selectMode === 'single') {\n      const id = get(row.item, this.config.selectTrackBy);\n      const previousSelection = this.dataStateService.selectedRow;\n\n      if (previousSelection === id) {\n        event.preventDefault();\n        row.selected = true;\n      }\n    }\n  }\n\n  /**\n   * On row selection change event handler.\n   * @param row Data row reference.\n   */\n  public onRowSelectChange(row: DataTableRow<any>): void {\n    const id = get(row.item, this.config.selectTrackBy);\n\n    switch (this.config.selectMode) {\n      case 'multi': {\n        const index = this.dataStateService.selectedRows.indexOf(id);\n        if (row.selected && index < 0) {\n          this.dataStateService.selectedRows.push(id);\n        } else if (!row.selected && index > -1) {\n          this.dataStateService.selectedRows.splice(index, 1);\n        }\n\n        const previousAllRowSelectedState = this.dataStateService.allRowSelected;\n        this.dataStateService.allRowSelected = this.dataStateService.dataRows.every((dataRow: DataTableRow<any>) => {\n          return dataRow.selected;\n        });\n\n        this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRows);\n\n        if (previousAllRowSelectedState !== this.dataStateService.allRowSelected) {\n          this.eventStateService.allRowSelectChangeStream.emit(this.dataStateService.allRowSelected);\n        }\n        break;\n      }\n      case 'single_toggle': {\n        if (row.selected) {\n          this.dataStateService.selectedRow = id;\n\n          // deselect all other row other rows\n          this.dataStateService.dataRows.forEach((dataRow: DataTableRow<any>) => {\n            if (dataRow !== row) {\n              dataRow.selected = false;\n            }\n          });\n        } else {\n          this.dataStateService.selectedRow = undefined;\n        }\n\n        this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRow);\n        break;\n      }\n      case 'single': {\n        const previousSelection = this.dataStateService.selectedRow;\n        this.dataStateService.selectedRow = id;\n        row.selected = true;\n\n        // deselect all other row other rows\n        this.dataStateService.dataRows.forEach((dataRow: DataTableRow<any>) => {\n          if (dataRow !== row) {\n            dataRow.selected = false;\n          }\n        });\n\n        if (previousSelection !== id) {\n          this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRow);\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * Row clicked event handler.\n   * @param row Data row object.\n   * @param event Mouse click event argument object.\n   */\n  public rowClicked(row: DataTableRow<any>, event: MouseEvent): void {\n    if (this.config.selectOnRowClick || (this.config.expandableRows && this.config.expandOnRowClick)) {\n      const target = event.target as HTMLElement;\n      if (target && target.classList && target.classList.contains('ng-ignore-propagation')) {\n        return;\n      }\n\n      if (this.config.rowSelectable && this.config.selectOnRowClick) {\n        row.selected = !row.selected;\n        this.onRowSelectChange(row);\n      }\n\n      if (this.config.expandOnRowClick) {\n        row.expanded = !row.expanded;\n      }\n    }\n\n    this.eventStateService.rowClickStream.emit({ row, event });\n  }\n\n  /**\n   * Row double clicked event handler.\n   * @param row Data row object.\n   * @param event Event Mouse click event argument object.\n   */\n  public rowDoubleClicked(row: DataTableRow<any>, event: MouseEvent): void {\n    this.eventStateService.rowDoubleClickStream.emit({ row, event });\n  }\n\n  /**\n   * Get substitute row availability status.\n   * @return True if substitute rows are available.\n   */\n  public get hasSubstituteRows(): boolean {\n    return !this.config.loadOnScroll\n      && this.config.showSubstituteRows\n      && this.dataStateService.dataRows.length\n      && !this.dataStateService.showNoDataOverlay;\n  }\n\n  /**\n   * Get cell value by data field.\n   * @param row Data row reference.\n   * @param column Data table column component reference.\n   */\n  public getFieldValue(row: DataTableRow<any>, column: DataTableColumnComponent) {\n    return get(row.item, column.field);\n  }\n\n  /**\n   * Get row select checkbox display status.\n   * @return True if row selector checkbox should be displayed.\n   */\n  public get showRowSelectCheckbox(): boolean {\n    return this.config.rowSelectable && this.config.showRowSelectCheckbox;\n  }\n\n  /**\n   * Get row expend view loading status. Used to display loading spinner on expand column while data fetching.\n   * @param row Data row object reference.\n   */\n  public isRowExpanderLoading(row: DataTableRow<any>): boolean {\n    return row.expanded && !row.dataLoaded;\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\n\n/**\n * No data body component. Used to display no data message when data not available.\n */\n@Component({\n  selector: 'ng-data-table-no-data-body',\n  templateUrl: './data-table-no-data-body.component.html'\n})\nexport class DataTableNoDataBodyComponent {\n  @Input()\n  public noRecordsTemplate: TemplateRef<any>;\n\n  constructor(public config: DataTableConfigService, public eventStateService: DataTableEventStateService) {}\n\n  /**\n   * Reset all applied filters.\n   */\n  public resetFilters(): void {\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.HARD_RELOAD);\n  }\n\n  /**\n   * Get default no data template display status.\n   * @return True if default no data template should be displayed.\n   */\n  public get showDefaultNoDataTemplate(): boolean {\n    return !!(!this.noRecordsTemplate && this.config.translations.noDataMessage);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n/**\n * Data table header component. Render data table column title and filter header rows.\n */\n@Component({\n  exportAs: 'ngDataTableHead',\n  // tslint:disable-next-line\n  selector: '[ngDataTableHead]',\n  templateUrl: './data-table-head.component.html'\n})\nexport class DataTableHeadComponent {\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  /**\n   * Get filter column availability status.\n   * @return True if there is at least one filter column.\n   */\n  public get hasFilterColumns(): boolean {\n    return this.columns.some((column: DataTableColumnComponent) => column.filterable);\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Data loading spinner component. Displayed within table body while fetching data.\n */\n@Component({\n  selector: 'ng-data-table-loading-spinner',\n  templateUrl: './data-table-loading-spinner.component.html'\n})\nexport class DataTableLoadingSpinnerComponent {\n  @Input()\n  public loadingSpinnerTemplate: TemplateRef<any>;\n\n  @Input()\n  public isLoading: boolean;\n\n  @Input()\n  public showOverlay: boolean;\n\n  constructor(public config: DataTableConfigService, public dataStateService: DataTableDataStateService) {}\n}\n","import { Directive, ElementRef, AfterViewInit, NgZone, OnDestroy, Input } from '@angular/core';\n\nimport { Subscription, fromEvent, Subject } from 'rxjs';\nimport { map, pairwise } from 'rxjs/operators';\n\nimport { DataTableScrollPoint } from '../models/data-table-scroll-point.model';\n\n/**\n * Scroll position directive.\n * Track current scroll position of target element.\n */\n@Directive({\n  selector: '[ngScrollPosition]'\n})\nexport class ScrollPositionDirective implements AfterViewInit, OnDestroy {\n  private scrollEventSubscription: Subscription;\n\n  @Input()\n  public ngScrollPosition: Subject<DataTableScrollPoint>;\n\n  constructor(private el: ElementRef, private zone: NgZone) {}\n\n  /**\n   * After component initialize lifecycle event handler.\n   */\n  public ngAfterViewInit(): void {\n    this.zone.runOutsideAngular(() => {\n      this.scrollEventSubscription = fromEvent(this.el.nativeElement, 'scroll')\n        .pipe(\n          map(() => {\n            return {\n              scrollLeft: this.el.nativeElement.scrollLeft,\n              scrollTop: this.el.nativeElement.scrollTop,\n              scrollHeight: this.el.nativeElement.scrollHeight,\n              scrollWidth: this.el.nativeElement.scrollWidth,\n              clientHeight: this.el.nativeElement.clientHeight,\n              clientWidth: this.el.nativeElement.clientWidth,\n            };\n          }),\n          pairwise(),\n          map((pair: DataTableScrollPoint[]) => {\n            const [ previous, current ] = pair;\n\n            return {\n              ...current,\n              isHorizontal: previous.scrollLeft !== current.scrollLeft,\n              isVertical: previous.scrollTop !== current.scrollTop\n            };\n          })\n        )\n        .subscribe((pos: DataTableScrollPoint) => {\n          this.ngScrollPosition.next(pos);\n        });\n    });\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.scrollEventSubscription) {\n      this.scrollEventSubscription.unsubscribe();\n    }\n\n    this.ngScrollPosition.complete();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\n\nimport { Subscription, Subject } from 'rxjs';\n\nimport { DataTableScrollPoint } from '../models/data-table-scroll-point.model';\n\n/**\n * Scroll element directive.\n * Used to set scroll position to target element.\n */\n@Directive({\n  selector: '[ngScrollElement]'\n})\nexport class ScrollElementDirective implements AfterViewInit, OnDestroy {\n  private scrollPositionSubscription: Subscription;\n\n  @Input()\n  public ngScrollElement: Subject<DataTableScrollPoint>;\n\n  constructor(private el: ElementRef) {}\n\n  /**\n   * After component initialize lifecycle event handler.\n   */\n  public ngAfterViewInit(): void {\n    this.scrollPositionSubscription = this.ngScrollElement.subscribe(value => {\n      this.el.nativeElement.scrollLeft = value.scrollLeft;\n    });\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.scrollPositionSubscription) {\n      this.scrollPositionSubscription.unsubscribe();\n    }\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, EventEmitter, Output } from '@angular/core';\n\n/**\n * Element width directive.\n * Used to emit target element width after view init.\n */\n@Directive({\n  selector: '[ngElementWidth]'\n})\nexport class ElementWidthDirective implements AfterViewInit {\n  @Output()\n  public ngElementWidth = new EventEmitter();\n\n  constructor(private el: ElementRef) {}\n\n  /**\n   * After component view initialize lifecycle event handler.\n   */\n  public ngAfterViewInit(): void {\n    this.ngElementWidth.emit(this.el.nativeElement.clientWidth);\n  }\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { get } from '../../utility/services/object-utility.class';\n\nimport { DropdownConfig } from '../models/dropdown-config.model';\nimport { DropdownTranslations } from '../models/dropdown-translations.model';\nimport { DataTableConfig } from '../../data-table/models/data-table-config.model';\n\nimport { DropdownSelectMode } from '../models/dropdown-select-mode.model';\nimport { ViewPosition } from '../../utility/models/view-position.model';\n\nexport const DROPDOWN_CONFIG = new InjectionToken<DataTableConfig>('dropdownConfig');\n\n/**\n * Dropdown config service. Holds all the global configurations of dropdown which can be overridden while importing the module.\n * Used to manage dropdown base configuration state.\n */\n@Injectable()\nexport class DropdownConfigService implements DropdownConfig {\n  public baseTranslations: DropdownTranslations = {\n    noDataMessage: 'No Results Available',\n    filterPlaceholder: 'Search',\n    selectedOptionWrapPlaceholder: 'Options',\n    selectPlaceholder: 'Select'\n  };\n\n  public selectTrackBy = 'key';\n  public displayTrackBy = 'value';\n  public disabledTrackBy = 'disabled';\n  public menuPosition: ViewPosition = 'bottom-left';\n  public selectMode: DropdownSelectMode = 'single-toggle';\n  public filterable = false;\n  public filterDebounce = true;\n  public filterDebounceTime = 500;\n  public groupByField: string = undefined;\n  public wrapDisplaySelectLimit: number = undefined;\n  public showSelectedOptionRemoveButton = false;\n  public showClearSelectionButton = false;\n  public menuWidth = 320;\n  public menuHeight = 250;\n  public loadOnScroll = false;\n  public loadViewDistanceRatio = 1;\n  public limit = 15;\n  public loadDataOnInit = true;\n  public closeMenuOnSelect = false;\n  public showOptionSelectCheckbox = false;\n  public showOptionIndex = false;\n  public showOptionTrackBy = false;\n  public multiSelectOptionMaxWidth = 135;\n  public setFirstOptionSelected = false;\n  public triggerSelectChangeOnInit = false;\n  public triggerSelectChangeOnModelUpdate = false;\n  public triggerSelectChangeOnFirstOptionSelect = false;\n  public dynamicDimensionCalculation = false;\n  public dynamicWidthRatio = 1;\n  public dynamicHeightRatio = 0.5;\n  public relativeParentElement = undefined;\n\n  constructor(@Inject(DROPDOWN_CONFIG) private dropdownConfig: DropdownConfig) {\n    if (dropdownConfig) {\n      Object.assign(this, dropdownConfig);\n    }\n  }\n\n  /**\n   * Set dropdown translations.\n   * @param value Dropdown translations object.\n   */\n  public set translations(value: DropdownTranslations) {\n    this.baseTranslations = { ...this.baseTranslations, ...value };\n  }\n\n  /**\n   * Get dropdown translations.\n   * @return Dropdown translations.\n   */\n  public get translations(): DropdownTranslations {\n    return this.baseTranslations;\n  }\n\n  /**\n   * Get display text by source option.\n   * @param option Source option object.\n   * @return Display text.\n   */\n  public getDisplayText(option: any): string {\n    return get(option, this.displayTrackBy);\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { DropdownOption } from '../models/dropdown-option.model';\nimport { DropdownDataBindCallback } from '../models/dropdown-data-bind-callback.model';\nimport { DropdownOptionGroup } from '../models/dropdown-option-group.model';\nimport { ComponentLoader } from '../../utility/utility.module';\n\n/**\n * Dropdown data state service; Manage dropdown state data.\n */\n@Injectable()\nexport class DropdownDataStateService {\n  public id: string;\n  public dataLoading = false;\n  public selectedOption: any;\n  public selectedOptions: any[] = [];\n  public offset = 0;\n  public totalOptionCount: number;\n  public currentOptionCount = 0;\n  public dropdownOptions: DropdownOption[] = [];\n  public dropdownOptionGroups: DropdownOptionGroup[] = [];\n  public filterText = '';\n  public disabled = false;\n  public componentLoaderRef: ComponentLoader<any>;\n  public dropdownOptionTemplate: TemplateRef<any>;\n  public dropdownOptionGroupHeaderTemplate: TemplateRef<any>;\n\n  public onDataBind: DropdownDataBindCallback<any>;\n\n  /**\n   * Get dropdown option unique id.\n   * @param append Target identifier.\n   * @param index Target index.\n   */\n  public getUniqueId(append: string, index: number): string {\n    return `${this.id}-chk-${append}-${index}`;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs';\n\nimport { DropdownComponent } from '../components/dropdown/dropdown.component';\n\n/**\n * Dropdown event state service; Manage dropdown event handler state.\n */\n@Injectable()\nexport class DropdownEventStateService {\n  public dataFetchStream = new EventEmitter<boolean>();\n  public dataBoundStream = new EventEmitter<void>();\n  public selectChangeStream = new EventEmitter<any[] | any>();\n  public initStream = new EventEmitter<DropdownComponent>();\n  public staticDataSourceStream = new ReplaySubject<any[]>(1);\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\n\n/**\n * Dropdown options list view component\n */\n@Component({\n  selector: 'ng-dropdown-view',\n  templateUrl: './dropdown-view.component.html'\n})\nexport class DropdownViewComponent implements OnInit, OnDestroy {\n  public scrollEvent = new Subject<any>();\n  private scrollEventSubscription: Subscription;\n\n  constructor(\n    public config: DropdownConfigService,\n    public dataStateService: DropdownDataStateService,\n    private eventStateService: DropdownEventStateService\n  ) {}\n\n  /**\n   * Lifecycle hook that is called when component is initialized.\n   */\n  public ngOnInit(): void {\n    this.scrollEventSubscription = this.scrollEvent.pipe(debounceTime(100)).subscribe((event: any) => {\n      this.checkScrollPosition(event);\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called when component is destroyed.\n   */\n  public ngOnDestroy(): void {\n    if (this.scrollEventSubscription) {\n      this.scrollEventSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Performs data loading when scrolling when scroll threshold is met. This will be trigger only when load on scroll is enabled.\n   * @param event Target event arguments reference.\n   */\n  public checkScrollPosition(event: any) {\n    const scrollTop = event.target.scrollTop;\n    const scrollHeight = event.target.scrollHeight;\n    const scrollElementHeight = event.target.clientHeight;\n\n    const roundingPixel = 1;\n    const gutterPixel = 1;\n\n    if (\n      scrollTop >= scrollHeight - (1 + this.config.loadViewDistanceRatio) * scrollElementHeight - roundingPixel - gutterPixel &&\n      this.dataStateService.currentOptionCount < this.dataStateService.totalOptionCount &&\n      !this.dataStateService.dataLoading\n    ) {\n      this.dataStateService.dataLoading = true;\n      this.dataStateService.offset = this.dataStateService.offset + this.config.limit;\n      this.eventStateService.dataFetchStream.emit(false);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ReplaySubject, Observable, of, Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { get } from '../../utility/services/object-utility.class';\n\nimport { DropdownQueryResult } from '../models/dropdown-query-result.model';\nimport { DropdownRequestParams } from '../models/dropdown-request-params.model';\n\n/**\n * Dropdown resource service. Dropdown client side data query is handled via this service.\n */\n@Injectable()\nexport class DropdownResourceService<T> {\n  private optionDataStream: ReplaySubject<T[]>;\n  private dataSourceSubscription: Subscription;\n\n  /**\n   * Set source data source.\n   * @param dataSource Data source observable.\n   */\n  public setDataSource(dataSource: Observable<T[]>): void {\n    this.dispose();\n\n    if (this.optionDataStream && !this.optionDataStream.closed) {\n      this.optionDataStream.complete();\n    }\n\n    this.optionDataStream = new ReplaySubject<T[]>(1);\n    this.dataSourceSubscription = dataSource.subscribe((options: T[]) => {\n      this.optionDataStream.next(options);\n    });\n  }\n\n  /**\n   * Query data.\n   * @param params Dropdown request parameters.\n   */\n  public query(params: DropdownRequestParams): Observable<DropdownQueryResult<T>> {\n    return this.optionDataStream.pipe(\n      switchMap((options: T[]) => {\n        let result: T[] = options.slice();\n\n        if (params.filter && params.filter.value) {\n          const value = String(params.filter.value).toLowerCase();\n          result = result.filter((option: T) => {\n            const key = String(get(option, params.filter.key)).toLowerCase();\n            return key.includes(value);\n          });\n        }\n\n        if (params.offset !== undefined) {\n          const offset = params.offset + 1 > result.length ? 0 : params.offset;\n\n          if (params.limit === undefined) {\n            result = result.slice(offset, result.length);\n          } else {\n            result = result.slice(offset, offset + params.limit);\n          }\n        }\n\n        return of({\n          options: result,\n          count: options.length\n        });\n      })\n    );\n  }\n\n  /**\n   * Dispose data source.\n   */\n  public dispose(): void {\n    if (this.dataSourceSubscription) {\n      this.dataSourceSubscription.unsubscribe();\n      this.dataSourceSubscription = null;\n    }\n\n    if (this.optionDataStream && !this.optionDataStream.closed) {\n      this.optionDataStream.complete();\n    }\n  }\n}\n","import {\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap } from 'rxjs/operators';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DropdownTranslations } from '../../models/dropdown-translations.model';\nimport { DropdownOption } from '../../models/dropdown-option.model';\nimport { DropdownOptionGroup } from '../../models/dropdown-option-group.model';\nimport { DropdownRequestParams } from '../../models/dropdown-request-params.model';\nimport { DropdownDataBindCallback } from '../../models/dropdown-data-bind-callback.model';\nimport { DropdownQueryResult } from '../../models/dropdown-query-result.model';\n\nimport { DropdownSelectMode } from '../../models/dropdown-select-mode.model';\n\nimport { DropdownViewComponent } from '../dropdown-view/dropdown-view.component';\n\nimport { PopoverComponentLoaderFactoryService } from '../../../utility/utility.module';\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\nimport { DropdownResourceService } from '../../services/dropdown-resource.service';\nimport { ViewPosition } from '../../../utility/models/view-position.model';\nimport { ValidatorService } from '../../../utility/services/validator.service';\n\n/**\n * Dropdown main component.\n */\n@Component({\n  selector: 'ng-dropdown',\n  templateUrl: './dropdown.component.html',\n  providers: [\n    DropdownConfigService,\n    DropdownDataStateService,\n    DropdownEventStateService,\n    DropdownResourceService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DropdownComponent),\n      multi: true\n    }\n  ]\n})\nexport class DropdownComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  private onSelectChangeSubscription: Subscription;\n\n  @ContentChild('ngDropdownLoadingSpinner', { static: true })\n  public loadingSpinnerTemplate: TemplateRef<any>;\n\n  @ContentChild('ngDropdownOption', { static: true })\n  public set optionTemplate(value: TemplateRef<any>) {\n    this.dataStateService.dropdownOptionTemplate = value;\n  }\n\n  @ContentChild('ngDropdownOptionGroupHeader', { static: true })\n  public set optionGroupHeaderTemplate(value: TemplateRef<any>) {\n    this.dataStateService.dropdownOptionGroupHeaderTemplate = value;\n  }\n\n  // Outputs : Event Handlers\n  /**\n   * Dropdown initialize event handler\n   */\n  @Output()\n  public init: EventEmitter<DropdownComponent>;\n\n  /**\n   * Dropdown option select change event handler\n   */\n  @Output()\n  public selectChange: EventEmitter<any[] | any>;\n\n  /**\n   * Dropdown data bind event handler\n   */\n  @Output()\n  public dataBound: EventEmitter<void>;\n\n  // Input - Event handlers\n\n  /**\n   * Set data bind callback. This handler is fired on each data fetch request.\n   */\n  @Input()\n  public set onDataBind(value: DropdownDataBindCallback<any>) {\n    this.dataStateService.onDataBind = value;\n  }\n\n  // Inputs\n\n  /**\n   * Set dropdown loading spinner template reference object. Used by data table component to explicitly pass the template reference.\n   */\n  @Input()\n  public set loadingSpinnerTemplateRef(value: TemplateRef<any>) {\n    this.loadingSpinnerTemplate = value;\n  }\n\n  /**\n   * Set dropdown option template reference. Used by data table component to explicitly pass the template reference.\n   */\n  @Input()\n  public set optionTemplateRef(value: TemplateRef<any>) {\n    this.optionTemplate = value;\n  }\n\n  /**\n   * Set dropdown options group header template reference. Used by data table component to explicitly pass the template reference.\n   */\n  @Input()\n  public set optionGroupHeaderTemplateRef(value: TemplateRef<any>) {\n    this.optionGroupHeaderTemplate = value;\n  }\n\n  /**\n   * Set static dropdown options collection. No need to set data source when static options collection is provided.\n   */\n  @Input()\n  public set options(value: any[]) {\n    if (!value) {\n      return;\n    }\n\n    this.eventStateService.staticDataSourceStream.next(value);\n  }\n\n  /**\n   * Set data source observable. This observable is used to retrieve dropdown options for data binding.\n   */\n  @Input()\n  public set dataSource(source: Observable<any[]>) {\n    this.initDataSource(source);\n  }\n\n  /**\n   * Set dropdown unique identifier.\n   */\n  @Input()\n  public set id(value: string) {\n    if (!ValidatorService.idPatternValidatorExpression.test(value)) {\n      throw Error('Invalid [id] input value. Unique identifier parameter only accept string begin with a letter ([A-Za-z]) and may be followed by any number of letters, digits ([0-9]), hyphens (\"-\"), underscores (\"_\").');\n    }\n\n    this.dataStateService.id = value;\n  }\n\n  /**\n   * Set translation data object. Used to localize table static label text.\n   */\n  @Input()\n  public set translations(value: DropdownTranslations) {\n    this.config.translations = value;\n  }\n\n  /**\n   * Set select option track by field path which is used to uniquely identify options for selection tracking.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set selectTrackBy(value: string) {\n    this.config.selectTrackBy = value;\n  }\n\n  /**\n   * Set display value track by field path which is used to extract dropdown option display value.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set displayTrackBy(value: string) {\n    this.config.displayTrackBy = value;\n  }\n\n  /**\n   * Set options group field path which is used to group the dropdown options.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set groupByField(value: string) {\n    this.config.groupByField = value;\n  }\n\n  /**\n   * Set dropdown option disable state field path which is used to disabled state dropdown options.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set disabledTrackBy(value: string) {\n    this.config.disabledTrackBy = value;\n  }\n\n  /**\n   * Set selected options collection. These options will be set selected by default on initial load.\n   * Applicable only when multi select mode is enabled.\n   */\n  @Input()\n  public set selectedOptions(value: any[]) {\n    this.dataStateService.selectedOptions = value || [];\n  }\n\n  /**\n   * Set selected option. This option is selected by default on initial load.\n   * Applicable only when single select mode is enabled.\n   */\n  @Input()\n  public set selectedOption(value: any) {\n    this.dataStateService.selectedOption = value;\n  }\n\n  /**\n   * Set number of options to fetch on scroll to bottom action when load on scroll mode is enabled.\n   */\n  @Input()\n  public set limit(value: number) {\n    this.config.limit = value;\n  }\n\n  /**\n   * Set wrap selected options in dropdown view and show the number of options selected instead when\n   * limit is met or exceeded. Applicable only when multi select mode is enabled.\n   */\n  @Input()\n  public set wrapDisplaySelectLimit(value: number) {\n    this.config.wrapDisplaySelectLimit = value;\n  }\n\n  /**\n   * Set infinite scrollable state to load data on demand with scroll motion. Dropdown data fetch call is\n   * initiated with limit and offset when user scroll to bottom hence loading the full data set on init.\n   */\n  @Input()\n  public set loadOnScroll(value: boolean) {\n    this.config.loadOnScroll = value;\n  }\n\n  /**\n   * Set view height ratio to trigger data fetch with infinite scrollable mode.\n   * Higher ratio will will increase the scroll sensitivity.\n   */\n  @Input()\n  public set loadViewDistanceRatio(value: number) {\n    this.config.loadViewDistanceRatio = value;\n  }\n\n  /**\n   * Set option select mode.\n   * - 'multi' : Support selecting multiple options.\n   * - 'single' : Support selecting a single option from options collection.\n   * - 'single-toggle' : Support selecting a single option from options collection. Selection can not be removed but\n   * only toggled by tapping on another option.\n   */\n  @Input()\n  public set selectMode(value: DropdownSelectMode) {\n    this.config.selectMode = value;\n  }\n\n  /**\n   * Show dropdown option search filter text-box if true.\n   */\n  @Input()\n  public set filterable(value: boolean) {\n    this.config.filterable = value;\n  }\n\n  /**\n   * Set default filter value to be applied on initial load. All options are displayed when filter text value is\n   * empty string. Applicable only when dropdown is filterable.\n   */\n  @Input()\n  public set filterText(value: string) {\n    this.dataStateService.filterText = value;\n  }\n\n  /**\n   * Set time based filter debounce to optimize performance and avoid request flooding by reducing the filter\n   * request frequency if true. Applicable only when dropdown filterable state is enabled.\n   */\n  @Input()\n  public set filterDebounce(value: boolean) {\n    this.config.filterDebounce = value;\n  }\n\n  /**\n   * Set filter debounce time in milliseconds. Applicable only when searchDebounce is true.\n   */\n  @Input()\n  public set filterDebounceTime(value: number) {\n    this.config.filterDebounceTime = value;\n  }\n\n  /**\n   * Set load data on component initialize if true.\n   */\n  @Input()\n  public set loadDataOnInit(value: boolean) {\n    this.config.loadDataOnInit = value;\n  }\n\n  /**\n   * Show selected option remove button if true.\n   * Applicable only when multi select mode ios enabled.\n   */\n  @Input()\n  public set showSelectedOptionRemoveButton(value: boolean) {\n    this.config.showSelectedOptionRemoveButton = value;\n  }\n\n  /**\n   * Set show all select options clear button if true.\n   * Applicable only when multi select mode ios enabled.\n   */\n  @Input()\n  public set showClearSelectionButton(value: boolean) {\n    this.config.showClearSelectionButton = value;\n  }\n\n  /**\n   * Set options menu width in pixels.\n   */\n  @Input()\n  public set menuWidth(value: number) {\n    this.config.menuWidth = value;\n  }\n\n  /**\n   * Set options menu height in pixels.\n   */\n  @Input()\n  public set menuHeight(value: number) {\n    this.config.menuHeight = value;\n  }\n\n  /**\n   * Set popup options menu display position relative to dropdown component.\n   * Support 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' values.\n   */\n  @Input()\n  public set menuPosition(value: ViewPosition) {\n    this.config.menuPosition = value;\n  }\n\n  /**\n   * Set dropdown view disabled state.\n   */\n  @Input()\n  public set disabled(value: boolean) {\n    this.dataStateService.disabled = value;\n  }\n\n  /**\n   * Set Close dropdown menu on option select if true.\n   */\n  @Input()\n  public set closeMenuOnSelect(value: boolean) {\n    this.config.closeMenuOnSelect = value;\n  }\n\n  /**\n   * Set show dropdown option select checkbox if true.\n   */\n  @Input()\n  public set showOptionSelectCheckbox(value: boolean) {\n    this.config.showOptionSelectCheckbox = value;\n  }\n\n  /**\n   * Set show dropdown option index checkbox if true.\n   */\n  @Input()\n  public set showOptionIndex(value: boolean) {\n    this.config.showOptionIndex = value;\n  }\n\n  /**\n   * Set show dropdown option TrackBy id checkbox if true.\n   */\n  @Input()\n  public set showOptionTrackBy(value: boolean) {\n    this.config.showOptionTrackBy = value;\n  }\n\n  /**\n   * Multi select option selected item maximum width. Apply ellipsis when selected option display text\n   * exceed the max width.\n   */\n  @Input()\n  public set multiSelectOptionMaxWidth(value: number) {\n    this.config.multiSelectOptionMaxWidth = value;\n  }\n\n  /**\n   * Set first dropdown option selected on data fetch if true.\n   */\n  @Input()\n  public set setFirstOptionSelected(value: boolean) {\n    this.config.setFirstOptionSelected = value;\n  }\n\n  /**\n   * Trigger select change event on init if true.\n   * Can be used to enable selectedOptions or selectedOption associated change trigger.\n   */\n  @Input()\n  public set triggerSelectChangeOnInit(value: boolean) {\n    this.config.triggerSelectChangeOnInit = value;\n  }\n\n  /**\n   * Set trigger select change on explicit model update if true.\n   * Applicable only when form binding is used.\n   */\n  @Input()\n  public set triggerSelectChangeOnModelUpdate(value: boolean) {\n    this.config.triggerSelectChangeOnModelUpdate = value;\n  }\n\n  /**\n   * Set trigger select change on first option select change if true.\n   * Applicable only when setFirstOptionSelected is true.\n   */\n  @Input()\n  public set triggerSelectChangeOnFirstOptionSelect(value: boolean) {\n    this.config.triggerSelectChangeOnFirstOptionSelect = value;\n  }\n\n  /**\n   * Set dynamically calculate dropdown view dimensions relative to dropdown button width.\n   * MenuWith and menuHeight values are ignored when true.\n   */\n  @Input()\n  public set dynamicDimensionCalculation(value: boolean) {\n    this.config.dynamicDimensionCalculation = value;\n  }\n\n  /**\n   * Set dynamic dropdown options view dimensions calculation width ratio relative to dropdown selector.\n   */\n  @Input()\n  public set dynamicWidthRatio(value: number) {\n    this.config.dynamicWidthRatio = value;\n  }\n\n  /**\n   * Set dynamic dropdown options view dimensions calculation height ratio relative to dropdown selector.\n   */\n  @Input()\n  public set dynamicHeightRatio(value: number) {\n    this.config.dynamicHeightRatio = value;\n  }\n\n  /**\n   * Set relative parent element to render dropdown view container.\n   */\n  @Input()\n  public set relativeParentElement(value: HTMLElement) {\n    this.config.relativeParentElement = value;\n  }\n\n  constructor(\n    private componentLoaderFactory: PopoverComponentLoaderFactoryService,\n    private injector: Injector,\n    private eventStateService: DropdownEventStateService,\n    private dropdownResourceService: DropdownResourceService<any>,\n    private renderer: Renderer2,\n    public dataStateService: DropdownDataStateService,\n    public config: DropdownConfigService\n  ) {\n    this.dataStateService.componentLoaderRef = this.componentLoaderFactory.createLoader(this.renderer);\n\n    this.dataBound = this.eventStateService.dataBoundStream;\n    this.selectChange = this.eventStateService.selectChangeStream;\n    this.init = this.eventStateService.initStream;\n  }\n\n  /**\n   * Initialize data source.\n   * @param source Data source stream.\n   */\n  private initDataSource(source: Observable<any>): void {\n    this.dropdownResourceService.setDataSource(source);\n\n    this.dataStateService.onDataBind = (params: DropdownRequestParams): Observable<DropdownQueryResult<any>> => {\n      if (params.hardReload) {\n        this.dropdownResourceService.setDataSource(source);\n      }\n\n      return this.dropdownResourceService.query(params);\n    };\n  }\n\n  /**\n   * Performs dropdown toggle event.\n   * @param event Mouse click event args.\n   * @param element Dropdown button element.\n   */\n  public toggleDropdown(event: MouseEvent, element: HTMLElement): void {\n    const target = event.target as HTMLElement;\n    if (target && target.classList && target.classList.contains('ng-ignore-propagation')) {\n      return;\n    }\n\n    this.dataStateService.componentLoaderRef.toggle(DropdownViewComponent, element, this.injector, {\n      relativeParentElement: this.config.relativeParentElement,\n      position: this.config.menuPosition\n    });\n\n    if (this.config.dynamicDimensionCalculation) {\n      this.config.menuWidth = element.offsetWidth * this.config.dynamicWidthRatio;\n      this.config.menuHeight = element.offsetWidth * this.config.dynamicHeightRatio;\n    }\n  }\n\n  /**\n   * Get options wrapped state.\n   */\n  public get wrapSelectedOptions(): boolean {\n    if (this.config.wrapDisplaySelectLimit !== undefined) {\n      return this.dataStateService.selectedOptions.length > this.config.wrapDisplaySelectLimit;\n    }\n\n    return false;\n  }\n\n  /**\n   * Get wrapped option display text.\n   */\n  public get wrappedOptionDisplayText(): string {\n    return `(${this.dataStateService.selectedOptions.length}) ${this.config.translations.selectedOptionWrapPlaceholder}`;\n  }\n\n  /**\n   * Lifecycle hook that is called when component is destroyed.\n   */\n  public ngOnDestroy(): void {\n    if (this.onSelectChangeSubscription) {\n      this.onSelectChangeSubscription.unsubscribe();\n    }\n\n    this.dataStateService.componentLoaderRef.dispose();\n  }\n\n  /**\n   * Get selected options availability state.\n   */\n  public get hasSelectedOptions(): boolean {\n    if (this.config.selectMode === 'multi') {\n      return !!this.dataStateService.selectedOptions.length;\n    }\n\n    return !!this.dataStateService.selectedOption;\n  }\n\n  /**\n   * Trigger select change.\n   */\n  public triggerSelectChange(): void {\n    if (this.config.selectMode === 'multi') {\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n    } else {\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n    }\n  }\n\n  /**\n   * Clear selected options.\n   */\n  public clearSelectedOptions(): void {\n    if (this.config.selectMode === 'multi') {\n      this.dataStateService.selectedOptions = [];\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n    } else {\n      this.dataStateService.selectedOption = undefined;\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n    }\n  }\n\n  /**\n   * Set disabled state.\n   * ControlValueAccessor implementation.\n   * @param isDisabled True if disabled.\n   */\n  public setDisabledState?(isDisabled: boolean): void {\n    this.dataStateService.disabled = isDisabled;\n  }\n\n  /**\n   * Called when value selected value gets updated.\n   * ControlValueAccessor implementation.\n   * @param value Selected value.\n   */\n  public writeValue(value: any): void {\n    if (this.config.selectMode === 'multi') {\n      this.dataStateService.selectedOptions = value || [];\n    } else {\n      this.dataStateService.selectedOption = value;\n    }\n\n    if (this.config.triggerSelectChangeOnModelUpdate) {\n      this.triggerSelectChange();\n    }\n  }\n\n  /**\n   * Register on change event.\n   * ControlValueAccessor implementation.\n   * @param onSelectChange On select change callback function.\n   */\n  public registerOnChange(onSelectChange: (value: any[] | any) => void): void {\n    this.onSelectChangeSubscription = this.selectChange.subscribe(value => {\n      onSelectChange(value);\n    });\n  }\n\n  /**\n   * Register on touched event.\n   * ControlValueAccessor implementation.\n   * @param fn Function reference.\n   */\n  public registerOnTouched(fn: any): void {\n    // TODO: Implement touch event handler\n  }\n\n  /**\n   * Lifecycle hook that is called when component is initialized.\n   */\n  public ngOnInit(): void {\n    if (!this.dataStateService.id) {\n      throw Error('Missing required parameter value for [id] input.');\n    }\n\n    if (!this.dataStateService.onDataBind) {\n      this.dataSource = this.eventStateService.staticDataSourceStream;\n    }\n\n    this.initDataFetchEvent();\n\n    if (this.config.loadDataOnInit) {\n      this.eventStateService.dataFetchStream.emit(false);\n    }\n\n    if (this.config.triggerSelectChangeOnInit) {\n      this.triggerSelectChange();\n    }\n\n    this.eventStateService.initStream.emit(this);\n  }\n\n  /**\n   * Map source data object to dropdown option model.\n   * @param option Source dropdown option.\n   * @param index Current index.\n   */\n  private mapDropdownOption(option: any, index: number): DropdownOption {\n    const id = get(option, this.config.selectTrackBy);\n\n    return {\n      disabled: get(option, this.config.disabledTrackBy),\n      id,\n      index: index + this.dataStateService.offset + 1,\n      option,\n      text: get(option, this.config.displayTrackBy)\n    };\n  }\n\n  /**\n   *\n   * Set dropdown options data.\n   * @param queryResult Query result object reference.\n   */\n  private setDropdownOptions(queryResult: DropdownQueryResult<any>) {\n    if (this.config.groupByField) {\n      this.dataStateService.dropdownOptionGroups = queryResult.options.reduce(\n        (accumulator: DropdownOptionGroup[], option: any, index: number) => {\n          const groupFieldValue = get(option, this.config.groupByField);\n          const currentGroup = accumulator.find((group: DropdownOptionGroup) => group.groupName === groupFieldValue);\n\n          if (currentGroup) {\n            currentGroup.options.push(this.mapDropdownOption(option, index));\n          } else {\n            accumulator.push({\n              groupName: groupFieldValue,\n              options: [this.mapDropdownOption(option, index)]\n            });\n          }\n\n          return accumulator;\n        },\n        this.config.loadOnScroll && this.dataStateService.offset > 0 ? this.dataStateService.dropdownOptionGroups : []\n      );\n    } else {\n      this.dataStateService.dropdownOptions = queryResult.options.reduce(\n        (accumulator: DropdownOption[], option: any, index: number) => {\n          accumulator.push(this.mapDropdownOption(option, index));\n          return accumulator;\n        },\n        this.config.loadOnScroll && this.dataStateService.offset > 0 ? this.dataStateService.dropdownOptions : []\n      );\n    }\n\n    if (this.config.setFirstOptionSelected && queryResult.options.length) {\n      if (this.config.selectMode === 'multi') {\n        this.dataStateService.selectedOptions = [queryResult.options[0]];\n      } else {\n        this.dataStateService.selectedOption = queryResult.options[0];\n      }\n\n      if (this.config.triggerSelectChangeOnFirstOptionSelect) {\n        this.triggerSelectChange();\n      }\n    }\n\n    this.dataStateService.totalOptionCount = queryResult.count;\n    this.dataStateService.currentOptionCount += queryResult.options.length;\n  }\n\n  /**\n   * On after data bind event handler.\n   * @param queryResult Query result object reference.\n   */\n  private onAfterDataBind(queryResult: DropdownQueryResult<any>): void {\n    this.setDropdownOptions(queryResult);\n    this.dataStateService.dataLoading = false;\n    this.eventStateService.dataBoundStream.emit();\n  }\n\n  /**\n   * Fetch query results.\n   * @param hardReload Hard reload state.\n   */\n  private fetchQueryResults(hardReload: boolean): Observable<DropdownQueryResult<any>> {\n    this.dataStateService.dataLoading = true;\n\n    if (hardReload) {\n      this.dataStateService.offset = 0;\n      this.dataStateService.filterText = '';\n    }\n\n    const requestParams: DropdownRequestParams = {\n      hardReload\n    };\n\n    if (this.config.loadOnScroll) {\n      requestParams.limit = this.config.limit;\n      requestParams.offset = this.dataStateService.offset;\n    }\n\n    if (this.config.filterable) {\n      requestParams.filter = {\n        key: this.config.displayTrackBy,\n        value: this.dataStateService.filterText\n      };\n    }\n\n    return this.dataStateService.onDataBind(requestParams);\n  }\n\n  /**\n   * Initialize data fetch event.\n   */\n  private initDataFetchEvent(): void {\n    const noop = {\n      options: [],\n      count: 0\n    };\n\n    this.eventStateService.dataFetchStream\n      .pipe(\n        debounceTime(20),\n        switchMap((hardReload: boolean) => this.fetchQueryResults(hardReload)),\n        catchError(() => {\n          return of(noop);\n        })\n      )\n      .subscribe(\n        (queryResult: DropdownQueryResult<any>) => {\n          this.onAfterDataBind(queryResult);\n        },\n        () => {\n          this.onAfterDataBind(noop);\n        }\n      );\n  }\n\n  /**\n   * Trigger explicit data fetch.\n   * @param hardReload Hard reload state.\n   */\n  public fetchData(hardReload: boolean = false): void {\n    this.eventStateService.dataFetchStream.emit(hardReload);\n  }\n\n  /**\n   * On select option remove event handler.\n   * @param index Selected option index.\n   */\n  public onSelectOptionRemove(index: number): void {\n    this.dataStateService.selectedOptions.splice(index, 1);\n    this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n  }\n\n  /**\n   * Close dropdown options menu.\n   */\n  public close(): void {\n    this.dataStateService.componentLoaderRef.hide();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\n\n/**\n * Dropdown filter component.\n */\n@Component({\n  selector: 'ng-dropdown-filter',\n  templateUrl: './dropdown-filter.component.html'\n})\nexport class DropdownFilterComponent implements OnDestroy, OnInit {\n  private dataFilterStream = new Subject();\n  private dataFilterSubscription: Subscription;\n\n  constructor(\n    public config: DropdownConfigService,\n    public dataStateService: DropdownDataStateService,\n    public eventStateService: DropdownEventStateService\n  ) {}\n\n  /**\n   * Clear applied filter value.\n   */\n  public clearFilter(): void {\n    this.dataStateService.offset = 0;\n    this.dataStateService.filterText = '';\n    this.eventStateService.dataFetchStream.emit(false);\n  }\n\n  /**\n   * Filter key up event handler.\n   */\n  public filterKeyUp(): void {\n    if (this.config.filterDebounce) {\n      this.dataFilterStream.next(this.dataStateService.filterText);\n    } else {\n      this.dataStateService.offset = 0;\n      this.eventStateService.dataFetchStream.emit(false);\n    }\n  }\n\n  /**\n   * Initialize filter stream debounce.\n   */\n  private initFilterDebounceEvent(): void {\n    this.dataFilterSubscription = this.dataFilterStream.pipe(debounceTime(this.config.filterDebounceTime)).subscribe(() => {\n      this.dataStateService.offset = 0;\n      this.eventStateService.dataFetchStream.emit(false);\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called when component is destroyed.\n   */\n  public ngOnDestroy(): void {\n    if (this.dataFilterSubscription) {\n      this.dataFilterSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called when component is initialized.\n   */\n  public ngOnInit(): void {\n    this.initFilterDebounceEvent();\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DropdownOption } from '../../models/dropdown-option.model';\n\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\n\n/**\n * Dropdown options list component.\n */\n@Component({\n  selector: 'ng-dropdown-options',\n  templateUrl: './dropdown-options.component.html'\n})\nexport class DropdownOptionsComponent {\n  constructor(\n    public config: DropdownConfigService,\n    public dataStateService: DropdownDataStateService,\n    private eventStateService: DropdownEventStateService\n  ) {}\n\n  /**\n   * Unique data row tracking callback.\n   * @param index Current index.\n   * @param option Dropdown option reference.\n   */\n  public optionTrackBy(index: number, option: DropdownOption): number {\n    return option.index;\n  }\n\n  /**\n   * Get selected state by option identifier.\n   * @param id Option select track by identifier.\n   */\n  public getSelectedState(id: any): boolean {\n    if (this.config.selectMode === 'multi') {\n      return this.dataStateService.selectedOptions.some((option: any) => {\n        return get(option, this.config.selectTrackBy) === id;\n      });\n    }\n\n    return get(this.dataStateService.selectedOption, this.config.selectTrackBy) === id;\n  }\n\n  /**\n   * Option click event handler.\n   * @param option Option object reference.\n   * @param event Click event arguments object.\n   */\n  public onOptionClick(option: DropdownOption, event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (target && target.classList && target.classList.contains('ng-ignore-propagation')) {\n      return;\n    }\n\n    this.toggleOptionSelectedState(option);\n  }\n\n  /**\n   * Option checkbox click event handler.\n   * @param option Option object reference.\n   * @param event Click event arguments object.\n   */\n  public onOptionCheckboxClick(option: DropdownOption, event: MouseEvent): void {\n    // Prevent single mode checkbox getting unchecked on tapping already selected.\n    if (this.config.selectMode === 'single') {\n      const selectedId = get(this.dataStateService.selectedOption, this.config.selectTrackBy);\n      const id = get(option.option, this.config.selectTrackBy);\n      if (selectedId === id) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Toggle option select state and update selected items depending on select mode.\n   * @param option Option object reference.\n   */\n  public toggleOptionSelectedState(option: DropdownOption): void {\n    const id = get(option.option, this.config.selectTrackBy);\n\n    switch (this.config.selectMode) {\n      case 'multi': {\n        const selectedIndex = this.dataStateService.selectedOptions.findIndex((value: any) => {\n          return get(value, this.config.selectTrackBy) === id;\n        });\n\n        if (selectedIndex < 0) {\n          this.dataStateService.selectedOptions.push(option.option);\n        } else {\n          this.dataStateService.selectedOptions.splice(selectedIndex, 1);\n        }\n\n        this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n        break;\n      }\n      case 'single-toggle': {\n        if (get(this.dataStateService.selectedOption, this.config.selectTrackBy) === id) {\n          this.dataStateService.selectedOption = undefined;\n        } else {\n          this.dataStateService.selectedOption = option.option;\n        }\n\n        this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n        break;\n      }\n      case 'single': {\n        const selectedId = get(this.dataStateService.selectedOption, this.config.selectTrackBy);\n        this.dataStateService.selectedOption = option.option;\n\n        if (selectedId !== id) {\n          this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n        }\n        break;\n      }\n    }\n\n    if (this.config.closeMenuOnSelect) {\n      this.dataStateService.componentLoaderRef.hide();\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { DropdownConfig } from './models/dropdown-config.model';\n\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { DropdownViewComponent } from './components/dropdown-view/dropdown-view.component';\nimport { DropdownFilterComponent } from './components/dropdown-filter/dropdown-filter.component';\nimport { DropdownOptionsComponent } from './components/dropdown-options/dropdown-options.component';\n\nimport { DROPDOWN_CONFIG } from './services/dropdown-config.service';\n\nimport { UtilityModule } from '../utility/utility.module';\n\nconst COMPONENTS = [DropdownComponent, DropdownViewComponent, DropdownFilterComponent, DropdownOptionsComponent];\n\n/**\n * Module representing dropdown component.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, UtilityModule.forRoot()],\n  declarations: [...COMPONENTS],\n  exports: [DropdownComponent],\n  entryComponents: [DropdownViewComponent]\n})\nexport class DropdownModule {\n  /**\n   * Set module root configuration overrides.\n   * @param dropdownConfig Dropdown configuration object.\n   * @return Module with custom providers.\n   */\n  static forRoot(dropdownConfig?: DropdownConfig): ModuleWithProviders {\n    return {\n      ngModule: DropdownModule,\n      providers: [\n        {\n          provide: DROPDOWN_CONFIG,\n          useValue: dropdownConfig\n        }\n      ]\n    };\n  }\n}\n\nexport { DropdownTranslations } from './models/dropdown-translations.model';\nexport { DropdownOption } from './models/dropdown-option.model';\nexport { DropdownRequestParams } from './models/dropdown-request-params.model';\nexport { DropdownFilter } from './models/dropdown-filter.model';\nexport { DropdownDataBindCallback } from './models/dropdown-data-bind-callback.model';\nexport { DropdownQueryResult } from './models/dropdown-query-result.model';\nexport { DropdownConfig } from './models/dropdown-config.model';\n\nexport { DropdownSelectMode } from './models/dropdown-select-mode.model';\n\nexport { DropdownComponent } from './components/dropdown/dropdown.component';\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { DataTableConfig } from './models/data-table-config.model';\n\nimport { DataTableColumnComponent } from './components/data-table-column/data-table-column.component';\n\n// tslint:disable-next-line\nimport { DataTableColumnFilterHeaderComponent } from './components/data-table-column-filter-header/data-table-column-filter-header.component';\n// tslint:disable-next-line\nimport { DataTableColumnFilterTemplateComponent } from './components/data-table-column-filter-template/data-table-column-filter-template.component';\nimport { DataTableColumnTitleHeaderComponent } from './components/data-table-column-title-header/data-table-column-title-header.component';\nimport { DataTableHeaderComponent } from './components/data-table-header/data-table-header.component';\nimport { DataTableColGroupComponent } from './components/data-table-col-group/data-table-col-group.component';\nimport { DataTablePaginationComponent } from './components/data-table-pagination/data-table-pagination.component';\nimport { DataTableComponent } from './components/data-table/data-table.component';\nimport { DataTableBodyComponent } from './components/data-table-body/data-table-body.component';\nimport { DataTableColumnSelectorComponent } from './components/data-table-column-selector/data-table-column-selector.component';\nimport { DataTableNoDataBodyComponent } from './components/data-table-no-data-body/data-table-no-data-body.component';\nimport { DataTableHeadComponent } from './components/data-table-head/data-table-head.component';\nimport { DataTableLoadingSpinnerComponent } from './components/data-table-loading-spinner/data-table-loading-spinner.component';\n\nimport { DATA_TABLE_CONFIG } from './services/data-table-config.service';\n\nimport { ScrollPositionDirective } from './directives/scroll-position.directive';\nimport { ScrollElementDirective } from './directives/scroll-element.directive';\nimport { ElementWidthDirective } from './directives/element-width.directive';\n\nimport { DropdownModule } from '../dropdown/dropdown.module';\nimport { UtilityModule } from '../utility/utility.module';\n\nconst COMPONENTS = [\n  DataTableHeaderComponent,\n  DataTableColumnComponent,\n  DataTableColGroupComponent,\n  DataTableBodyComponent,\n  DataTablePaginationComponent,\n  DataTableComponent,\n  DataTableColumnSelectorComponent,\n  DataTableNoDataBodyComponent,\n  DataTableColumnFilterHeaderComponent,\n  DataTableColumnFilterTemplateComponent,\n  DataTableColumnTitleHeaderComponent,\n  DataTableHeadComponent,\n  DataTableLoadingSpinnerComponent\n];\n\nconst DIRECTIVES = [ScrollPositionDirective, ScrollElementDirective, ElementWidthDirective];\n\nconst PROVIDERS = [];\n\n/**\n * Module representing data table component.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, UtilityModule.forRoot(), DropdownModule.forRoot()],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  providers: [...PROVIDERS],\n  exports: [DataTableColumnComponent, DataTableComponent],\n  entryComponents: [DataTableColumnSelectorComponent]\n})\nexport class DataTableModule {\n  /**\n   * Set module root configuration overrides.\n   * @param dataTableConfig Data table configuration object.\n   * @return Module with custom providers.\n   */\n  public static forRoot(dataTableConfig?: DataTableConfig): ModuleWithProviders {\n    return {\n      ngModule: DataTableModule,\n      providers: [\n        {\n          provide: DATA_TABLE_CONFIG,\n          useValue: dataTableConfig\n        }\n      ]\n    };\n  }\n}\n\n// exports\nexport { DataTableCellBindEventArgs } from './models/data-table-cell-bind-event-args.model';\nexport { DataTableQueryResult } from './models/data-table-query-result.model';\nexport { DataTableQueryField } from './models/data-table-query-field.model';\nexport { DataTableFilterOption } from './models/data-table-filter-option.model';\nexport { DataTableCellClickEventArgs } from './models/data-table-cell-click-event-args.model';\nexport { DataTableHeaderClickEventArgs } from './models/data-table-header-click-event-args.model';\nexport { DataTableDoubleClickEventArgs } from './models/data-table-double-click-event-args.model';\nexport { DataTableRowClickEventArgs } from './models/data-table-row-click-event-args.model';\nexport { DataTableScrollPoint } from './models/data-table-scroll-point.model';\nexport { DataTableRow } from './models/data-table-row.model';\nexport { DataTableRequestParams } from './models/data-table-request-params.model';\nexport { DataTableTranslations } from './models/data-table-translations.model';\nexport { DataTableDynamicRowSpanExtractorCallback } from './models/data-table-group-field-extractor-callback.model';\nexport { DataTableFilterValueExtractCallback } from './models/data-table-filter-value-extract-callback.model';\nexport { DataTableFilterFieldMapperCallback } from './models/data-table-filter-field-mapper-callback.model';\nexport { DataTableFilterExpressionCallback } from './models/data-table-filter-expression-callback.model';\nexport { DataTableCellColorRenderCallback } from './models/data-table-cell-color-render-callback.model';\nexport { DataTableSelectMode } from './models/data-table-select-mode.model';\nexport { DataTableDataBindCallback } from './models/data-table-data-bind-callback.model';\n\nexport { DataTableSortOrder } from './models/data-table-sort-order.model';\nexport { DataTableStorageMode } from './models/data-table-storage-mode.model';\nexport { DataFetchMode } from './models/data-fetch-mode.enum';\n\nexport { DataTableComponent } from './components/data-table/data-table.component';\nexport { DataTableColumnComponent } from './components/data-table-column/data-table-column.component';\n","import { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpRequestOptions } from '../models/http-request-options.model';\nimport { RequestOptions } from '../models/request-options.model';\nimport { ResourceOptions } from '../models/resource-options.model';\n\n/**\n * Request parameter mapper service.\n */\n@Injectable()\nexport class RequestParamMapperService {\n  /**\n   * Map HTTP query parameters by request options.\n   * @param requestOptions Request options object reference.\n   */\n  public mapQueryParams(requestOptions: HttpRequestOptions): HttpParams {\n    if (requestOptions && requestOptions.params) {\n      if (requestOptions.params instanceof HttpParams) {\n        return requestOptions.params;\n      } else {\n        let queryParams = new HttpParams();\n        for (const key in requestOptions.params) {\n          if (requestOptions.params.hasOwnProperty(key)) {\n            queryParams = queryParams.set(key, requestOptions.params[key]);\n          }\n        }\n\n        return queryParams;\n      }\n    } else {\n      return new HttpParams();\n    }\n  }\n\n  /**\n   * Map request options by http request data.\n   * @param options Request options object reference.\n   */\n  public mapRequestOptions(options: string|ResourceOptions): RequestOptions {\n    const requestOptions: RequestOptions = {\n      url: '',\n      options: {}\n    };\n\n    if (typeof options === 'object') {\n      requestOptions.options = options;\n      requestOptions.url = options.url;\n    } else {\n      requestOptions.url = options;\n    }\n\n    return requestOptions;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Utility config service which holds all the global configurations of utility which can be overridden while\n * importing the module.\n */\n@Injectable()\nexport class ResourceUtilityConfigService {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { RequestParamMapperService } from './services/request-param-mapper.service';\nimport { ResourceUtilityConfigService } from './services/resource-utility-config.service';\n\n\nconst PROVIDERS = [RequestParamMapperService];\n\n/**\n * Resource utility module.\n */\n@NgModule({\n  imports: [],\n  providers: [...PROVIDERS]\n})\nexport class ResourceUtilityModule {\n  /**\n   * Set module root configuration overrides.\n   * @return Module with custom providers.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ResourceUtilityModule,\n      providers: [ResourceUtilityConfigService]\n    };\n  }\n}\n\nexport { ResourceOptions } from './models/resource-options.model';\nexport { RequestOptions } from './models/request-options.model';\nexport { HttpRequestOptions } from './models/http-request-options.model';\n\nexport { RequestParamMapperService };\n","import { Injectable } from '@angular/core';\n\n/**\n * Data table resource config service holds all the global configurations of data table resource which can be overridden\n * while importing the module\n */\n@Injectable()\nexport class DataTableResourceConfigService {}\n","import { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DataTableRequestParams } from '../../data-table/models/data-table-request-params.model';\nimport { DataTableQueryResult } from '../../data-table/models/data-table-query-result.model';\nimport { DataTableQueryField } from '../../data-table/models/data-table-query-field.model';\nimport { DataTableDataBindCallback } from '../../data-table/models/data-table-data-bind-callback.model';\nimport { DataTableFilterValueExtractCallback } from '../../data-table/models/data-table-filter-value-extract-callback.model';\nimport { DataTableFilterOption } from '../../data-table/models/data-table-filter-option.model';\nimport { HttpRequestOptions } from '../../resource-utility/models/http-request-options.model';\nimport { ResourceOptions } from '../../resource-utility/models/resource-options.model';\n\nimport { DataTableColumnComponent } from '../../data-table/components/data-table-column/data-table-column.component';\n\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\n\n/**\n * Data table HTTP data fetch service.\n */\nexport class DataTableHttpDataFetchService<T> {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {}\n\n  /**\n   * Get data bind event handler.\n   * @param options Request options or resource path.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Data table bind event handler.\n   */\n  public onDataBind(\n    options: string|ResourceOptions,\n    mapper?: <Q>(response: Observable<Q>) => Observable<DataTableQueryResult<T>>,\n  ): DataTableDataBindCallback<T> {\n    return (params?: DataTableRequestParams): Observable<DataTableQueryResult<T>> => {\n      const requestOptions = this.requestParamMapperService.mapRequestOptions(options);\n      let queryParams = this.requestParamMapperService.mapQueryParams(requestOptions.options);\n\n      if (params) {\n        if (params.limit !== undefined) {\n          queryParams = queryParams.set('limit', String(params.limit));\n        }\n\n        if (params.offset !== undefined) {\n          queryParams = queryParams.set('offset', String(params.offset));\n        }\n\n        params.fields.forEach((column: DataTableQueryField) => {\n          let query = '';\n\n          if (column.filterable) {\n            if (typeof column.filterValue === 'string') {\n              if (column.filterValue !== '') {\n                query += column.filterValue;\n              }\n            } else if (Array.isArray(column.filterValue) && column.filterValue.length) {\n              query += column.filterValue.join(',');\n            }\n          }\n\n          if (column.sortable && column.sortOrder !== '') {\n            query += `|${column.sortOrder}|${column.sortPriority}`;\n          }\n\n          if (query) {\n            queryParams = queryParams.set(column.field, query);\n          }\n        });\n\n        requestOptions.options.params = queryParams;\n\n        const resource = this.http.get<any>(requestOptions.url, requestOptions.options as any) as Observable<any>;\n\n        if (mapper) {\n          return mapper(resource);\n        }\n\n        return resource;\n      }\n    };\n  }\n\n  /**\n   * Get filter value extract event handler.\n   * @param options Request options or resource path.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Data table filter options event handler.\n   */\n  public onFilterValueExtract(\n    options: string|HttpRequestOptions,\n    mapper?: <Q>(response: Observable<Q>) => Observable<DataTableFilterOption[]>,\n  ): DataTableFilterValueExtractCallback {\n    return (column: DataTableColumnComponent): Observable<DataTableFilterOption[]> => {\n      const requestOptions = this.requestParamMapperService.mapRequestOptions(options);\n      let queryParams = this.requestParamMapperService.mapQueryParams(requestOptions.options);\n\n      const filterField = column.filterField || column.field;\n      queryParams = queryParams.set('field', filterField);\n\n      const resource = this.http.get<any>(requestOptions.url, { params: queryParams, ...requestOptions }) as Observable<any>;\n\n      if (mapper) {\n        return mapper(resource);\n      }\n\n      return resource;\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataTableHttpDataFetchService } from './data-table-http-data-fetch.service';\n\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\n\n/**\n * Data table HTTP data fetch service factory.\n */\n@Injectable()\nexport class DataTableHttpResourceFactoryService {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {\n  }\n\n  /**\n   * Get new data table HTTP data fetch service instance.\n   */\n  public getResourceProvider<T>(): DataTableHttpDataFetchService<T> {\n    return new DataTableHttpDataFetchService<T>(this.http, this.requestParamMapperService);\n  }\n}\n","import { Subscription, Subject, Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\n\nimport { DataTableRequestParams } from '../../data-table/models/data-table-request-params.model';\nimport { DataTableQueryResult } from '../../data-table/models/data-table-query-result.model';\nimport { DataTableDataBindCallback } from '../../data-table/models/data-table-data-bind-callback.model';\n\n/**\n * Data table web socket data fetch service.\n */\nexport class DataTableWebsocketDataFetchService<T> {\n  private socket: WebSocketSubject<DataTableQueryResult<T>>;\n  private subject: Subject<DataTableQueryResult<T>>;\n  private socketSubscription: Subscription;\n\n  constructor() {}\n\n  /**\n   * Initialize web socket connection.\n   * @param config Socket configuration parameters.\n   */\n  public init(config?: WebSocketSubjectConfig<DataTableQueryResult<T>>): void {\n    this.socket = webSocket<any>(config);\n    this.subject = new Subject<DataTableQueryResult<T>>();\n  }\n\n  /**\n   * Get socket stream reference.\n   */\n  public get socketStream(): WebSocketSubject<DataTableQueryResult<T>> {\n    return this.socket;\n  }\n\n  /**\n   * Web socket data bind event handler.\n   * Must call init prior to calling this function.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Data table bind event handler.\n   */\n  public onDataBind(mapper?: <Q>(source: Observable<Q>) => Observable<DataTableQueryResult<T>>): DataTableDataBindCallback<T> {\n    if (!this.socket) {\n      throw Error('Initialize socket data source before data bind.');\n    }\n\n    this.socketSubscription = this.socket.subscribe(this.subject);\n\n    return (params?: DataTableRequestParams): Observable<DataTableQueryResult<T>> => {\n      if (params) {\n        this.socket.next({\n          type: 'data-fetch',\n          offset: params.offset,\n          limit: params.limit,\n          fields: params.fields\n        } as any);\n\n        if (mapper) {\n          return mapper(this.subject);\n        }\n\n        return this.subject;\n      }\n    };\n  }\n\n  /**\n   * Dispose web socket connection.\n   */\n  public dispose(): void {\n    if (this.socket) {\n      this.socket.complete();\n    }\n\n    if (this.socketSubscription) {\n      this.socketSubscription.unsubscribe();\n    }\n\n    if (this.subject) {\n      this.subject.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataTableWebsocketDataFetchService } from './data-table-websocket-data-fetch.service';\n\n/**\n * Data table web socket data fetch service factory.\n */\n@Injectable()\nexport class DataTableWebsocketResourceFactoryService {\n\n  /**\n   * Get new data table websocket fetch service instance.\n   */\n  public getResourceProvider<T>(): DataTableWebsocketDataFetchService<T> {\n    return new DataTableWebsocketDataFetchService<T>();\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ResourceUtilityModule } from '../resource-utility/resource-utility.module';\n\nimport { DataTableHttpDataFetchService } from './services/data-table-http-data-fetch.service';\nimport { DataTableWebsocketDataFetchService } from './services/data-table-websocket-data-fetch.service';\nimport { DataTableResourceConfigService } from './services/data-table-resource-config.service';\nimport { DataTableHttpResourceFactoryService } from './services/data-table-http-resource-factory.service';\nimport { DataTableWebsocketResourceFactoryService } from './services/data-table-websocket-resource-factory.service';\n\nconst PROVIDERS = [DataTableHttpResourceFactoryService, DataTableWebsocketResourceFactoryService];\n\n/**\n * Data table data source module.\n */\n@NgModule({\n  imports: [ResourceUtilityModule],\n  providers: [...PROVIDERS]\n})\nexport class DataTableResourceModule {\n  /**\n   * Set module root configuration overrides\n   * @return Module with custom providers\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DataTableResourceModule,\n      providers: [DataTableResourceConfigService]\n    };\n  }\n}\n\nexport { DataTableHttpDataFetchService } from './services/data-table-http-data-fetch.service';\nexport { DataTableHttpResourceFactoryService };\n\nexport { DataTableWebsocketDataFetchService } from './services/data-table-websocket-data-fetch.service';\nexport { DataTableWebsocketResourceFactoryService };\n","import { Injectable } from '@angular/core';\n\n/**\n * Dropdown resource config service which holds all the global configurations of dropdown resource which can be overridden\n * while importing the module.\n */\n@Injectable()\nexport class DropdownResourceConfigService {}\n","import { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DropdownDataBindCallback } from '../../dropdown/models/dropdown-data-bind-callback.model';\nimport { DropdownQueryResult } from '../../dropdown/models/dropdown-query-result.model';\nimport { DropdownRequestParams } from '../../dropdown/models/dropdown-request-params.model';\n\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\nimport { ResourceOptions } from '../../resource-utility/models/resource-options.model';\n\n/**\n * Dropdown HTTP data fetch service.\n */\nexport class DropdownHttpDataFetchService<T> {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {}\n\n  /**\n   * Get data bind event handler.\n   * @param options Request options or resource path.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Dropdown bind event handler.\n   */\n  public onDataBind(\n    options: string|ResourceOptions,\n    mapper?: <Q>(response: Observable<Q>) => Observable<DropdownQueryResult<T>>,\n  ): DropdownDataBindCallback<T> {\n    return (params?: DropdownRequestParams): Observable<DropdownQueryResult<T>> => {\n      const requestOptions = this.requestParamMapperService.mapRequestOptions(options);\n      let queryParams = this.requestParamMapperService.mapQueryParams(requestOptions.options);\n\n      if (params) {\n        if (params.limit !== undefined) {\n          queryParams = queryParams.set('limit', String(params.limit));\n        }\n\n        if (params.offset !== undefined) {\n          queryParams = queryParams.set('offset', String(params.offset));\n        }\n\n        if (params.filter && params.filter.value) {\n          queryParams = queryParams.set('field', params.filter.key);\n          queryParams = queryParams.set('filter', params.filter.value);\n        }\n\n        requestOptions.options.params = queryParams;\n\n        const resource = this.http.get<any>(requestOptions.url, requestOptions.options as any) as Observable<any>;\n\n        if (mapper) {\n          return mapper(resource);\n        }\n\n        return resource;\n      }\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DropdownHttpDataFetchService } from './dropdown-http-data-fetch.service';\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\n\n/**\n * Dropdown HTTP data fetch service factory.\n */\n@Injectable()\nexport class DropdownHttpResourceFactoryService {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {\n  }\n\n  /**\n   * Get new dropdown HTTP data fetch service instance.\n   */\n  public getResourceProvider<T>(): DropdownHttpDataFetchService<T> {\n    return new DropdownHttpDataFetchService<T>(this.http, this.requestParamMapperService);\n  }\n}\n","import { Subscription, Subject, Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\n\nimport { DropdownDataBindCallback } from '../../dropdown/models/dropdown-data-bind-callback.model';\nimport { DropdownQueryResult } from '../../dropdown/models/dropdown-query-result.model';\nimport { DropdownRequestParams } from '../../dropdown/models/dropdown-request-params.model';\n\n/**\n * Dropdown websocket data fetch service.\n */\nexport class DropdownWebsocketDataFetchService<T> {\n  private socket: WebSocketSubject<DropdownQueryResult<T>>;\n  private subject: Subject<DropdownQueryResult<T>>;\n  private socketSubscription: Subscription;\n\n  constructor() {}\n\n  /**\n   * Initialize websocket connection.\n   * @param config Websocket configuration object reference.\n   */\n  public init(config?: WebSocketSubjectConfig<DropdownQueryResult<T>>): void {\n    this.socket = webSocket<any>(config);\n    this.subject = new Subject<DropdownQueryResult<T>>();\n  }\n\n  /**\n   * Get socket stream reference.\n   */\n  public get socketStream(): WebSocketSubject<DropdownQueryResult<T>> {\n    return this.socket;\n  }\n\n  /**\n   * Websocket data bind event handler.\n   * Must call init prior to calling this function.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Dropdown bind event handler.\n   */\n  public onDataBind(mapper?: <Q>(response: Observable<Q>) => Observable<DropdownQueryResult<T>>): DropdownDataBindCallback<T> {\n    if (!this.socket) {\n      throw Error('Initialize socket data source before data bind.');\n    }\n\n    this.socketSubscription = this.socket.subscribe(this.subject);\n\n    return (params?: DropdownRequestParams): Observable<DropdownQueryResult<T>> => {\n      if (params) {\n        this.socket.next({\n          type: 'data-fetch',\n          filter: params.filter,\n          offset: params.offset,\n          limit: params.limit\n        } as any);\n\n        if (mapper) {\n          return mapper(this.subject);\n        }\n\n        return this.subject;\n      }\n    };\n  }\n\n  /**\n   * Dispose websocket connection.\n   */\n  public dispose(): void {\n    if (this.socket) {\n      this.socket.complete();\n    }\n\n    if (this.socketSubscription) {\n      this.socketSubscription.unsubscribe();\n    }\n\n    if (this.subject) {\n      this.subject.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DropdownWebsocketDataFetchService } from './dropdown-websocket-data-fetch.service';\n\n/**\n * Dropdown web socket data fetch service factory.\n */\n@Injectable()\nexport class DropdownWebsocketResourceFactoryService {\n\n  /**\n   * Get new dropdown websocket fetch service instance.\n   */\n  public getResourceProvider<T>(): DropdownWebsocketDataFetchService<T> {\n    return new DropdownWebsocketDataFetchService<T>();\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ResourceUtilityModule } from '../resource-utility/resource-utility.module';\n\nimport { DropdownHttpDataFetchService } from './services/dropdown-http-data-fetch.service';\nimport { DropdownWebsocketDataFetchService } from './services/dropdown-websocket-data-fetch.service';\nimport { DropdownResourceConfigService } from './services/dropdown-resource-config.service';\nimport { DropdownHttpResourceFactoryService } from './services/dropdown-http-resource-factory.service';\nimport { DropdownWebsocketResourceFactoryService } from './services/dropdown-websocket-resource-factory.service';\n\nconst PROVIDERS = [DropdownHttpResourceFactoryService, DropdownWebsocketResourceFactoryService];\n\n/**\n * Dropdown data source module.\n */\n@NgModule({\n  imports: [ResourceUtilityModule],\n  providers: [...PROVIDERS]\n})\nexport class DropdownResourceModule {\n  /**\n   * Set module root configuration overrides.\n   * @return Module with custom providers.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DropdownResourceModule,\n      providers: [DropdownResourceConfigService]\n    };\n  }\n}\n\nexport { DropdownHttpDataFetchService } from './services/dropdown-http-data-fetch.service';\nexport { DropdownHttpResourceFactoryService };\n\nexport { DropdownWebsocketDataFetchService } from './services/dropdown-websocket-data-fetch.service';\nexport { DropdownWebsocketResourceFactoryService };\n"],"names":["InjectionToken","tslib_1.__values","Injectable","Inject","EventEmitter","ReplaySubject","Component","ContentChild","Input","Subject","debounceTime","switchMap","Output","Directive","ElementRef","Pipe","fromEvent","take","ComponentFactoryResolver","ApplicationRef","NgModule","CommonModule","Injector","Renderer2","ViewChild","of","catchError","NG_VALUE_ACCESSOR","forwardRef","NgZone","ContentChildren","map","pairwise","FormsModule","COMPONENTS","DIRECTIVES","PROVIDERS","HttpParams","HttpClient","webSocket"],"mappings":"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"}