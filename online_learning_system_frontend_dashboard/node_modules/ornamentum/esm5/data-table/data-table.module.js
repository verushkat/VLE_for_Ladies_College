/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { DataTableColumnComponent } from './components/data-table-column/data-table-column.component';
// tslint:disable-next-line
import { DataTableColumnFilterHeaderComponent } from './components/data-table-column-filter-header/data-table-column-filter-header.component';
// tslint:disable-next-line
import { DataTableColumnFilterTemplateComponent } from './components/data-table-column-filter-template/data-table-column-filter-template.component';
import { DataTableColumnTitleHeaderComponent } from './components/data-table-column-title-header/data-table-column-title-header.component';
import { DataTableHeaderComponent } from './components/data-table-header/data-table-header.component';
import { DataTableColGroupComponent } from './components/data-table-col-group/data-table-col-group.component';
import { DataTablePaginationComponent } from './components/data-table-pagination/data-table-pagination.component';
import { DataTableComponent } from './components/data-table/data-table.component';
import { DataTableBodyComponent } from './components/data-table-body/data-table-body.component';
import { DataTableColumnSelectorComponent } from './components/data-table-column-selector/data-table-column-selector.component';
import { DataTableNoDataBodyComponent } from './components/data-table-no-data-body/data-table-no-data-body.component';
import { DataTableHeadComponent } from './components/data-table-head/data-table-head.component';
import { DataTableLoadingSpinnerComponent } from './components/data-table-loading-spinner/data-table-loading-spinner.component';
import { DATA_TABLE_CONFIG } from './services/data-table-config.service';
import { ScrollPositionDirective } from './directives/scroll-position.directive';
import { ScrollElementDirective } from './directives/scroll-element.directive';
import { ElementWidthDirective } from './directives/element-width.directive';
import { DropdownModule } from '../dropdown/dropdown.module';
import { UtilityModule } from '../utility/utility.module';
/** @type {?} */
var COMPONENTS = [
    DataTableHeaderComponent,
    DataTableColumnComponent,
    DataTableColGroupComponent,
    DataTableBodyComponent,
    DataTablePaginationComponent,
    DataTableComponent,
    DataTableColumnSelectorComponent,
    DataTableNoDataBodyComponent,
    DataTableColumnFilterHeaderComponent,
    DataTableColumnFilterTemplateComponent,
    DataTableColumnTitleHeaderComponent,
    DataTableHeadComponent,
    DataTableLoadingSpinnerComponent
];
/** @type {?} */
var DIRECTIVES = [ScrollPositionDirective, ScrollElementDirective, ElementWidthDirective];
/** @type {?} */
var PROVIDERS = [];
/**
 * Module representing data table component.
 */
var DataTableModule = /** @class */ (function () {
    function DataTableModule() {
    }
    /**
     * Set module root configuration overrides.
     * @param dataTableConfig Data table configuration object.
     * @return Module with custom providers.
     */
    /**
     * Set module root configuration overrides.
     * @param {?=} dataTableConfig Data table configuration object.
     * @return {?} Module with custom providers.
     */
    DataTableModule.forRoot = /**
     * Set module root configuration overrides.
     * @param {?=} dataTableConfig Data table configuration object.
     * @return {?} Module with custom providers.
     */
    function (dataTableConfig) {
        return {
            ngModule: DataTableModule,
            providers: [
                {
                    provide: DATA_TABLE_CONFIG,
                    useValue: dataTableConfig
                }
            ]
        };
    };
    DataTableModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule, FormsModule, UtilityModule.forRoot(), DropdownModule.forRoot()],
                    declarations: tslib_1.__spread(COMPONENTS, DIRECTIVES),
                    providers: tslib_1.__spread(PROVIDERS),
                    exports: [DataTableColumnComponent, DataTableComponent],
                    entryComponents: [DataTableColumnSelectorComponent]
                },] }
    ];
    return DataTableModule;
}());
export { DataTableModule };
export { DataFetchMode } from './models/data-fetch-mode.enum';
export { DataTableComponent } from './components/data-table/data-table.component';
export { DataTableColumnComponent } from './components/data-table-column/data-table-column.component';
//# sourceMappingURL=data:application/json;base64,