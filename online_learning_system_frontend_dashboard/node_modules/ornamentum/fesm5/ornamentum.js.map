{"version":3,"file":"ornamentum.js","sources":["ng://ornamentum/data-table/services/data-table-config.service.ts","ng://ornamentum/data-table/services/data-table-event.service.ts","ng://ornamentum/data-table/services/data-table-data-state.service.ts","ng://ornamentum/data-table/components/data-table-column/data-table-column.component.ts","ng://ornamentum/data-table/models/data-fetch-mode.enum.ts","ng://ornamentum/data-table/components/data-table-column-filter-header/data-table-column-filter-header.component.ts","ng://ornamentum/data-table/services/data-table-scroll-position.service.ts","ng://ornamentum/data-table/components/data-table-column-filter-template/data-table-column-filter-template.component.ts","ng://ornamentum/utility/services/object-utility.class.ts","ng://ornamentum/utility/directives/init.directive.ts","ng://ornamentum/utility/directives/focus.directive.ts","ng://ornamentum/utility/pipes/pixel-converter.pipe.ts","ng://ornamentum/utility/services/utility-config.service.ts","ng://ornamentum/utility/services/drag-and-drop.service.ts","ng://ornamentum/utility/services/global-ref.service.ts","ng://ornamentum/utility/services/resize.service.ts","ng://ornamentum/utility/services/popover-component-loader.class.ts","ng://ornamentum/utility/services/popover-component-loader-factory.service.ts","ng://ornamentum/utility/services/validator.service.ts","ng://ornamentum/utility/utility.module.ts","ng://ornamentum/data-table/components/data-table-column-title-header/data-table-column-title-header.component.ts","ng://ornamentum/data-table/components/data-table-column-selector/data-table-column-selector.component.ts","ng://ornamentum/data-table/components/data-table-header/data-table-header.component.ts","ng://ornamentum/data-table/components/data-table-col-group/data-table-col-group.component.ts","ng://ornamentum/data-table/components/data-table-pagination/data-table-pagination.component.ts","ng://ornamentum/data-table/services/data-table-persistence.service.ts","ng://ornamentum/data-table/services/data-table-resource.service.ts","ng://ornamentum/data-table/components/data-table/data-table.component.ts","ng://ornamentum/data-table/components/data-table-body/data-table-body.component.ts","ng://ornamentum/data-table/components/data-table-no-data-body/data-table-no-data-body.component.ts","ng://ornamentum/data-table/components/data-table-head/data-table-head.component.ts","ng://ornamentum/data-table/components/data-table-loading-spinner/data-table-loading-spinner.component.ts","ng://ornamentum/data-table/directives/scroll-position.directive.ts","ng://ornamentum/data-table/directives/scroll-element.directive.ts","ng://ornamentum/data-table/directives/element-width.directive.ts","ng://ornamentum/dropdown/services/dropdown-config.service.ts","ng://ornamentum/dropdown/services/dropdown-data-state.service.ts","ng://ornamentum/dropdown/services/dropdown-event-state.service.ts","ng://ornamentum/dropdown/components/dropdown-view/dropdown-view.component.ts","ng://ornamentum/dropdown/services/dropdown-resource.service.ts","ng://ornamentum/dropdown/components/dropdown/dropdown.component.ts","ng://ornamentum/dropdown/components/dropdown-filter/dropdown-filter.component.ts","ng://ornamentum/dropdown/components/dropdown-options/dropdown-options.component.ts","ng://ornamentum/dropdown/dropdown.module.ts","ng://ornamentum/data-table/data-table.module.ts","ng://ornamentum/resource-utility/services/request-param-mapper.service.ts","ng://ornamentum/resource-utility/services/resource-utility-config.service.ts","ng://ornamentum/resource-utility/resource-utility.module.ts","ng://ornamentum/data-table-resource/services/data-table-resource-config.service.ts","ng://ornamentum/data-table-resource/services/data-table-http-data-fetch.service.ts","ng://ornamentum/data-table-resource/services/data-table-http-resource-factory.service.ts","ng://ornamentum/data-table-resource/services/data-table-websocket-data-fetch.service.ts","ng://ornamentum/data-table-resource/services/data-table-websocket-resource-factory.service.ts","ng://ornamentum/data-table-resource/data-table-resource.module.ts","ng://ornamentum/dropdown-resource/services/dropdown-resource-config.service.ts","ng://ornamentum/dropdown-resource/services/dropdown-http-data-fetch.service.ts","ng://ornamentum/dropdown-resource/services/dropdown-http-resource-factory.service.ts","ng://ornamentum/dropdown-resource/services/dropdown-websocket-data-fetch.service.ts","ng://ornamentum/dropdown-resource/services/dropdown-websocket-resource-factory.service.ts","ng://ornamentum/dropdown-resource/dropdown-resource.module.ts"],"sourcesContent":["import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { DataTableTranslations } from '../models/data-table-translations.model';\nimport { DataTableConfig } from '../models/data-table-config.model';\n\nimport { DataTableStorageMode } from '../models/data-table-storage-mode.model';\nimport { DataTableSortOrder } from '../models/data-table-sort-order.model';\nimport { DataTableSelectMode } from '../models/data-table-select-mode.model';\nimport { DropdownSelectMode } from '../../dropdown/dropdown.module';\nimport { ViewPosition } from '../../utility/models/view-position.model';\n\nexport const DATA_TABLE_CONFIG = new InjectionToken<DataTableConfig>('dataTableConfig');\n\n/**\n * Data table config service\n * Manage all the global configurations of grid which can be overridden while importing the module.\n */\n@Injectable()\nexport class DataTableConfigService implements DataTableConfig {\n  // Table base config\n  public persistTableState = false;\n  public storageMode: DataTableStorageMode = 'session';\n  public multiColumnSortable = false;\n  public showHeader = false;\n  public title = '';\n  public width = undefined;\n  public minContentHeight: string | number = 200;\n  public minContentWidth = undefined;\n  public contentHeight = undefined;\n  public pageable = false;\n  public loadOnScroll = false;\n  public loadViewDistanceRatio = 1;\n  public showIndexColumn = false;\n  public indexColumnTitle = '#';\n  public rowSelectable = false;\n  public selectMode: DataTableSelectMode = 'single';\n  public showRowSelectCheckbox = true;\n  public showRowSelectAllCheckbox = false;\n  public showSubstituteRows = false;\n  public expandableRows = false;\n  public selectOnRowClick = false;\n  public expandOnRowClick = false;\n  public autoFetch = true;\n  public showLoadingSpinner = true;\n  public selectTrackBy = 'id';\n  public filterDebounceTime = 500;\n  public filterDebounce = true;\n  public showRefreshButton = false;\n  public showColumnSelector = false;\n  public columnSelectorWidth = 240;\n  public expanderColumnWidth: string | number = 30;\n  public indexColumnWidth: string | number = 30;\n  public selectionColumnWidth: string | number = 30;\n  public showRowExpandLoadingSpinner = false;\n  public offset = 0;\n  public limit = 10;\n  public maxLimit = 100;\n  public stateKeyPrefix = 'grid_state_';\n  public baseTranslations: DataTableTranslations = {\n    noDataMessage: {\n      header: 'Whoops!',\n      body: 'No data to display. Added data will appear here.',\n    },\n    pagination: {\n      limit: 'Limit:',\n      rangeKey: 'Results:',\n      rangeSeparator: 'of',\n      nextTooltip: 'Next',\n      previousTooltip: 'Previous',\n      lastTooltip: 'Last',\n      firstTooltip: 'First'\n    },\n    columnSelector: {\n      header: 'Show/Hide Column'\n    },\n    dropdownFilter: {\n      noDataMessage: 'No Results Available',\n      filterPlaceholder: 'Search',\n      selectedOptionWrapPlaceholder: 'Options',\n      selectPlaceholder: 'Select'\n    }\n  };\n\n  // Table column config\n  public sortable = false;\n  public sortOrder: DataTableSortOrder = '';\n  public filterable = false;\n  public filterPlaceholder = 'Search';\n  public columnResizable = false;\n  public columnVisible = true;\n  public showDropdownFilter = false;\n  public showFilterClearButton = true;\n\n  // Column dropdown filter options\n  public dropdownFilterMenuPosition: ViewPosition = 'bottom-left';\n  public dropdownFilterSelectMode: DropdownSelectMode = 'multi';\n  public dropdownFilterSearchable = true;\n  public dropdownFilterSearchDebounceTime = 500;\n  public dropdownFilterSearchDebounce = true;\n  public dropdownFilterWrapDisplaySelectLimit = 1;\n  public dropdownFilterGroupByField = undefined;\n  public dropdownFilterShowSelectedOptionRemoveButton = false;\n  public dropdownFilterShowClearSelectionButton = true;\n  public dropdownFilterMenuWidth = 320;\n  public dropdownFilterMenuHeight = 250;\n  public dropdownFilterMultiSelectOptionMaxWidth = 135;\n  public dropdownFilterCloseMenuOnSelect = true;\n  public dropdownFilterDynamicDimensionCalculation = true;\n  public dropdownFilterDynamicWidthRatio = 1.25;\n  public dropdownFilterDynamicHeightRatio = 1.25;\n\n  constructor(@Inject(DATA_TABLE_CONFIG) private dataTableConfig: DataTableConfig) {\n    if (dataTableConfig) {\n      Object.assign(this, dataTableConfig);\n    }\n  }\n\n  public set translations(value: DataTableTranslations) {\n    if (!value) {\n      return;\n    }\n\n    // all keys are object type.\n    for (const [key, val] of Object.entries(value)) {\n      this.baseTranslations[key] = { ...this.baseTranslations[key], ...val };\n    }\n  }\n\n  /**\n   * Returns translations.\n   */\n  public get translations(): DataTableTranslations {\n    return this.baseTranslations;\n  }\n\n  /**\n   * Get row select checkbox column.\n   */\n  public get showRowSelectCheckboxColumn(): boolean {\n    return this.rowSelectable && this.showRowSelectCheckbox;\n  }\n}\n\n","import { EventEmitter, Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs';\n\nimport { DataTableHeaderClickEventArgs } from '../models/data-table-header-click-event-args.model';\nimport { DataTableRow } from '../models/data-table-row.model';\nimport { DataTableRowClickEventArgs } from '../models/data-table-row-click-event-args.model';\nimport { DataTableDoubleClickEventArgs } from '../models/data-table-double-click-event-args.model';\nimport { DataTableCellBindEventArgs } from '../models/data-table-cell-bind-event-args.model';\nimport { DataTableCellClickEventArgs } from '../models/data-table-cell-click-event-args.model';\n\nimport { DataFetchMode } from '../models/data-fetch-mode.enum';\n\nimport { DataTableComponent } from '../components/data-table/data-table.component';\nimport { DataTableColumnComponent } from '../components/data-table-column/data-table-column.component';\n\n/**\n * Data table event state service; Manage all internal data tale event streams.\n */\n@Injectable()\nexport class DataTableEventStateService {\n  public allRowSelectChangeStream = new EventEmitter<boolean>();\n  public dataFetchStream = new EventEmitter<DataFetchMode>();\n  public headerClickStream = new EventEmitter<DataTableHeaderClickEventArgs>();\n  public rowBindStream = new EventEmitter<DataTableRow<any>>();\n  public rowClickStream = new EventEmitter<DataTableRowClickEventArgs<any>>();\n  public rowDoubleClickStream = new EventEmitter<DataTableDoubleClickEventArgs<any>>();\n  public rowSelectChangeStream = new EventEmitter<any | any[]>();\n  public cellBindStream = new EventEmitter<DataTableCellBindEventArgs<any>>();\n  public cellClickStream = new EventEmitter<DataTableCellClickEventArgs<any>>();\n  public initStream = new EventEmitter<DataTableComponent>();\n  public dataBoundStream = new EventEmitter<void>();\n  public columnBind = new EventEmitter<DataTableColumnComponent>();\n  public fetchFilterOptionsStream = new ReplaySubject(1);\n  public staticDataSourceStream = new ReplaySubject<any[]>(1);\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataTableRow } from '../models/data-table-row.model';\nimport { DataTableDynamicRowSpanExtractorCallback } from '../models/data-table-group-field-extractor-callback.model';\nimport { DataTableFilterValueExtractCallback } from '../models/data-table-filter-value-extract-callback.model';\nimport { DataTableDataBindCallback } from '../models/data-table-data-bind-callback.model';\n\n/**\n * Data table state manager service; Manage current data table state snapshot.\n */\n@Injectable()\nexport class DataTableDataStateService {\n  public id: string;\n  public allRowSelected = false;\n  public selectedRow: any;\n  public selectedRows: any[] = [];\n  public dataRows: DataTableRow<any>[] = [];\n  public itemCount: number;\n  public tableWidth: number;\n  public dataLoading = true;\n  public substituteRows: any[] = [];\n  public heardReload = false;\n  public currentSortPriority = 0;\n\n  public relativeParentElement: HTMLElement;\n  public onFilterValueExtract: DataTableFilterValueExtractCallback;\n  public onDataBind: DataTableDataBindCallback<any>;\n  public onDynamicRowSpanExtract: DataTableDynamicRowSpanExtractorCallback<any> = () => 1;\n\n  /**\n   * Get show no data overlay status.\n   * @return True if no data overlay should be shown.\n   */\n  public get showNoDataOverlay(): boolean {\n    return !this.dataRows.length && !this.dataLoading;\n  }\n\n  /**\n   * Get data table row unique id.\n   * @param append Target identifier.\n   * @param index Target index.\n   */\n  public getUniqueId(append: string, index: number): string {\n    return `${this.id}-dt-${append}-${index}`;\n  }\n}\n","import { Component, ContentChild, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { DataTableCellColorRenderCallback } from '../../models/data-table-cell-color-render-callback.model';\nimport { DataTableRow } from '../../models/data-table-row.model';\nimport { DataTableFilterFieldMapperCallback } from '../../models/data-table-filter-field-mapper-callback.model';\nimport { DataTableFilterExpressionCallback } from '../../models/data-table-filter-expression-callback.model';\n\nimport { DropdownSelectMode } from '../../../dropdown/dropdown.module';\nimport { DataTableSortOrder } from '../../models/data-table-sort-order.model';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { ViewPosition } from '../../../utility/models/view-position.model';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Data table column component. Data table columns associated data is captured via this component.\n */\n@Component({\n  selector: 'ng-data-table-column',\n  template: ''\n})\nexport class DataTableColumnComponent implements OnInit, OnDestroy {\n  private filterValueExtractorSubscription: Subscription;\n\n  private currentSortOrder: DataTableSortOrder = '';\n  private baseSortOrder: DataTableSortOrder = '';\n\n  public actualWidth: number;\n\n  // Content Child Properties\n\n  @ContentChild('ngDataTableCell', { static: true })\n  public cellTemplate: TemplateRef<any>;\n\n  @ContentChild('ngDataTableHeader', { static: true })\n  public headerTemplate: TemplateRef<any>;\n\n  @ContentChild('ngDataTableFilter', { static: true })\n  public filterTemplate: TemplateRef<any>;\n\n  @ContentChild('ngFilterDropdownLoadingSpinner', { static: true })\n  public dropdownFilterLoadingSpinnerTemplate: TemplateRef<any>;\n\n  @ContentChild('ngFilterDropdownOption', { static: true })\n  public dropdownFilterOptionTemplate: TemplateRef<any>;\n\n  @ContentChild('ngFilterDropdownOptionGroupHeader', { static: true })\n  public dropdownFilterOptionGroupHeaderTemplate: TemplateRef<any>;\n\n  // Callback event handlers\n\n  /**\n   * Filter expression event handler callback. Used to apply custom data filter expression logic.\n   */\n  @Input()\n  public filterExpression: DataTableFilterExpressionCallback;\n\n  /**\n   * Custom filter field map event handler callback. Used to extract filter field when showDropdownFilter option is true.\n   */\n  @Input()\n  public filterFieldMapper: DataTableFilterFieldMapperCallback;\n\n  /**\n   * Cell color render event handler callback.\n   */\n  @Input()\n  public onCellColorRender: DataTableCellColorRenderCallback<any>;\n\n  // Inputs\n\n  /**\n   * Column display title.\n   */\n  @Input()\n  public title: string;\n\n  /**\n   * Columns sortable if true. Show sort indicator on column title.\n   */\n  @Input()\n  public sortable: boolean;\n\n  /**\n   * Multi column sort priority. Lowest number will get the height precedence. Usage of same precedence number in\n   * multiple columns may lead to unexpected behaviors. This priority number will be displayed in the column header\n   * when multi column sorting is enabled hence, consider indexing accordingly.\n   */\n  @Input()\n  public sortPriority: number;\n\n  /**\n   * Set initial column sort order.\n   */\n  @Input()\n  public set sortOrder(value: DataTableSortOrder) {\n    this.currentSortOrder = value;\n    this.baseSortOrder = value;\n  }\n\n  /**\n   * Get initial column sort order.\n   */\n  public get sortOrder(): DataTableSortOrder {\n    return this.currentSortOrder;\n  }\n\n  /**\n   * Column filterable if true. Show filter options on filter header row when enabled.\n   */\n  @Input()\n  public filterable: boolean;\n\n  /**\n   * Column resizeable if true. Show column resize indicator on column right corner.\n   */\n  @Input()\n  public resizable: boolean;\n\n  /**\n   * Data item mapping field name.\n   */\n  @Input()\n  public field: string;\n\n  /**\n   * Filter field identifier. Fallback to field if not provided.\n   */\n  @Input()\n  public filterField: string;\n\n  /**\n   * Sort field identifier. Fallback to field if not provided.\n   */\n  @Input()\n  public sortField: string;\n\n  /**\n   * Column title CSS class names. Use space delimiter to separate class names.\n   */\n  @Input()\n  public cssClass: string;\n\n  /**\n   * Static column width in pixels or percentage.\n   */\n  @Input()\n  public width: number | string;\n\n  /**\n   * Render column if true. Else include in column selector but not rendered.\n   */\n  @Input()\n  public visible: boolean;\n\n  /**\n   * Show filed in column selector popup if true.\n   */\n  @Input()\n  public showInColumnSelector = true; // TODO: move to base conf\n\n  /**\n   * Filter placeholder value. Placeholder text to show on filter text box. Applicable only for none dropdown filter mode.\n   */\n  @Input()\n  public filterPlaceholder: string;\n\n  /**\n   * Applied filter value on initialize.\n   */\n  @Input()\n  public filter: any;\n\n  /**\n   * Show filter clear button if true. Applicable only for none dropdown filter mode.\n   */\n  @Input()\n  public showFilterClearButton: any;\n\n  /**\n   * Resize minimum limit. Column cannot be resized to fit less than the number of pixels specified here.\n   */\n  @Input()\n  public resizeMinLimit: number;\n\n  // Dropdown filter properties\n\n  /**\n   * Show dropdown filter if true. Filter data using dropdown filter.\n   */\n  @Input()\n  public showDropdownFilter: boolean;\n\n  /**\n   * Dropdown filter menu position. Placement of filter popup menu.\n   */\n  @Input()\n  public dropdownFilterMenuPosition: ViewPosition;\n\n  /**\n   * Dropdown select mode. Filter option select mode.\n   */\n  @Input()\n  public dropdownFilterSelectMode: DropdownSelectMode;\n\n  /**\n   * Dropdown filter searchable if true. Display search box within filter option menu.\n   */\n  @Input()\n  public dropdownFilterSearchable: boolean;\n\n  /**\n   * Dropdown filter search debounce time in milliseconds. Applicable only when dropdownFilterSearchDebounce is true.\n   */\n  @Input()\n  public dropdownFilterSearchDebounceTime: number;\n\n  /**\n   * Enable dropdown filter data search debounce with provided dropdownFilterSearchDebounceTime if true.\n   */\n  @Input()\n  public dropdownFilterSearchDebounce: boolean;\n\n  /**\n   * Dropdown filter show option select checkbox.\n   */\n  @Input()\n  public dropDownFilterShowOptionSelectCheckbox: boolean;\n\n  /**\n   * Dropdown filter selected items display limit.\n   */\n  @Input()\n  public dropdownFilterWrapDisplaySelectLimit: number;\n\n  /**\n   * Dropdown filter group by field name in item schema.\n   */\n  @Input()\n  public dropdownFilterGroupByField: string;\n\n  /**\n   * Dropdown filter show selected option remove button if true.\n   */\n  @Input()\n  public dropdownFilterShowSelectedOptionRemoveButton: boolean;\n\n  /**\n   * Dropdown filter show all select options clear button if true.\n   */\n  @Input()\n  public dropdownFilterShowClearSelectionButton: boolean;\n\n  /**\n   * Dropdown filter menu width in pixels.\n   */\n  @Input()\n  public dropdownFilterMenuWidth: number;\n\n  /**\n   * Dropdown filter menu height in pixels.\n   */\n  @Input()\n  public dropdownFilterMenuHeight: number;\n\n  /**\n   * Dropdown filter multi select option max width.\n   */\n  @Input()\n  public dropdownFilterMultiSelectOptionMaxWidth: number;\n\n  /**\n   * Dropdown filter close menu on select if true.\n   */\n  @Input()\n  public dropdownFilterCloseMenuOnSelect: boolean;\n\n  /**\n   * Dynamically calculate Dropdown filter menu dimensions relative to column width; dropdownFilterMenuWidth and\n   * dropdownFilterMenuHeight configuration are ignored when true.\n   */\n  @Input()\n  public dropdownFilterDynamicDimensionCalculation: boolean;\n\n  /**\n   * Dynamic dropdown view width ratio. Used for dynamic dimension calculation.\n   */\n  @Input()\n  public dropdownFilterDynamicWidthRatio: number;\n\n  /**\n   * Dynamic dropdown view height ratio. Used for dynamic dimension calculation.\n   */\n  @Input()\n  public dropdownFilterDynamicHeightRatio: number;\n\n  constructor(\n    private dataTableConfigService: DataTableConfigService,\n    private eventStateService: DataTableEventStateService,\n    private dataStateService: DataTableDataStateService) {\n    // Table column config\n    this.sortable = dataTableConfigService.sortable;\n    this.currentSortOrder = dataTableConfigService.sortOrder;\n    this.filterable = dataTableConfigService.filterable;\n    this.filterPlaceholder = dataTableConfigService.filterPlaceholder;\n    this.resizable = dataTableConfigService.columnResizable;\n    this.visible = dataTableConfigService.columnVisible;\n    this.showDropdownFilter = dataTableConfigService.showDropdownFilter;\n    this.showFilterClearButton = dataTableConfigService.showFilterClearButton;\n\n    // Dropdown filter config\n    this.dropdownFilterMenuPosition = dataTableConfigService.dropdownFilterMenuPosition;\n    this.dropdownFilterSelectMode = dataTableConfigService.dropdownFilterSelectMode;\n    this.dropdownFilterSearchable = dataTableConfigService.dropdownFilterSearchable;\n    this.dropdownFilterSearchDebounceTime = dataTableConfigService.dropdownFilterSearchDebounceTime;\n    this.dropdownFilterSearchDebounce = dataTableConfigService.dropdownFilterSearchDebounce;\n    this.dropdownFilterWrapDisplaySelectLimit = dataTableConfigService.dropdownFilterWrapDisplaySelectLimit;\n    this.dropdownFilterGroupByField = dataTableConfigService.dropdownFilterGroupByField;\n    this.dropdownFilterShowSelectedOptionRemoveButton = dataTableConfigService.dropdownFilterShowSelectedOptionRemoveButton;\n    this.dropdownFilterShowClearSelectionButton = dataTableConfigService.dropdownFilterShowClearSelectionButton;\n    this.dropdownFilterMenuWidth = dataTableConfigService.dropdownFilterMenuWidth;\n    this.dropdownFilterMenuHeight = dataTableConfigService.dropdownFilterMenuHeight;\n    this.dropdownFilterMultiSelectOptionMaxWidth = dataTableConfigService.dropdownFilterMultiSelectOptionMaxWidth;\n    this.dropdownFilterCloseMenuOnSelect = dataTableConfigService.dropdownFilterCloseMenuOnSelect;\n    this.dropdownFilterDynamicDimensionCalculation = dataTableConfigService.dropdownFilterDynamicDimensionCalculation;\n    this.dropdownFilterDynamicWidthRatio = dataTableConfigService.dropdownFilterDynamicWidthRatio;\n    this.dropdownFilterDynamicHeightRatio = dataTableConfigService.dropdownFilterDynamicHeightRatio;\n  }\n\n  /**\n   * Reset data sort order.\n   */\n  public resetSortOrder(): void {\n    this.currentSortOrder = this.baseSortOrder;\n  }\n\n  /**\n   * Get dynamic cell color.\n   * @param row Data row object.\n   * @return Cell color string.\n   */\n  public getCellColor(row: DataTableRow<any>) {\n    if (this.onCellColorRender !== undefined) {\n      return this.onCellColorRender(row, this);\n    }\n  }\n\n  /**\n   * Get new sort order upon sort click.\n   * @return New sort order enum value.\n   */\n  public getNewSortOrder(): DataTableSortOrder {\n    let newSortOrder: DataTableSortOrder;\n    switch (this.sortOrder) {\n      case 'asc':\n        newSortOrder = 'desc';\n        break;\n      case 'desc':\n        newSortOrder = '';\n        break;\n      case '':\n        newSortOrder = 'asc';\n        break;\n    }\n\n    return newSortOrder;\n  }\n\n  /**\n   * Get current sort state icon css class enabled state.\n   * @return Sort order icon css class collection object.\n   */\n  public getSortIconClass(): any {\n    return {\n      'sort-asc': this.sortOrder === 'asc',\n      'sort-dsc': this.sortOrder === 'desc',\n      'sort-reset': !this.sortOrder\n    };\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.filterValueExtractorSubscription) {\n      this.filterValueExtractorSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Component initialize lifecycle event handler.\n   */\n  public ngOnInit(): void {\n    if (!this.cssClass && this.field) {\n      if (/^[a-zA-Z0-9_]+$/.test(this.field)) {\n        this.cssClass = 'column-' + this.field;\n      } else {\n        this.cssClass = 'column-' + this.field.replace(/[^a-zA-Z0-9_]/g, '');\n      }\n    }\n\n    this.eventStateService.columnBind.emit(this);\n\n    if (this.dataTableConfigService.multiColumnSortable && this.sortable) {\n      if (this.sortOrder === '') {\n        if (this.sortPriority !== undefined) {\n          throw Error('[sortPriority] should be ignored when multi column sorting is enabled with natural sort order.');\n        }\n      } else {\n        if (this.sortPriority === undefined) {\n          throw Error('[sortPriority] is required when multi column sorting is enabled with an explicit sort order.');\n        }\n      }\n\n      if (this.sortPriority < 1) {\n        throw Error('[sortPriority] must be greater than 1.');\n      }\n\n      if (this.dataStateService.currentSortPriority < this.sortPriority) {\n        this.dataStateService.currentSortPriority = this.sortPriority;\n      }\n    }\n  }\n}\n","/**\n * Data table export mode model.\n */\nexport enum DataFetchMode {\n  /**\n   * Re-fetch data from source and load data after resetting table state.\n   */\n  HARD_RELOAD,\n\n  /**\n   * Re-fetch data from source and load data without resetting table state.\n   */\n  SOFT_RELOAD,\n\n  /**\n   * Load data without changing table state state.\n   */\n  SOFT_LOAD\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DataTableFilterEventArgs } from '../../models/data-table-filter-event-args.model';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\n\n/**\n * Data table column filter header component. Apply columns associated data filtering.\n */\n@Component({\n  exportAs: 'ngDataTableColumnFilterHeader',\n  // tslint:disable-next-line\n  selector: '[ngDataTableColumnFilterHeader]',\n  templateUrl: './data-table-column-filter-header.component.html'\n})\nexport class DataTableColumnFilterHeaderComponent implements OnInit, OnDestroy {\n  private columnFilterStream = new Subject();\n\n  private customFilterSubscription: Subscription;\n  private columnFilterSubscription: Subscription;\n\n  public customFilterStream = new EventEmitter<DataTableFilterEventArgs>();\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  constructor(public config: DataTableConfigService, private eventStateService: DataTableEventStateService) {}\n\n  /**\n   * Component initialize lifecycle event handler.\n   */\n  public ngOnInit(): void {\n    this.initCustomFilterEvent();\n    this.initDebounceDefaultFilterEvent();\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.customFilterSubscription) {\n      this.customFilterSubscription.unsubscribe();\n    }\n\n    if (this.columnFilterSubscription) {\n      this.columnFilterSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Initialize custom filter event.\n   */\n  private initCustomFilterEvent(): void {\n    this.customFilterSubscription = this.customFilterStream.subscribe((filterEventArgs: DataTableFilterEventArgs) => {\n      filterEventArgs.column.filter = filterEventArgs.filter;\n      this.onFilter();\n    });\n  }\n\n  /**\n   * Initialize debounce default filtering logic.\n   */\n  private initDebounceDefaultFilterEvent(): void {\n    this.columnFilterSubscription = this.columnFilterStream.pipe(debounceTime(this.config.filterDebounceTime)).subscribe(() => {\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    });\n  }\n\n  /**\n   * Filter event handler.\n   */\n  public onFilter(): void {\n    if (this.config.filterDebounce) {\n      this.columnFilterStream.next();\n    } else {\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { DataTableScrollPoint } from '../models/data-table-scroll-point.model';\n\n/**\n * Scroll position stream service; Manage common scroll position observable.\n */\n@Injectable()\nexport class DataTableScrollPositionService {\n  public scrollPositionStream = new Subject<DataTableScrollPoint>();\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { DataTableFilterEventArgs } from '../../models/data-table-filter-event-args.model';\nimport { DataTableFilterOption } from '../../models/data-table-filter-option.model';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\nimport { DropdownComponent } from '../../../dropdown/components/dropdown/dropdown.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableScrollPositionService } from '../../services/data-table-scroll-position.service';\nimport { DataTableScrollPoint } from '../../../data-table/models/data-table-scroll-point.model';\n\n/**\n * Column filter template component. Render column filter template via this component.\n */\n@Component({\n  selector: 'ng-data-table-column-filter-template',\n  templateUrl: './data-table-column-filter-template.component.html'\n})\nexport class DataTableColumnFilterTemplateComponent implements OnInit, OnDestroy {\n  @Input()\n  public column: DataTableColumnComponent;\n\n  @Input()\n  public customFilterStream: Observable<DataTableFilterEventArgs>;\n\n  @Input()\n  public index: number;\n\n  @Output()\n  public filter = new EventEmitter();\n\n  public filterDataStream = new Subject<DataTableFilterOption[]>();\n\n  private fetchFilterOptionsStreamSubscription: Subscription;\n  private scrollPositionStreamSubscription: Subscription;\n\n  private filterDropdown: DropdownComponent;\n\n  constructor(\n    public config: DataTableConfigService,\n    public dataStateService: DataTableDataStateService,\n    private eventStateService: DataTableEventStateService,\n    private scrollPositionService: DataTableScrollPositionService\n  ) {}\n\n  /**\n   * Component initialize lifecycle event.\n   */\n  public ngOnInit(): void {\n    if (this.column.showDropdownFilter) {\n      this.scrollPositionStreamSubscription = this.scrollPositionService.scrollPositionStream\n        .subscribe((pos: DataTableScrollPoint) => {\n          if (pos.isHorizontal) {\n            this.filterDropdown.close();\n          }\n        });\n\n      if (this.dataStateService.onFilterValueExtract) {\n        this.fetchFilterOptionsStreamSubscription = this.eventStateService.fetchFilterOptionsStream\n          .pipe(\n            switchMap(() => {\n              return this.dataStateService.onFilterValueExtract(this.column);\n            })\n          )\n          .subscribe((options: DataTableFilterOption[]) => {\n            setTimeout(() => this.filterDataStream.next(options), 0); // TODO: remove the timeout\n          });\n      }\n    }\n  }\n\n  /**\n   * Component destroy lifecycle event.\n   */\n  public ngOnDestroy(): void {\n    if (this.fetchFilterOptionsStreamSubscription) {\n      this.fetchFilterOptionsStreamSubscription.unsubscribe();\n    }\n\n    if (this.scrollPositionStreamSubscription) {\n      this.scrollPositionStreamSubscription.unsubscribe();\n    }\n\n    this.filterDataStream.complete();\n  }\n\n  public onFilterDropdownInit(filterDropdown: DropdownComponent): void {\n    this.filterDropdown = filterDropdown;\n  }\n\n  /**\n   * Clear current column filter value.\n   */\n  public clearFilter(): void {\n    this.column.filter = '';\n    this.filter.emit();\n  }\n}\n","const splitPathExpression = /[,[\\].]+?/;\n\nexport function get(obj: any, path: string): any {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n\n  return String.prototype.split.call(path, splitPathExpression)\n    .filter(Boolean)\n    .reduce((res, key) => {\n      if (res !== null && typeof res === 'object') {\n        return res[key];\n      }\n\n      return undefined;\n    }, obj);\n}\n\nexport function orderBy(collection: any[], fields: string[], orders: Array<'asc'|'desc'>): any {\n  console.log(fields);\n  return collection.concat().sort((a: any, b: any) => {\n    for (let i = 0; i < fields.length; i++) {\n      const field = fields[i];\n      const order = orders[i];\n      if (a[field] > b[field]) {\n        return order === 'asc' ? 1 : -1;\n      }\n\n      if (a[field] < b[field]) {\n        return order === 'asc' ? -1 : 1;\n      }\n    }\n\n    return 0;\n  });\n}\n","import { Directive, EventEmitter, OnInit, Output } from '@angular/core';\n\n/**\n * Element initialize directive; Notify on target element initialize.\n */\n@Directive({\n  selector: '[ngInit]'\n})\nexport class InitDirective implements OnInit {\n  @Output()\n  public ngInit = new EventEmitter();\n\n  /**\n   * On directive initialize.\n   */\n  public ngOnInit(): void {\n    this.ngInit.emit();\n  }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n/**\n * Element focus directive; Set focus to target element on initialize.\n */\n@Directive({\n  selector: '[ngFocus]'\n})\nexport class FocusDirective implements OnInit {\n  constructor(private el: ElementRef) {}\n\n  /**\n   * On directive initialize.\n   */\n  public ngOnInit(): void {\n    this.el.nativeElement.focus();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pixel converter pipe.\n * Append 'px' if value is number type, else return the same.\n */\n@Pipe({\n  name: 'ngPx'\n})\nexport class PixelConverterPipe implements PipeTransform {\n  /**\n   * Pipe transform implementation.\n   * @param value Source value.\n   * @returns Converted pixel value.\n   */\n  public transform(value: string | number): string {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (typeof value === 'number') {\n      return `${value}px`;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Utility config service holds all the global configurations of utility which can be overridden while\n * importing the module.\n */\n@Injectable()\nexport class UtilityConfigService {}\n","import { Injectable } from '@angular/core';\n\nexport type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\n\n/**\n * Element drag and drop service.\n */\n@Injectable()\nexport class DragAndDropService {\n  /**\n   * Register drag and drop event.\n   * @param event Mouse event reference.\n   * @param move Mouse move event handler.\n   * @param up Mouse up Event handler.\n   */\n  public drag(event: MouseEvent, { move, up }: { move: MoveHandler; up?: UpHandler }): void {\n    const startX = event.pageX;\n    const startY = event.pageY;\n    let x = startX;\n    let y = startY;\n    let moved = false;\n\n    const mouseMoveHandler = (mouseMoveEvent: MouseEvent): void => {\n      const dx = mouseMoveEvent.pageX - x;\n      const dy = mouseMoveEvent.pageY - y;\n      x = mouseMoveEvent.pageX;\n      y = mouseMoveEvent.pageY;\n      if (dx || dy) {\n        moved = true;\n      }\n\n      move(mouseMoveEvent, dx, dy, x, y);\n\n      mouseMoveEvent.preventDefault(); // to avoid text selection\n    };\n\n    const mouseUpHandler = (mouseUpEvent: MouseEvent): void => {\n      x = mouseUpEvent.pageX;\n      y = mouseUpEvent.pageY;\n\n      document.removeEventListener('mousemove', mouseMoveHandler);\n      document.removeEventListener('mouseup', mouseUpHandler);\n\n      if (up) {\n        up(mouseUpEvent, x, y, moved);\n      }\n    };\n\n    document.addEventListener('mousemove', mouseMoveHandler);\n    document.addEventListener('mouseup', mouseUpHandler);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Global reference service; List all global javascript references here.\n */\n@Injectable()\nexport class GlobalRefService {\n  private scrollbarWidthValue: number;\n\n  constructor() {\n    this.setScrollbarWidth();\n  }\n\n  /**\n   * Set scrollbar width of current browser environment; Ony set on browser environment to support SSR.\n   */\n  public setScrollbarWidth(): void {\n    if (this.scrollbarWidthValue !== undefined) {\n      return;\n    }\n\n    if (this.isBrowser) {\n      const outer = document.createElement('div');\n      outer.style.visibility = 'hidden';\n      outer.style.width = '100px';\n      outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n\n      document.body.appendChild(outer);\n\n      const widthNoScroll = outer.offsetWidth;\n      // force scrollbars\n      outer.style.overflow = 'scroll';\n\n      // add inner div\n      const inner = document.createElement('div');\n      inner.style.width = '100%';\n      outer.appendChild(inner);\n\n      const widthWithScroll = inner.offsetWidth;\n\n      // remove divs\n      outer.parentNode.removeChild(outer);\n\n      this.scrollbarWidthValue = widthNoScroll - widthWithScroll;\n    }\n  }\n\n  /**\n   * Get scrollbar width.\n   * @returns Scroll bar width.\n   */\n  public get scrollbarWidth(): number {\n    return this.scrollbarWidthValue;\n  }\n  /**\n   * Get window reference.\n   * @return Window reference.\n   */\n  public get window(): Window {\n    return window;\n  }\n\n  /**\n   * Is browser environment.\n   * @return True if current environment is browser.\n   */\n  public get isBrowser(): boolean {\n    return typeof window !== 'undefined';\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { fromEvent, Subject, Observable } from 'rxjs';\n\nimport { GlobalRefService } from './global-ref.service';\n\n/**\n * Resize handler service; Window resize global event handler.\n */\n@Injectable()\nexport class ResizeService {\n  public resize: Observable<Event>;\n\n  constructor(private globalRefService: GlobalRefService) {\n    if (this.globalRefService.isBrowser) {\n      this.resize = fromEvent(this.globalRefService.window, 'resize');\n    } else {\n      this.resize = new Subject();\n    }\n  }\n}\n","import { Injector, ComponentFactoryResolver, EmbeddedViewRef, ApplicationRef, ComponentRef, Type, Renderer2 } from '@angular/core';\n\nimport { take } from 'rxjs/operators';\n\nimport { Subscription } from 'rxjs';\n\nimport { ComponentLoader } from './component-loader.interface';\n\nimport { GlobalRefService } from './global-ref.service';\nimport { ResizeService } from './resize.service';\n\nimport { ComponentLoaderOptions } from '../models/component-loader-options.model';\n\n/**\n * Popover dynamic component loader; Responsible of dynamically rendering angular components to show popover layout.\n */\nexport class PopoverComponentLoader<T> implements ComponentLoader<T> {\n  private componentReference: ComponentRef<T>;\n  private isVisible: boolean;\n  private clickListener: () => void;\n  private touchStartListener: () => void;\n  private resizeEventSubscription: Subscription;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private globalRefService: GlobalRefService,\n    private renderer: Renderer2,\n    private resizeService: ResizeService\n  ) {\n    this.isVisible = false;\n  }\n\n  /**\n   * Register close on click outside event; Hide event is triggered only if click target is not included in\n   * exclusion elements collection.\n   * @param exclude - Exclude DOM element reference collection.\n   */\n  private registerClickOutside(...exclude: HTMLElement[]): void {\n    const trackOutsideClick = (event: Event) => {\n      if (!exclude.some(el => {\n        return el.contains(event.target as HTMLElement);\n      })) {\n        this.hide();\n      }\n    };\n\n    this.clickListener = this.renderer.listen('document', 'click', trackOutsideClick);\n    this.touchStartListener = this.renderer.listen('document', 'touchstart', trackOutsideClick);\n  }\n\n  /**\n   * Set dynamic popover position relative to parent.\n   * @param parentElement Parent element reference.\n   * @param options Component loader options.\n   */\n  private setPosition(parentElement: HTMLElement, options: ComponentLoaderOptions): void {\n    const holderElement =  options.relativeParentElement || parentElement;\n    const bodyClientRect = holderElement.getBoundingClientRect();\n    const elementClientRect = parentElement.getBoundingClientRect();\n\n    let left = 0;\n    let top = 0;\n\n    if (options.position.includes('right')) {\n      left = parentElement.offsetWidth;\n    }\n\n    if (options.position.includes('bottom')) {\n      top = parentElement.offsetHeight;\n    }\n\n    const componentElement = this.componentReference.location.nativeElement as HTMLElement;\n    componentElement.style.top = `${elementClientRect.top - bodyClientRect.top + top + options.floatTop}px`;\n    componentElement.style.left = `${elementClientRect.left - bodyClientRect.left + left + options.floatLeft}px`;\n    componentElement.style.position = 'absolute';\n    componentElement.style.display = 'block';\n\n    const childElement = componentElement.firstElementChild as HTMLElement;\n    if (childElement) {\n      if (options.position.includes('right')) {\n        childElement.style.right = '0px';\n      }\n\n      if (options.position.includes('top')) {\n        childElement.style.bottom = '0px';\n      }\n\n      childElement.style.position = 'absolute';\n    }\n\n    this.resizeEventSubscription = this.resizeService.resize.pipe(take(1)).subscribe(() => {\n      this.hide();\n    });\n  }\n\n  /**\n   * Render component if not available, else display hidden component.\n   * @param component Component class type.\n   * @param parentElement Parent element to append the target component.\n   * @param injector Component injector reference.\n   * @param options Component loader options object.\n   * @return Rendered component reference.\n   */\n  public show(component: Type<T>, parentElement: HTMLElement, injector: Injector, options: ComponentLoaderOptions): T {\n    options = Object.assign(\n      {\n        closeOnOutsideClick: true,\n        floatLeft: 0,\n        floatTop: 0,\n        position: 'bottom-left'\n      },\n      options\n    );\n\n    if (this.componentReference) {\n      this.setPosition(parentElement, options);\n      this.isVisible = true;\n      return;\n    }\n\n    // 1. Create a component reference from the component\n    this.componentReference = this.componentFactoryResolver.resolveComponentFactory(component).create(injector);\n\n    if (options.context) {\n      Object.assign(this.componentReference.instance, options.context);\n    }\n\n    // 2. Attach component to the appRef so that it's inside the ng component tree\n    this.appRef.attachView(this.componentReference.hostView);\n\n    // 3. Get DOM element from component\n    const domElem = (this.componentReference.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\n    this.setPosition(parentElement, options);\n\n    // 4. Append DOM element to the body\n    (options.relativeParentElement || parentElement).appendChild(domElem);\n\n    // Trigger change detection\n    this.componentReference.changeDetectorRef.markForCheck();\n    this.componentReference.changeDetectorRef.detectChanges();\n\n    this.isVisible = true;\n\n    if (options.closeOnOutsideClick) {\n      this.registerClickOutside(parentElement, this.componentReference.location.nativeElement);\n    }\n\n    return this.componentReference.instance;\n  }\n\n  /**\n   * Hide component if visible.\n   * @return Rendered component reference.\n   */\n  public hide(): T {\n    if (this.componentReference) {\n      this.componentReference.location.nativeElement.style.display = 'none';\n      this.isVisible = false;\n      return this.componentReference.instance;\n    }\n  }\n\n  /**\n   * Toggle component display state or render if not available.\n   * @param component Component class type.\n   * @param parentElement Parent element to append the target component.\n   * @param injector Component injector reference.\n   * @param options Component loader options object.\n   * @return Rendered component reference.\n   */\n  public toggle(component: Type<T>, parentElement: HTMLElement, injector: Injector, options?: ComponentLoaderOptions): T {\n    return this.isVisible ? this.hide() : this.show(component, parentElement, injector, options);\n  }\n\n  /**\n   * Dispose rendered component reference and bindings.\n   */\n  public dispose(): void {\n    if (this.resizeEventSubscription) {\n      this.resizeEventSubscription.unsubscribe();\n    }\n\n    if (this.componentReference) {\n      this.appRef.detachView(this.componentReference.hostView);\n      this.componentReference.destroy();\n    }\n\n    if (this.clickListener) {\n      this.clickListener();\n      this.clickListener = null;\n    }\n\n    if (this.touchStartListener) {\n      this.touchStartListener();\n      this.touchStartListener = null;\n    }\n\n    this.componentReference = null;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Renderer2 } from '@angular/core';\n\nimport { ComponentLoader } from './component-loader.interface';\n\nimport { GlobalRefService } from './global-ref.service';\nimport { ResizeService } from './resize.service';\n\nimport { PopoverComponentLoader } from './popover-component-loader.class';\n\n/**\n * Popover component loader factory service.\n */\n@Injectable()\nexport class PopoverComponentLoaderFactoryService {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private globalRefService: GlobalRefService,\n    private resizeService: ResizeService\n  ) {}\n\n  /**\n   * Create new component loader.\n   * @param renderer Angular renderer reference.\n   * @return Popover component loader reference.\n   */\n  public createLoader<T>(renderer: Renderer2): ComponentLoader<T> {\n    return new PopoverComponentLoader<T>(this.componentFactoryResolver, this.appRef, this.globalRefService, renderer, this.resizeService);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Common validation regular expressions.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorService {\n\n  /**\n   * Unique id value validation patten expression.\n   */\n  public static readonly idPatternValidatorExpression = new RegExp('^[A-Za-z]+[\\\\w\\\\-]*$');\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InitDirective } from './directives/init.directive';\nimport { FocusDirective } from './directives/focus.directive';\n\nimport { PixelConverterPipe } from './pipes/pixel-converter.pipe';\n\nimport { UtilityConfigService } from './services/utility-config.service';\nimport { DragAndDropService } from './services/drag-and-drop.service';\nimport { GlobalRefService } from './services/global-ref.service';\nimport { PopoverComponentLoaderFactoryService } from './services/popover-component-loader-factory.service';\nimport { ResizeService } from './services/resize.service';\nimport { ValidatorService } from './services/validator.service';\n\nconst DIRECTIVES = [InitDirective, FocusDirective];\n\nconst PIPES = [PixelConverterPipe];\n\nconst PROVIDERS = [DragAndDropService, GlobalRefService, PopoverComponentLoaderFactoryService, ResizeService, ValidatorService];\n\n/**\n * Module representing utility providers, directives and pipes.\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...DIRECTIVES, ...PIPES],\n  providers: [...PROVIDERS],\n  exports: [...DIRECTIVES, ...PIPES]\n})\nexport class UtilityModule {\n  /**\n   * Set module root configuration overrides.\n   * @return Module with custom providers.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: UtilityModule,\n      providers: [UtilityConfigService]\n    };\n  }\n}\n\nexport { ComponentLoader } from './services/component-loader.interface';\n\nexport { DragAndDropService } from './services/drag-and-drop.service';\nexport { GlobalRefService } from './services/global-ref.service';\nexport { UtilityConfigService } from './services/utility-config.service';\nexport { PopoverComponentLoaderFactoryService } from './services/popover-component-loader-factory.service';\n\nexport { PopoverComponentLoader } from './services/popover-component-loader.class';\n","import { Component, Input } from '@angular/core';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DragAndDropService } from '../../../utility/utility.module';\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Column title header component. Render data table column headers.\n */\n@Component({\n  exportAs: 'ngDataTableColumnTitleHeader',\n  // tslint:disable-next-line\n  selector: '[ngDataTableColumnTitleHeader]',\n  templateUrl: './data-table-column-title-header.component.html'\n})\nexport class DataTableColumnTitleHeaderComponent {\n  private resizeInProgress = false;\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  constructor(\n    private dragAndDropService: DragAndDropService,\n    private eventStateService: DataTableEventStateService,\n    public dataStateService: DataTableDataStateService,\n    public config: DataTableConfigService\n  ) {}\n\n  /**\n   * Header click event handler.\n   * @param column Data table column component reference.\n   * @param event Mouse event arguments object.\n   */\n  public onHeaderClick(column: DataTableColumnComponent, event: MouseEvent): void {\n    if (!this.resizeInProgress) {\n      this.sortData(column);\n      this.eventStateService.headerClickStream.emit({ column, event });\n    } else {\n      this.resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n    }\n  }\n\n  /**\n   * Sort data event handler.\n   * @param column Data table column component reference.\n   */\n  private sortData(column: DataTableColumnComponent): void {\n    if (column.sortable) {\n      const prevSortOrder = column.sortOrder;\n      if (column.sortOrder) {\n        column.sortOrder = column.getNewSortOrder();\n      } else {\n        if (!this.config.multiColumnSortable) {\n          const sortColumns = this.columns.filter(item => item.sortable);\n          sortColumns.forEach((sortColumn: DataTableColumnComponent) => {\n            if (sortColumn !== column) {\n              sortColumn.sortOrder = '';\n            }\n          });\n        }\n\n        column.sortOrder = 'asc';\n      }\n\n      if (this.config.multiColumnSortable) {\n        if (column.sortOrder === '') {\n          const sortColumns = this.columns.filter(item => item.sortable);\n          sortColumns.forEach((sortColumn: DataTableColumnComponent) => {\n            if (sortColumn !== column && sortColumn.sortPriority > column.sortPriority) {\n              --sortColumn.sortPriority;\n            }\n          });\n\n          column.sortPriority = undefined;\n          --this.dataStateService.currentSortPriority;\n        } else {\n          if (!prevSortOrder) {\n            column.sortPriority = ++this.dataStateService.currentSortPriority;\n          }\n        }\n      }\n\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    }\n  }\n\n  /**\n   * Set column width.\n   * @param width Width value in pixels.\n   * @param column Data table column component reference.\n   */\n  public setColumnWidth(width: number, column: DataTableColumnComponent): void {\n    column.actualWidth = width;\n  }\n\n  /**\n   * Column resize event handler.\n   * @param event Resize mouse event.\n   * @param column Data table column component.\n   * @param columnElement Table header cell element DOM reference.\n   */\n  public onColumnResize(event: MouseEvent, column: DataTableColumnComponent, columnElement: HTMLTableHeaderCellElement): void {\n    this.resizeInProgress = true;\n\n    this.dragAndDropService.drag(event, {\n      move: (moveEvent: MouseEvent, dx: number) => {\n        const newWidth = columnElement.offsetWidth + dx;\n        if (column.resizeMinLimit !== undefined && newWidth < column.resizeMinLimit) {\n          return;\n        }\n\n        column.actualWidth = newWidth;\n        let totalWidth = 0;\n\n        this.columns.forEach(col => {\n          col.width = col.actualWidth;\n          totalWidth += col.width;\n        });\n\n        this.dataStateService.tableWidth = totalWidth;\n      }\n    });\n  }\n\n  /**\n   * Set all row selected state.\n   * @param value All row selected status.\n   */\n  public set allRowSelected(value: boolean) {\n    this.dataStateService.allRowSelected = value;\n    this.allRowSelectedChanged(this.dataStateService.allRowSelected);\n    this.eventStateService.allRowSelectChangeStream.emit(this.dataStateService.allRowSelected);\n  }\n\n  /**\n   * Get all row selected state.\n   */\n  public get allRowSelected(): boolean {\n    return this.dataStateService.allRowSelected;\n  }\n\n  /**\n   * All row select change event handler.\n   * @param selectedState Row selected status.\n   */\n  private allRowSelectedChanged(selectedState: boolean): void {\n    this.dataStateService.dataRows.forEach(row => {\n      const id = get(row.item, this.config.selectTrackBy);\n      const index = this.dataStateService.selectedRows.indexOf(id);\n      if (selectedState && index < 0) {\n        this.dataStateService.selectedRows.push(id);\n      } else if (!selectedState && index > -1) {\n        this.dataStateService.selectedRows.splice(index, 1);\n      }\n\n      row.selected = selectedState;\n    });\n\n    this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRows);\n  }\n\n  /**\n   * Get all row select checkbox display status.\n   * @return True if all row select checkbox should be displayed.\n   */\n  public get showAllRowSelectCheckbox(): boolean {\n    return this.config.selectMode === 'multi' && this.config.showRowSelectAllCheckbox;\n  }\n\n  public showSortPriorityLabel(column: DataTableColumnComponent): boolean {\n    return !!(this.config.multiColumnSortable && this.dataStateService.currentSortPriority > 1 && column.sortPriority);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableConfigService } from '../../services/data-table-config.service';\n\n/**\n * Data table column selector component. Toggle display state of columns via this popup component.\n */\n@Component({\n  selector: 'ng-data-table-column-selector',\n  templateUrl: './data-table-column-selector.component.html'\n})\nexport class DataTableColumnSelectorComponent {\n  constructor(public dataStateService: DataTableDataStateService, public config: DataTableConfigService) {}\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  @Input()\n  public width: number|string;\n}\n","import { Component, Injector, Input, OnDestroy, Renderer2 } from '@angular/core';\n\nimport { ComponentLoader, PopoverComponentLoaderFactoryService } from '../../../utility/utility.module';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnSelectorComponent } from '../data-table-column-selector/data-table-column-selector.component';\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Data table header component. Render table title header with column selector widget.\n */\n@Component({\n  selector: 'ng-data-table-header',\n  templateUrl: './data-table-header.component.html'\n})\nexport class DataTableHeaderComponent implements OnDestroy {\n  private componentLoader: ComponentLoader<DataTableColumnSelectorComponent>;\n\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  constructor(\n    private componentLoaderFactory: PopoverComponentLoaderFactoryService,\n    private injector: Injector,\n    private eventStateService: DataTableEventStateService,\n    private renderer: Renderer2,\n    public dataStateService: DataTableDataStateService,\n    public config: DataTableConfigService\n  ) {\n    this.componentLoader = this.componentLoaderFactory.createLoader<DataTableColumnSelectorComponent>(this.renderer);\n  }\n\n  /**\n   * Toggle column selector.\n   * @param element DOM element reference.\n   */\n  public toggleColumnSelector(element: HTMLElement): void {\n    this.componentLoader.toggle(DataTableColumnSelectorComponent, element, this.injector, {\n      // relativeParent: element, // this.dataStateService.relativeParentElement,\n      context: {\n        columns: this.columns,\n        width: this.config.columnSelectorWidth,\n      },\n      position: 'bottom-right'\n    });\n  }\n\n  /**\n   * On data reload click event handler.\n   */\n  public onReload(): void {\n    this.eventStateService.dataFetchStream.next(DataFetchMode.HARD_RELOAD);\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    this.componentLoader.dispose();\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\n\n/**\n * Data table column group component. This component wraps data table column groups.\n */\n@Component({\n  exportAs: 'ngDataTableColGroup',\n  // tslint:disable-next-line\n  selector: '[ngDataTableColGroup]',\n  templateUrl: './data-table-col-group.component.html'\n})\nexport class DataTableColGroupComponent {\n  @Input()\n  public columns: DataTableColumnComponent;\n\n  constructor(public config: DataTableConfigService) {}\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { ResizeService } from '../../../utility/services/resize.service';\n\n/**\n * Data table pagination component. Render data table paginator widget.\n */\n@Component({\n  selector: 'ng-data-table-pagination',\n  templateUrl: './data-table-pagination.component.html'\n})\nexport class DataTablePaginationComponent implements OnInit {\n  @ViewChild('paginationContainer', { static: true })\n  private paginationContainer: ElementRef<HTMLElement>;\n\n  public isMobile = false;\n\n  constructor(\n    public config: DataTableConfigService,\n    public dataStateService: DataTableDataStateService,\n    private eventStateService: DataTableEventStateService,\n    private resizeService: ResizeService\n  ) {}\n\n  /**\n   * Set mobile mode state.\n   */\n  private setMobileModeState(): void {\n    this.isMobile = this.paginationContainer.nativeElement.clientWidth < 767;\n  }\n\n  /**\n   * First page click event handler.\n   */\n  public firstPageClick(): void {\n    this.config.offset = 0;\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Previous page click event handler.\n   */\n  public previousPageClick(): void {\n    this.config.offset = this.config.offset - Math.min(this.config.limit, this.config.offset);\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Next page click event handler.\n   */\n  public nextPageClick(): void {\n    this.config.offset = this.config.offset + this.config.limit;\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Last page click event handler.\n   */\n  public lastPageClick(): void {\n    this.config.offset = (this.maxPage - 1) * this.config.limit;\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Get maximum page count.\n   */\n  public get maxPage(): number {\n    return Math.ceil(this.dataStateService.itemCount / this.config.limit);\n  }\n\n  /**\n   * Get page number.\n   */\n  public get page(): number {\n    return Math.floor(this.config.offset / this.config.limit) + 1;\n  }\n\n  /**\n   * Check limit invalid status. True if limit is invalid.\n   * @param element Limit input DOM element.\n   * @return Invalid status.\n   */\n  public isInvalidLimit(element: HTMLInputElement): boolean {\n    const limit = Number(element.value);\n    return element.value === '' || limit > this.config.maxLimit || limit < 1;\n  }\n\n  /**\n   * On page size change event handler.\n   * @param element HTML input element.\n   */\n  public onPageSizeChange(element: HTMLInputElement): void {\n    if (this.isInvalidLimit(element)) {\n      element.value = String(this.config.limit);\n      return;\n    }\n\n    const limit = Number(element.value);\n    if (this.config.limit !== limit) {\n      this.config.offset = 0;\n      this.config.limit = limit;\n      this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n    }\n  }\n\n  /**\n   * On page size revert event handler.\n   * @param element HTML input element.\n   */\n  public onPageSizeRevert(element: HTMLInputElement): void {\n    element.value = String(this.config.limit);\n  }\n\n  /**\n   * Is invalid page index; True if page index is invalid.\n   * @param element Page index DOM element.\n   * @return Invalid status.\n   */\n  public isInvalidPageIndex(element: HTMLInputElement): boolean {\n    const page = Number(element.value);\n    return element.value === '' || page > this.maxPage || page < 1;\n  }\n\n  /**\n   * On page size change event handler.\n   * @param element HTML input element.\n   */\n  public onPageIndexChange(element: HTMLInputElement): void {\n    if (this.isInvalidPageIndex(element)) {\n      element.value = String(this.page);\n      return;\n    }\n\n    const page = Number(element.value);\n    if (this.page !== page) {\n      this.config.offset = (page - 1) * this.config.limit;\n      this.eventStateService.dataFetchStream.emit(DataFetchMode.SOFT_LOAD);\n    }\n  }\n\n  /**\n   * On page size revert event handler.\n   * @param element HTML input element.\n   */\n  public onPageIndexRevert(element: HTMLInputElement): void {\n    element.value = String(this.page);\n  }\n\n  /**\n   * Get previous page availability status.\n   */\n  public get hasPrevious(): boolean {\n    return this.config.offset <= 0;\n  }\n\n  /**\n   * Get next page availability status.\n   */\n  public get hasNext(): boolean {\n    return this.config.offset + this.config.limit >= this.dataStateService.itemCount;\n  }\n\n  /**\n   * Get start row index.\n   */\n  public get startRowIndex(): number {\n    return this.config.offset + 1;\n  }\n\n  /**\n   * Get end row index.\n   */\n  public get endRowIndex(): number {\n    return Math.min(this.config.offset + this.config.limit, this.dataStateService.itemCount);\n  }\n\n  /**\n   * Prevent invalid key press.\n   * @param event Keyboard event argument object.\n   */\n  public preventInvalidKeyPress(event: KeyboardEvent): void {\n    if (\n      (event.key >= '0' && event.key <= '9') ||\n      event.key === 'ArrowLeft' ||\n      event.key === 'ArrowRight' ||\n      event.key === 'Delete' ||\n      event.key === 'Backspace' ||\n      event.key === 'Escape' ||\n      event.key === 'Enter'\n    ) {\n      return;\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * component init lifecycle event handler.\n   */\n  public ngOnInit(): void {\n    this.setMobileModeState();\n\n    this.resizeService.resize.pipe(debounceTime(200)).subscribe(() => {\n      this.setMobileModeState();\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataTableRequestParams } from '../models/data-table-request-params.model';\n\nimport { DataTableStorageMode } from '../models/data-table-storage-mode.model';\n\nimport { GlobalRefService } from '../../utility/utility.module';\nimport { DataTableConfigService } from './data-table-config.service';\n\n/**\n * Data table persistence service; Manage data table state when persist state options is enabled.\n */\n@Injectable()\nexport class DataTablePersistenceService {\n  private storage: Storage;\n\n  constructor(private globalRefService: GlobalRefService, private config: DataTableConfigService) {}\n\n  /**\n   * Set table state storage mode.\n   * @param value Storage mode.\n   */\n  public set storageMode(value: DataTableStorageMode) {\n    if (this.globalRefService.isBrowser) {\n      if (value === 'local') {\n        this.storage = this.globalRefService.window.localStorage;\n      } else {\n        this.storage = this.globalRefService.window.sessionStorage;\n      }\n    }\n  }\n\n  /**\n   * Set table state by identifier.\n   * @param id Table identifier.\n   * @param version Data version.\n   * @param value Data table request parameters object.\n   */\n  public setState(id: string, value: DataTableRequestParams, version: string = 'v1'): void {\n    if (this.globalRefService.isBrowser) {\n      const data = {\n        ver: version,\n        val: value\n      };\n      this.storage.setItem(`${this.config.stateKeyPrefix}${id}`, JSON.stringify(data));\n    }\n  }\n\n  /**\n   * Get table state by identifier.\n   * @param id Table identifier.\n   * @param version Data version.\n   * @return Data table request params object.\n   */\n  public getState(id: string, version: string = 'v1'): DataTableRequestParams {\n    if (this.globalRefService.isBrowser) {\n      const data = JSON.parse(this.storage.getItem(`${this.config.stateKeyPrefix}${id}`));\n\n      if (data && data.ver === version) {\n        return data.val;\n      }\n    }\n\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, ReplaySubject, Subscription, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { orderBy, get } from '../../utility/services/object-utility.class';\n\nimport { DataTableRequestParams } from '../models/data-table-request-params.model';\nimport { DataTableQueryResult } from '../models/data-table-query-result.model';\nimport { DataTableFilterOption } from '../models/data-table-filter-option.model';\nimport { DataTableQueryField } from '../models/data-table-query-field.model';\n\nimport { DataTableColumnComponent } from '../components/data-table-column/data-table-column.component';\n\n/**\n * Data table resource service; Manage data table client side data querying.\n */\n@Injectable()\nexport class DataTableResourceService<T> {\n  private itemDataStream: ReplaySubject<T[]>;\n  private dataSourceSubscription: Subscription;\n\n  /**\n   * Set data source stream to query.\n   * @param dataSource Data source stream.\n   */\n  public setDataSource(dataSource: Observable<T[]>): void {\n    this.dispose();\n\n    if (this.itemDataStream && !this.itemDataStream.closed) {\n      this.itemDataStream.complete();\n    }\n\n    this.itemDataStream = new ReplaySubject<T[]>(1);\n    this.dataSourceSubscription = dataSource.subscribe((items: T[]) => {\n      this.itemDataStream.next(items);\n    });\n  }\n\n  /**\n   * Query items by data table request params.\n   * @param params Data table parameters object.\n   * @return Query result stream.\n   */\n  public query(params: DataTableRequestParams): Observable<DataTableQueryResult<T>> {\n    return this.itemDataStream.pipe(\n      switchMap((items: T[]) => {\n        let itemCount = items.length;\n        let result: T[] = items.slice();\n\n        if (params.fields.length) {\n          const filterFields = params.fields.filter(field => field.filterable);\n\n          if (filterFields.length) {\n            result = items.filter(item => {\n              return filterFields.every((filterColumn: DataTableQueryField) => {\n                if (filterColumn.filterExpression) {\n                  return filterColumn.filterExpression(item, filterColumn.field, filterColumn.filterValue);\n                }\n\n                if (filterColumn.filterValue === undefined || filterColumn.filterValue === '') {\n                  return true;\n                }\n\n                const fieldValue = get(item, filterColumn.field);\n                if (fieldValue === undefined) {\n                  return true;\n                }\n\n                if (Array.isArray(filterColumn.filterValue)) {\n                  return filterColumn.filterValue.length === 0 || filterColumn.filterValue.includes(fieldValue);\n                }\n\n                const value = String(fieldValue).toLowerCase();\n                const filterValue = String(filterColumn.filterValue).toLowerCase();\n                return value.includes(filterValue);\n              });\n            });\n            itemCount = result.length;\n          }\n\n          const sortColumns = params.fields.filter((column: DataTableQueryField) => {\n            return column.sortable && column.sortOrder !== '';\n          });\n\n          if (sortColumns.length) {\n            let orderedSortColumns = sortColumns;\n            if (sortColumns.length > 1) {\n              orderedSortColumns = sortColumns.concat().sort((a, b) => {\n                return a.sortPriority - b.sortPriority;\n              });\n            }\n\n            const orderParams = orderedSortColumns.reduce((accumulator: any, column: DataTableQueryField) => {\n                if (accumulator) {\n                  accumulator.fields.push(column.field);\n                  accumulator.orders.push(column.sortOrder);\n                }\n\n                return accumulator;\n              },\n              {\n                fields: [],\n                orders: []\n              }\n            );\n\n            result = orderBy(result, orderParams.fields, orderParams.orders);\n          }\n        }\n\n        if (params.offset !== undefined) {\n          const offset = params.offset + 1 > result.length ? 0 : params.offset;\n\n          if (params.limit === undefined) {\n            result = result.slice(offset, result.length);\n          } else {\n            result = result.slice(offset, offset + params.limit);\n          }\n        }\n\n        return of({\n          items: result,\n          count: itemCount\n        });\n      })\n    );\n  }\n\n  /**\n   * Extract data table filter options.\n   * @param filterColumn Data table column component.\n   * @return Filter options collection stream.\n   */\n  public extractFilterOptions(filterColumn: DataTableColumnComponent): Observable<DataTableFilterOption[]> {\n    return this.itemDataStream.pipe(\n      switchMap((items: T[]) => {\n        const filteredItems = items\n          .reduce((acc: DataTableFilterOption[], item: T, index: number): DataTableFilterOption[] => {\n            if (filterColumn.filterFieldMapper) {\n              return acc.concat(filterColumn.filterFieldMapper(item, index));\n            }\n\n            const filterField = filterColumn.filterField || filterColumn.field;\n            const filterValue = get(item, filterField);\n            acc.push({\n              key: filterValue,\n              value: filterValue\n            });\n\n            return acc;\n          }, [])\n          .filter((value: DataTableFilterOption, index, self) => {\n            return self.findIndex(item => item.key === value.key) === index;\n          });\n\n        return of(filteredItems);\n      })\n    );\n  }\n\n  /**\n   * Dispose client data source streams.\n   */\n  public dispose(): void {\n    if (this.dataSourceSubscription) {\n      this.dataSourceSubscription.unsubscribe();\n      this.dataSourceSubscription = null;\n    }\n\n    if (this.itemDataStream && !this.itemDataStream.closed) {\n      this.itemDataStream.complete();\n    }\n  }\n}\n","import {\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  TemplateRef,\n  AfterContentInit,\n  forwardRef,\n  ElementRef,\n  ViewChild,\n  OnInit,\n  NgZone\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription, Observable, of, Subject } from 'rxjs';\nimport { catchError, debounceTime, switchMap } from 'rxjs/operators';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DataTableFilterValueExtractCallback } from '../../models/data-table-filter-value-extract-callback.model';\nimport { DataTableCellBindEventArgs } from '../../models/data-table-cell-bind-event-args.model';\nimport { DataTableCellClickEventArgs } from '../../models/data-table-cell-click-event-args.model';\nimport { DataTableHeaderClickEventArgs } from '../../models/data-table-header-click-event-args.model';\nimport { DataTableDoubleClickEventArgs } from '../../models/data-table-double-click-event-args.model';\nimport { DataTableRowClickEventArgs } from '../../models/data-table-row-click-event-args.model';\nimport { DataTableRow } from '../../models/data-table-row.model';\nimport { DataTableRequestParams } from '../../models/data-table-request-params.model';\nimport { DataTableTranslations } from '../../models/data-table-translations.model';\nimport { DataTableDynamicRowSpanExtractorCallback } from '../../models/data-table-group-field-extractor-callback.model';\nimport { DataTableQueryResult } from '../../models/data-table-query-result.model';\nimport { DataTableDataBindCallback } from '../../models/data-table-data-bind-callback.model';\nimport { DataTableFilterOption } from '../../models/data-table-filter-option.model';\nimport { DataTableUniqueField } from '../../models/data-table-unique-field.model';\n\nimport { DataTableSelectMode } from '../../models/data-table-select-mode.model';\nimport { DataTableStorageMode } from '../../models/data-table-storage-mode.model';\nimport { DataTableScrollPoint } from '../../models/data-table-scroll-point.model';\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DragAndDropService, GlobalRefService } from '../../../utility/utility.module';\nimport { ValidatorService } from '../../../utility/services/validator.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTablePersistenceService } from '../../services/data-table-persistence.service';\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableScrollPositionService } from '../../services/data-table-scroll-position.service';\nimport { DataTableResourceService } from '../../services/data-table-resource.service';\n\n/**\n * Data table component; Data table entry component.\n */\n@Component({\n  selector: 'ng-data-table',\n  templateUrl: './data-table.component.html',\n  providers: [\n    DataTableConfigService,\n    DataTableEventStateService,\n    DataTablePersistenceService,\n    DataTableDataStateService,\n    DataTableScrollPositionService,\n    DataTableResourceService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DataTableComponent),\n      multi: true\n    }\n  ]\n})\nexport class DataTableComponent implements OnDestroy, OnInit, AfterContentInit, ControlValueAccessor {\n  private rowSelectChangeSubscription: Subscription;\n  private dataFetchStreamSubscription: Subscription;\n  private scrollPositionSubscription: Subscription;\n\n  /**\n   * Data table column component collection.\n   */\n  @ContentChildren(DataTableColumnComponent)\n  public columns: QueryList<DataTableColumnComponent>;\n\n  /**\n   * Template to display when data row is expanded for detail view.\n   */\n  @ContentChild('ngDataTableRowExpand', { static: true })\n  public rowExpandTemplate: TemplateRef<any>;\n\n  /**\n   * Template to display when data set is empty.\n   */\n  @ContentChild('ngDataTableNoRecords', { static: true })\n  public noRecordsTemplate: TemplateRef<any>;\n\n  /**\n   * Template to display while loading data.\n   */\n  @ContentChild('ngDataTableLoadingSpinner', { static: true })\n  public loadingSpinnerTemplate: TemplateRef<any>;\n\n  /**\n   * Template to display while row is expanding to load detail view.\n   */\n  @ContentChild('ngDataTableRowExpandLoadingSpinner', { static: true })\n  public rowExpandLoadingSpinnerTemplate: TemplateRef<any>;\n\n  /**\n   * Data table self DOM element reference.\n   */\n  @ViewChild('dataTableElement', { static: true })\n  public dataTableElement: ElementRef<HTMLDivElement>;\n\n  // Event handlers\n\n  /**\n   * Data table initialize event handler.\n   * Triggered after data table initialize.\n   */\n  @Output()\n  public init: EventEmitter<DataTableComponent>;\n\n  /**\n   * Row selected state change event handler.\n   * Triggered when table row selected state change.\n   */\n  @Output()\n  public rowSelectChange: EventEmitter<any | any[]>;\n\n  /**\n   * Row click event handler.\n   * Triggered when data row is clicked.\n   */\n  @Output()\n  public rowClick: EventEmitter<DataTableRowClickEventArgs<any>>;\n\n  /**\n   * Row double click event handler.\n   * Triggered when data row is double clicked.\n   */\n  @Output()\n  public rowDoubleClick: EventEmitter<DataTableDoubleClickEventArgs<any>>;\n\n  /**\n   * Header click event handler.\n   * Triggered when header column clicked.\n   */\n  @Output()\n  public headerClick: EventEmitter<DataTableHeaderClickEventArgs>;\n\n  /**\n   * All row select change event handler.\n   * Triggered when all row select state changed.\n   */\n  @Output()\n  public allRowSelectChange: EventEmitter<boolean>;\n\n  /**\n   * Cell click event handler.\n   * Triggered when clicked on a cell.\n   */\n  @Output()\n  public cellClick: EventEmitter<DataTableCellClickEventArgs<any>>;\n\n  /**\n   * Data bound event handler.\n   * Triggered after data bind.\n   */\n  @Output()\n  public dataBound: EventEmitter<void>;\n\n  /**\n   * Row bind event handler.\n   * Trigger on each row data bind.\n   */\n  @Output()\n  public rowBind: EventEmitter<DataTableRow<any>>;\n\n  /**\n   * Column bind event handler.\n   * Triggered after column data bind.\n   */\n  @Output()\n  public columnBind: EventEmitter<DataTableColumnComponent>;\n\n  /**\n   * Cell bind event handler.\n   * Triggered after data table cell data bind.\n   */\n  @Output()\n  public cellBind: EventEmitter<DataTableCellBindEventArgs<any>>;\n\n  // Input Events\n\n  /**\n   * Set data bind event handler callback. This handler is fired on each data fetch request.\n   */\n  @Input()\n  public set onDataBind(value: DataTableDataBindCallback<any>) {\n    this.dataStateService.onDataBind = value;\n  }\n\n  /**\n   * Set filter value extract event handler callback. Used to extract filter value collection dynamically when\n   * explicit data bind functionality is used with onDataBind callback.\n   */\n  @Input()\n  public set onFilterValueExtract(value: DataTableFilterValueExtractCallback) {\n    this.dataStateService.onFilterValueExtract = value;\n  }\n\n  /**\n   * Set on dynamic row span extract event handler callback.\n   */\n  @Input()\n  public set onDynamicRowSpanExtract(value: DataTableDynamicRowSpanExtractorCallback<any>) {\n    this.dataStateService.onDynamicRowSpanExtract = value;\n  }\n\n  // Input parameters\n\n  /**\n   * Set static data items collection. No need to set data source when static items collection is provided.\n   */\n  @Input()\n  public set items(value: any[]) {\n    if (!value) {\n      return;\n    }\n\n    this.eventStateService.staticDataSourceStream.next(value);\n  }\n\n  /**\n   * Set data source observable. This observable is used to retrieve row data for binding.\n   */\n  @Input()\n  public set dataSource(source: Observable<any[]>) {\n    this.initDataSource(source);\n  }\n\n  /**\n   * Set data table unique identifier.\n   */\n  @Input()\n  public set id(value: string) {\n    if (!ValidatorService.idPatternValidatorExpression.test(value)) {\n      throw Error('Invalid [id] input value. Unique identifier parameter only accept string begin with a letter ([A-Za-z]) and may be followed by any number of letters, digits ([0-9]), hyphens (\"-\"), underscores (\"_\").');\n    }\n\n    this.dataStateService.id = value;\n  }\n\n  /**\n   * Set persist table state on provided storage mode if true. Depends on storageMode property.\n   */\n  @Input()\n  public set persistTableState(value: boolean) {\n    this.config.persistTableState = value;\n  }\n\n  /**\n   * Set storage mode to persist table state. Only applicable when persistTableState is true.\n   */\n  @Input()\n  public set storageMode(value: DataTableStorageMode) {\n    this.dataTableStateService.storageMode = value;\n  }\n\n  /**\n   * Set multiple column sortable if true. Only applicable for sortable true columns.\n   */\n  @Input()\n  public set multiColumnSortable(value: boolean) {\n    this.config.multiColumnSortable = value;\n  }\n\n  /**\n   * Set table header bar visible if true.\n   */\n  @Input()\n  public set showHeader(value: boolean) {\n    this.config.showHeader = value;\n  }\n\n  /**\n   * Set title to be shown in the header. Only applicable when showHeader is true.\n   */\n  @Input()\n  public set title(value: string) {\n    this.config.title = value;\n  }\n\n  /**\n   * Set width value in pixels. Can be used to set the width of teh table (responsive if not set).\n   */\n  @Input()\n  public set width(value: string | number) {\n    this.config.width = value;\n  }\n\n  /**\n   * Set minimum table content height value in pixels. Can be used to set the minimum height of the table content area.\n   */\n  @Input()\n  public set minContentHeight(value: string | number) {\n    this.config.minContentHeight = value;\n  }\n\n  /**\n   * Minimum table content width value in pixels. Can be used to set the minimum width of the table content area.\n   */\n  @Input()\n  public set minContentWidth(value: string | number) {\n    this.config.minContentWidth = value;\n  }\n\n  /**\n   * Table content height value in pixels. This configuration can be used to enable table content vertical\n   * scrolling for responsive design.\n   */\n  @Input()\n  public set contentHeight(value: string | number) {\n    this.config.contentHeight = value;\n  }\n\n  /**\n   * Show pagination bar if true. Depends on offset and limit values. Trigger dataLoad event with offset\n   * and limit values.\n   */\n  @Input()\n  public set pageable(value: boolean) {\n    this.config.pageable = value;\n  }\n\n  /**\n   * Enable scrolling based on-demand data loading functionality if true. Trigger dataLoad event with offset\n   * and limit values when scroll to bottom until data source exhaust.\n   */\n  @Input()\n  public set loadOnScroll(value: boolean) {\n    this.config.loadOnScroll = value;\n  }\n\n  /**\n   * Set view height distance ratio to trigger data fetch on scroll. Applicable only when load on scroll mode is enabled.\n   */\n  @Input()\n  public set loadViewDistanceRatio(value: number) {\n    this.config.loadViewDistanceRatio = value;\n  }\n\n  /**\n   * Set auto generated index column with row numbering if true.\n   */\n  @Input()\n  public set showIndexColumn(value: boolean) {\n    this.config.showIndexColumn = value;\n  }\n\n  /**\n   * Set index column header title. Applicable when showIndexColumn is true.\n   */\n  @Input()\n  public set indexColumnTitle(value: string) {\n    this.config.indexColumnTitle = value;\n  }\n\n  /**\n   * Set row select checkbox and select state if true.\n   */\n  @Input()\n  public set rowSelectable(value: boolean) {\n    this.config.rowSelectable = value;\n  }\n\n  /**\n   * Data table row select mode. Applicable only when rowSelectable is true.\n   */\n  @Input()\n  public set selectMode(value: DataTableSelectMode) {\n    this.config.selectMode = value;\n  }\n\n  /**\n   * Set select all row checkbox on column header visible if true.\n   * Only applicable when showRowSelectCheckbox, rowSelectable is true & item selectMode is  multi.\n   */\n  @Input()\n  public set showRowSelectCheckbox(value: boolean) {\n    this.config.showRowSelectCheckbox = value;\n  }\n\n  /**\n   * Set select all row checkbox on column header visible if true.\n   * Only applicable when showRowSelectCheckbox, rowSelectable is true & item selectMode is  multi.\n   */\n  @Input()\n  public set showRowSelectAllCheckbox(value: boolean) {\n    this.config.showRowSelectAllCheckbox = value;\n  }\n\n  /**\n   * Set substitute rows visible if true. Fill with empty rows when row count < limit.\n   */\n  @Input()\n  public set showSubstituteRows(value: boolean) {\n    this.config.showSubstituteRows = value;\n  }\n\n  /**\n   * Set row expander visible if true. Render ngDataTableExpand template on expand click.\n   */\n  @Input()\n  public set expandableRows(value: boolean) {\n    this.config.expandableRows = value;\n  }\n\n  /**\n   * Set trigger row select on click event if true. Applicable only when rowSelectable is true.\n   */\n  @Input()\n  public set selectOnRowClick(value: boolean) {\n    this.config.selectOnRowClick = value;\n  }\n\n  /**\n   * Set expand and render expand template on row click if true. Only applicable when expandableRows is true.\n   */\n  @Input()\n  public set expandOnRowClick(value: boolean) {\n    this.config.expandOnRowClick = value;\n  }\n\n  /**\n   * Auto trigger dataLoad event on initialization if true.\n   */\n  @Input()\n  public set autoFetch(value: boolean) {\n    this.config.autoFetch = value;\n  }\n\n  /**\n   * Set loading spinner visible if true. Show loading spinner when data fetch operation is triggered.\n   */\n  @Input()\n  public set showLoadingSpinner(value: boolean) {\n    this.config.showLoadingSpinner = value;\n  }\n\n  /**\n   * Set select option track by field path which is used to uniquely identify row for selection tracking.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set selectTrackBy(value: string) {\n    this.config.selectTrackBy = value;\n  }\n\n  /**\n   * Set selected row identifier. Select specified row on initial load.\n   * Applicable when row select mode is SINGLE or SINGLE_TOGGLE.\n   */\n  @Input()\n  public set selectedRow(value: any) {\n    this.dataStateService.selectedRow = value;\n    this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRow);\n  }\n\n  /**\n   * Set selected row identifiers collection. Select specified rows on initial load.\n   * Applicable when selectMode is SINGLE or SINGLE_TOGGLE true.\n   */\n  @Input()\n  public set selectedRows(value: any[]) {\n    this.dataStateService.selectedRows = value || [];\n    this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRows);\n  }\n\n  /**\n   * Set filter debounce time in milliseconds. Applicable only when filterDebounce is true.\n   */\n  @Input()\n  public set filterDebounceTime(value: number) {\n    this.config.filterDebounceTime = value;\n  }\n\n  /**\n   * Set filter data debounce enabled state with provided filterDebounceTime if true.\n   */\n  @Input()\n  public set filterDebounce(value: boolean) {\n    this.config.filterDebounce = value;\n  }\n\n  /**\n   * Set refresh button visible if true. Only applicable when showHeader is true.\n   */\n  @Input()\n  public set showRefreshButton(value: boolean) {\n    this.config.showRefreshButton = value;\n  }\n\n  /**\n   * Row selector column width in pixels. Applicable only when showColumnSelector is true.\n   */\n  @Input()\n  public set showColumnSelector(value: boolean) {\n    this.config.showColumnSelector = value;\n  }\n\n  /**\n   * Set column selector dropdown width in pixels. Only applicable when showColumnSelector is true.\n   */\n  @Input()\n  public set columnSelectorWidth(value: number) {\n    this.config.columnSelectorWidth = value;\n  }\n\n  /**\n   * Set expander column width in pixels. Applicable only when expandableRows is true.\n   */\n  @Input()\n  public set expanderColumnWidth(value: number | string) {\n    this.config.expanderColumnWidth = value;\n  }\n\n  /**\n   * Set index column width in pixels. Applicable only when showIndexColumn is true.\n   */\n  @Input()\n  public set indexColumnWidth(value: number | string) {\n    this.config.indexColumnWidth = value;\n  }\n\n  /**\n   * Set row selector column width in pixels. Applicable only when showColumnSelector is true.\n   */\n  @Input()\n  public set selectionColumnWidth(value: number | string) {\n    this.config.selectionColumnWidth = value;\n  }\n\n  /**\n   * Set translation data object. Used to localize table static label text.\n   */\n  @Input()\n  public set translations(data: DataTableTranslations) {\n    this.config.translations = data;\n  }\n\n  /**\n   * Set row expand loading spinner visible if true. Applicable only when row expand is enabled.\n   */\n  @Input()\n  public set showRowExpandLoadingSpinner(value: boolean) {\n    this.config.showRowExpandLoadingSpinner = value;\n  }\n\n  /**\n   * Set data offset value (start offset index). Applicable only when pageable is true.\n   */\n  @Input()\n  public set offset(value: number) {\n    this.config.offset = value;\n    this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Set data limit value (page size). Applicable only when pageable is true.\n   */\n  @Input()\n  public set limit(value: number) {\n    this.config.limit = value;\n    this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n  }\n\n  /**\n   * Set current page number. Auto calculate offset depending on page number,\n   * do not explicitly set offset when page is used.\n   */\n  @Input()\n  public set page(value: number) {\n    this.offset = (value - 1) * this.config.limit;\n  }\n\n  /**\n   * Get current page number.\n   */\n  public get page(): number {\n    return Math.floor(this.config.offset / this.config.limit) + 1;\n  }\n\n  /**\n   * Get data table header padding in pixels.\n   */\n  public get headerPadding(): number {\n    return this.config.contentHeight ? this.globalRefService.scrollbarWidth : 0;\n  }\n\n  /**\n   * Get data loading status.\n   */\n  public get isLoading(): boolean {\n    return !(this.config.loadOnScroll && this.dataStateService.dataRows.length)\n      && this.config.showLoadingSpinner && this.dataStateService.dataLoading;\n  }\n\n  constructor(\n    private dragAndDropService: DragAndDropService,\n    private dataTableStateService: DataTablePersistenceService,\n    private globalRefService: GlobalRefService,\n    private eventStateService: DataTableEventStateService,\n    private dataTableResourceService: DataTableResourceService<any>,\n    private zone: NgZone,\n    public dataStateService: DataTableDataStateService,\n    public scrollPositionService: DataTableScrollPositionService,\n    public config: DataTableConfigService\n  ) {\n    this.storageMode = config.storageMode;\n\n    this.headerClick = this.eventStateService.headerClickStream;\n    this.allRowSelectChange = this.eventStateService.allRowSelectChangeStream;\n    this.rowBind = this.eventStateService.rowBindStream;\n    this.rowClick = this.eventStateService.rowClickStream;\n    this.rowDoubleClick = this.eventStateService.rowDoubleClickStream;\n    this.rowSelectChange = this.eventStateService.rowSelectChangeStream;\n    this.cellBind = this.eventStateService.cellBindStream;\n    this.cellClick = this.eventStateService.cellClickStream;\n    this.init = this.eventStateService.initStream;\n    this.dataBound = this.eventStateService.dataBoundStream;\n    this.columnBind = this.eventStateService.columnBind;\n  }\n\n  /**\n   * On after data bind event handler\n   * @param queryResult Query result object\n   */\n  private onAfterDataBind(queryResult: DataTableQueryResult<any>): void {\n    this.dataStateService.itemCount = queryResult.count;\n    this.setDataRows(queryResult.items);\n\n    if (this.dataStateService.heardReload) {\n      this.eventStateService.fetchFilterOptionsStream.next(false);\n      this.dataStateService.heardReload = false;\n    }\n\n    this.dataStateService.dataLoading = false;\n    this.eventStateService.dataBoundStream.emit();\n  }\n\n  /**\n   * Get data item selected state\n   * @param item Data item object\n   * @return True if item is selected\n   */\n  private getSelectedState(item: any): boolean {\n    const id = get(item, this.config.selectTrackBy);\n    if (id === undefined) {\n      return false;\n    }\n\n    if (this.config.selectMode === 'multi') {\n      return this.dataStateService.selectedRows.indexOf(id) > -1;\n    }\n\n    return this.dataStateService.selectedRow === id;\n  }\n\n  /**\n   * Set data table item collection\n   * @param items Data table item collection\n   */\n  private setDataRows(items: any[]): void {\n    const mappedItems = items.map((item: any, index: number) => {\n      let currentIndex;\n      if (this.config.loadOnScroll || this.config.pageable) {\n        currentIndex = this.config.offset + index + 1;\n      } else {\n        currentIndex = index + 1;\n      }\n\n      return {\n        dataLoaded: false,\n        expanded: false,\n        disabled: false,\n        color: '',\n        cssClass: '',\n        tooltip: '',\n        index: currentIndex,\n        item,\n        selected: this.getSelectedState(item)\n      };\n    });\n\n    if (this.config.loadOnScroll) {\n      this.dataStateService.dataRows = [ ...this.dataStateService.dataRows, ...mappedItems ];\n    } else {\n      this.dataStateService.dataRows = mappedItems;\n    }\n\n    if (this.config.selectMode === 'multi') {\n      this.dataStateService.allRowSelected =\n        this.dataStateService.dataRows.length !== 0 &&\n        this.dataStateService.dataRows.every((dataRow: DataTableRow<any>) => {\n          return dataRow.selected;\n        });\n    }\n\n    if (!this.config.loadOnScroll) {\n      const substituteRowCount = this.config.limit - this.dataStateService.dataRows.length;\n      this.dataStateService.substituteRows = Array.from({\n        length: substituteRowCount\n      });\n    }\n  }\n\n  /**\n   * Initialize data fetch event\n   */\n  private initDataFetchEvent(): void {\n    const noop = {\n      items: [],\n      count: 0\n    };\n\n    this.dataFetchStreamSubscription = this.eventStateService.dataFetchStream\n      .pipe(\n        debounceTime(20),\n        switchMap((fetchMode: DataFetchMode) => this.mapDataBind(fetchMode)),\n        catchError(() => {\n          return of(noop);\n        })\n      )\n      .subscribe(\n        (queryResult: DataTableQueryResult<any>) => {\n          this.onAfterDataBind(queryResult);\n        },\n        () => {\n          this.onAfterDataBind(noop);\n        }\n      );\n  }\n\n  /**\n   * Re-map data binding data\n   * @param fetchMode Data fetch mode\n   * @return Data table query result stream\n   */\n  private mapDataBind(fetchMode: DataFetchMode): Observable<DataTableQueryResult<any>> {\n    this.dataStateService.dataLoading = true;\n    if (fetchMode === DataFetchMode.HARD_RELOAD) {\n      this.clearRowSelectState();\n      this.clearColumnState();\n      this.dataStateService.heardReload = true;\n      this.config.offset = 0;\n    }\n\n    const params: DataTableRequestParams = {\n      loadData: fetchMode === DataFetchMode.HARD_RELOAD || fetchMode === DataFetchMode.SOFT_RELOAD\n    };\n\n    if (this.columns) {\n      params.fields = this.columns\n        .filter(column => {\n          return column.sortable || column.filterable;\n        })\n        .reduce((acc: DataTableUniqueField[], column: DataTableColumnComponent) => {\n          if (column.sortField || column.filterField) {\n            acc.push({\n              field: column.sortField || column.filterField,\n              column\n            });\n          } else {\n            acc.push({\n              field: column.field,\n              column\n            });\n          }\n\n          return acc;\n        }, [])\n        .map((uniqueField: DataTableUniqueField) => {\n          let filter;\n          if (uniqueField.column.showDropdownFilter) {\n            if (uniqueField.column.dropdownFilterSelectMode === 'multi') {\n              filter = uniqueField.column.filter && uniqueField.column.filter.map(filterValue => filterValue.key);\n            } else {\n              filter = uniqueField.column.filter && uniqueField.column.filter.key;\n            }\n          } else {\n            filter = uniqueField.column.filter;\n          }\n\n          return {\n            field: uniqueField.field,\n            sortable: uniqueField.column.sortable,\n            sortOrder: uniqueField.column.sortOrder,\n            sortPriority: uniqueField.column.sortPriority || (uniqueField.column.sortOrder ? 1 : 0),\n            filterable: uniqueField.column.filterable,\n            filterValue: filter,\n            filterExpression: uniqueField.column.filterExpression,\n          };\n        });\n    }\n\n    if (this.config.pageable || this.config.loadOnScroll) {\n      params.offset = this.config.offset;\n      params.limit = this.config.limit;\n    }\n\n    if (this.config.persistTableState) {\n      this.dataTableStateService.setState(this.dataStateService.id, params);\n    }\n\n    return this.dataStateService.onDataBind(params);\n  }\n\n  /**\n   * Initialize data table state via previous state snapshot; Applicable only when persist table state is enabled\n   */\n  private initDataTableState(): void {\n    if (this.config.persistTableState) {\n      const dataTableState = this.dataTableStateService.getState(this.dataStateService.id);\n      if (dataTableState) {\n        this.columns.forEach(column => {\n          const field = dataTableState.fields.find(col => {\n            return col.field === column.field;\n          });\n\n          if (field) {\n            if (column.filterable && field.filterable) {\n              if (column.showDropdownFilter) {\n                if (field.filterValue) {\n                  if (column.dropdownFilterSelectMode === 'multi') {\n                    column.filter = field.filterValue.map((filterValue) => {\n                      return {\n                        key: filterValue,\n                        value: filterValue\n                      };\n                    });\n                  } else {\n                    column.filter = {\n                      key: field.filterValue,\n                      value: field.filterValue\n                    };\n                  }\n                }\n              } else {\n                column.filter = field.filterValue;\n              }\n            }\n\n            if (column.sortable && field.sortable) {\n              column.sortOrder = field.sortOrder;\n            }\n          }\n        });\n\n        this.config.limit = dataTableState.limit;\n        this.config.offset = dataTableState.offset;\n      }\n    }\n  }\n\n  /**\n   * After component initialize lifecycle event handler\n   */\n  public ngAfterContentInit(): void {\n    this.dataStateService.relativeParentElement = this.dataTableElement.nativeElement;\n\n    if (!this.dataStateService.onDataBind) {\n      this.dataSource = this.eventStateService.staticDataSourceStream;\n    }\n\n    this.initDataTableState();\n    this.initDataFetchEvent();\n\n    if (this.config.autoFetch) {\n      this.eventStateService.dataFetchStream.next(DataFetchMode.SOFT_LOAD);\n    }\n\n    this.eventStateService.fetchFilterOptionsStream.next(true);\n    this.eventStateService.initStream.emit(this);\n\n    if (this.config.loadOnScroll) {\n      this.scrollPositionSubscription = this.scrollPositionService.scrollPositionStream.subscribe((pos: DataTableScrollPoint) => {\n        const roundingPixel = 1;\n        const gutterPixel = 1;\n\n        if (\n          pos.isVertical\n          && pos.scrollTop >= pos.scrollHeight - (1 + this.config.loadViewDistanceRatio) * pos.clientHeight - roundingPixel - gutterPixel\n          && (this.config.offset + this.config.limit) < this.dataStateService.itemCount\n          && !this.dataStateService.dataLoading\n        ) {\n          this.dataStateService.dataLoading = true;\n          this.zone.run(() => {\n            this.offset = this.config.offset + this.config.limit;\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Reset column sort and filter state\n   */\n  private clearColumnState(): void {\n    this.columns.forEach((column: DataTableColumnComponent) => {\n      column.resetSortOrder();\n      column.filter = undefined;\n    });\n  }\n\n  /**\n   * Clear selected data row status\n   */\n  private clearRowSelectState(): void {\n    this.dataStateService.selectedRow = undefined;\n    this.dataStateService.selectedRows = [];\n    this.dataStateService.allRowSelected = false;\n  }\n\n  /**\n   * Fetch data from data source\n   * @param fetchMode Data fetch mode\n   */\n  public fetchData(fetchMode: DataFetchMode = DataFetchMode.SOFT_RELOAD): void {\n    this.eventStateService.dataFetchStream.next(fetchMode);\n  }\n\n  /**\n   * Initialize data source\n   * @param source Data source stream\n   */\n  public initDataSource(source: Observable<any>): void {\n    this.dataTableResourceService.setDataSource(source);\n\n    this.onDataBind = (params: DataTableRequestParams): Observable<DataTableQueryResult<any>> => {\n      if (params.loadData) {\n        this.dataTableResourceService.setDataSource(source);\n      }\n\n      return this.dataTableResourceService.query(params);\n    };\n\n    this.onFilterValueExtract = (column: DataTableColumnComponent): Observable<DataTableFilterOption[]> => {\n      return this.dataTableResourceService.extractFilterOptions(column);\n    };\n  }\n\n  /**\n   * Component value write event handler; Form control support implementation\n   */\n  public writeValue(value: any): void {\n    if (this.config.selectMode === 'multi') {\n      this.selectedRows = value;\n    } else {\n      this.selectedRow = value;\n    }\n  }\n\n  /**\n   * Register select change event handler; Form control support implementation\n   * @param onSelectChange Select change event handler callback\n   */\n  public registerOnChange(onSelectChange: (value: any) => void): void {\n    this.rowSelectChangeSubscription = this.eventStateService.rowSelectChangeStream.subscribe((selectedIds: any | any[]) => {\n      onSelectChange(selectedIds);\n    });\n  }\n\n  /**\n   * Register on touch event handler; Form control support implementation\n   * @param fn Touch event callback handler\n   */\n  public registerOnTouched(fn: any): void {}\n\n  /**\n   * Get table width in pixels\n   */\n  public get tableWidth(): number {\n    return this.config.width || this.dataStateService.tableWidth;\n  }\n\n  public ngOnInit(): void {\n    if (!this.dataStateService.id) {\n      throw Error('Missing required parameter value for [id] input.');\n    }\n\n    if (this.config.loadOnScroll) {\n      if (!this.config.minContentHeight) {\n        throw Error('[minContentHeight] is required when [infiniteScrollable] is enabled.');\n      }\n\n      if (this.config.pageable) {\n        throw Error('[pageable] and [infiniteScrollable] cannot be enabled at the same time.');\n      }\n    }\n  }\n\n  /**\n   * Component destroy lifecycle event handler\n   */\n  public ngOnDestroy(): void {\n    if (this.dataFetchStreamSubscription) {\n      this.dataFetchStreamSubscription.unsubscribe();\n    }\n\n    if (this.rowSelectChangeSubscription) {\n      this.rowSelectChangeSubscription.unsubscribe();\n    }\n\n    if (this.scrollPositionSubscription) {\n      this.scrollPositionSubscription.unsubscribe();\n    }\n\n    this.dataTableResourceService.dispose();\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\nimport { DataTableRow } from '../../models/data-table-row.model';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\n/**\n * Data table body component. Data table body table definition rendering is handled by this component.\n */\n@Component({\n  exportAs: 'ngDataTableBody',\n  // tslint:disable-next-line\n  selector: '[ngDataTableBody]',\n  templateUrl: './data-table-body.component.html'\n})\nexport class DataTableBodyComponent {\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  @Input()\n  public rowExpandTemplate: TemplateRef<any>;\n\n  @Input()\n  public rowExpandLoadingSpinnerTemplate: TemplateRef<any>;\n\n  constructor(\n    public config: DataTableConfigService,\n    public dataStateService: DataTableDataStateService,\n    private eventStateService: DataTableEventStateService\n  ) {}\n\n  /**\n   * Unique data row tracking callback.\n   * @param index Current index.\n   * @param dataRow Data row object reference.\n   */\n  public dataRowTrackBy(index: number, dataRow: DataTableRow<any>): number {\n    return dataRow.index;\n  }\n\n  /**\n   * Odd row status; True if row index is a odd number.\n   * @param row Data row object.\n   * @return True if odd row.\n   */\n  public isOddRow(row: DataTableRow<any>): boolean {\n    return row.index % 2 === 0;\n  }\n\n  /**\n   * Even row status; True if row index is a even number.\n   * @param row Data row object.\n   * @return True if even row.\n   */\n  public isEvenRow(row: DataTableRow<any>): boolean {\n    return row.index % 2 === 1;\n  }\n\n  /**\n   * Odd substitute row status by row index; True if row index is an odd substitute row.\n   * @param index Row index.\n   * @return True if odd substitute row.\n   */\n  public isOddSubstituteRow(index: number): boolean {\n    return (index + this.dataStateService.substituteRows.length) % 2 === 0;\n  }\n\n  /**\n   * Even substitute row status by row index; True if row index is an even substitute row.\n   * @param index Row index.\n   * @return True if even substitute row.\n   */\n  public isEvenSubstituteRow(index: number): boolean {\n    return (index + this.dataStateService.substituteRows.length) % 2 === 1;\n  }\n\n  /**\n   * On row expand event handler.\n   * @param $event Click event argument reference.\n   * @param dataRow Data row object.\n   */\n  public onRowExpand($event: Event, dataRow: DataTableRow<any>): void {\n    dataRow.expanded = !dataRow.expanded;\n\n    if (!this.config.showRowExpandLoadingSpinner) {\n      dataRow.dataLoaded = true;\n    }\n  }\n\n  /**\n   * On row initialize event handler.\n   * @param dataRow Data table row.\n   */\n  public onRowInit(dataRow): void {\n    this.eventStateService.rowBindStream.emit(dataRow);\n  }\n\n  /**\n   * On cell initialize event handler.\n   * @param column Data table column component reference.\n   * @param row Data table row object.\n   */\n  public onCellInit(column: DataTableColumnComponent, row: DataTableRow<any>): void {\n    this.eventStateService.cellBindStream.emit({\n      column,\n      row\n    });\n  }\n\n  /**\n   * Cell clicked event handler.\n   * @param column Column data table component reference.\n   * @param row Data table row reference.\n   * @param event Mouse click event argument reference.\n   */\n  public cellClicked(column: DataTableColumnComponent, row: DataTableRow<any>, event: MouseEvent): void {\n    this.eventStateService.cellClickStream.emit({ row, column, event });\n  }\n\n  /**\n   * Get row span collection by data row.\n   * @param row Data row reference.\n   * @return Dummy row span collection.\n   */\n  public getRowSpanCollection(row: DataTableRow<any>): any[] {\n    return Array.from({\n      length: this.dataStateService.onDynamicRowSpanExtract(row)\n    });\n  }\n\n  /**\n   * Get total column count used for substitute row generation.\n   * @return Number of columns.\n   */\n  public get totalColumnCount(): number {\n    let count = 0;\n    count += this.config.showIndexColumn ? 1 : 0;\n    count += this.config.showRowSelectCheckboxColumn ? 1 : 0;\n    count += this.config.expandableRows ? 1 : 0;\n    this.columns.forEach(column => {\n      count += column.visible ? 1 : 0;\n    });\n\n    return count;\n  }\n\n  /**\n   * On row select click event handler.\n   * @param row Data row reference.\n   * @param event Row click event.\n   */\n  public onRowSelectClick(row: DataTableRow<any>, event: Event): void {\n    // Prevent single mode checkbox getting unchecked on tapping already selected.\n    if (this.config.selectMode === 'single') {\n      const id = get(row.item, this.config.selectTrackBy);\n      const previousSelection = this.dataStateService.selectedRow;\n\n      if (previousSelection === id) {\n        event.preventDefault();\n        row.selected = true;\n      }\n    }\n  }\n\n  /**\n   * On row selection change event handler.\n   * @param row Data row reference.\n   */\n  public onRowSelectChange(row: DataTableRow<any>): void {\n    const id = get(row.item, this.config.selectTrackBy);\n\n    switch (this.config.selectMode) {\n      case 'multi': {\n        const index = this.dataStateService.selectedRows.indexOf(id);\n        if (row.selected && index < 0) {\n          this.dataStateService.selectedRows.push(id);\n        } else if (!row.selected && index > -1) {\n          this.dataStateService.selectedRows.splice(index, 1);\n        }\n\n        const previousAllRowSelectedState = this.dataStateService.allRowSelected;\n        this.dataStateService.allRowSelected = this.dataStateService.dataRows.every((dataRow: DataTableRow<any>) => {\n          return dataRow.selected;\n        });\n\n        this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRows);\n\n        if (previousAllRowSelectedState !== this.dataStateService.allRowSelected) {\n          this.eventStateService.allRowSelectChangeStream.emit(this.dataStateService.allRowSelected);\n        }\n        break;\n      }\n      case 'single_toggle': {\n        if (row.selected) {\n          this.dataStateService.selectedRow = id;\n\n          // deselect all other row other rows\n          this.dataStateService.dataRows.forEach((dataRow: DataTableRow<any>) => {\n            if (dataRow !== row) {\n              dataRow.selected = false;\n            }\n          });\n        } else {\n          this.dataStateService.selectedRow = undefined;\n        }\n\n        this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRow);\n        break;\n      }\n      case 'single': {\n        const previousSelection = this.dataStateService.selectedRow;\n        this.dataStateService.selectedRow = id;\n        row.selected = true;\n\n        // deselect all other row other rows\n        this.dataStateService.dataRows.forEach((dataRow: DataTableRow<any>) => {\n          if (dataRow !== row) {\n            dataRow.selected = false;\n          }\n        });\n\n        if (previousSelection !== id) {\n          this.eventStateService.rowSelectChangeStream.emit(this.dataStateService.selectedRow);\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * Row clicked event handler.\n   * @param row Data row object.\n   * @param event Mouse click event argument object.\n   */\n  public rowClicked(row: DataTableRow<any>, event: MouseEvent): void {\n    if (this.config.selectOnRowClick || (this.config.expandableRows && this.config.expandOnRowClick)) {\n      const target = event.target as HTMLElement;\n      if (target && target.classList && target.classList.contains('ng-ignore-propagation')) {\n        return;\n      }\n\n      if (this.config.rowSelectable && this.config.selectOnRowClick) {\n        row.selected = !row.selected;\n        this.onRowSelectChange(row);\n      }\n\n      if (this.config.expandOnRowClick) {\n        row.expanded = !row.expanded;\n      }\n    }\n\n    this.eventStateService.rowClickStream.emit({ row, event });\n  }\n\n  /**\n   * Row double clicked event handler.\n   * @param row Data row object.\n   * @param event Event Mouse click event argument object.\n   */\n  public rowDoubleClicked(row: DataTableRow<any>, event: MouseEvent): void {\n    this.eventStateService.rowDoubleClickStream.emit({ row, event });\n  }\n\n  /**\n   * Get substitute row availability status.\n   * @return True if substitute rows are available.\n   */\n  public get hasSubstituteRows(): boolean {\n    return !this.config.loadOnScroll\n      && this.config.showSubstituteRows\n      && this.dataStateService.dataRows.length\n      && !this.dataStateService.showNoDataOverlay;\n  }\n\n  /**\n   * Get cell value by data field.\n   * @param row Data row reference.\n   * @param column Data table column component reference.\n   */\n  public getFieldValue(row: DataTableRow<any>, column: DataTableColumnComponent) {\n    return get(row.item, column.field);\n  }\n\n  /**\n   * Get row select checkbox display status.\n   * @return True if row selector checkbox should be displayed.\n   */\n  public get showRowSelectCheckbox(): boolean {\n    return this.config.rowSelectable && this.config.showRowSelectCheckbox;\n  }\n\n  /**\n   * Get row expend view loading status. Used to display loading spinner on expand column while data fetching.\n   * @param row Data row object reference.\n   */\n  public isRowExpanderLoading(row: DataTableRow<any>): boolean {\n    return row.expanded && !row.dataLoaded;\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\nimport { DataFetchMode } from '../../models/data-fetch-mode.enum';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableEventStateService } from '../../services/data-table-event.service';\n\n/**\n * No data body component. Used to display no data message when data not available.\n */\n@Component({\n  selector: 'ng-data-table-no-data-body',\n  templateUrl: './data-table-no-data-body.component.html'\n})\nexport class DataTableNoDataBodyComponent {\n  @Input()\n  public noRecordsTemplate: TemplateRef<any>;\n\n  constructor(public config: DataTableConfigService, public eventStateService: DataTableEventStateService) {}\n\n  /**\n   * Reset all applied filters.\n   */\n  public resetFilters(): void {\n    this.eventStateService.dataFetchStream.emit(DataFetchMode.HARD_RELOAD);\n  }\n\n  /**\n   * Get default no data template display status.\n   * @return True if default no data template should be displayed.\n   */\n  public get showDefaultNoDataTemplate(): boolean {\n    return !!(!this.noRecordsTemplate && this.config.translations.noDataMessage);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { DataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n/**\n * Data table header component. Render data table column title and filter header rows.\n */\n@Component({\n  exportAs: 'ngDataTableHead',\n  // tslint:disable-next-line\n  selector: '[ngDataTableHead]',\n  templateUrl: './data-table-head.component.html'\n})\nexport class DataTableHeadComponent {\n  @Input()\n  public columns: DataTableColumnComponent[];\n\n  /**\n   * Get filter column availability status.\n   * @return True if there is at least one filter column.\n   */\n  public get hasFilterColumns(): boolean {\n    return this.columns.some((column: DataTableColumnComponent) => column.filterable);\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\n\nimport { DataTableConfigService } from '../../services/data-table-config.service';\nimport { DataTableDataStateService } from '../../services/data-table-data-state.service';\n\n/**\n * Data loading spinner component. Displayed within table body while fetching data.\n */\n@Component({\n  selector: 'ng-data-table-loading-spinner',\n  templateUrl: './data-table-loading-spinner.component.html'\n})\nexport class DataTableLoadingSpinnerComponent {\n  @Input()\n  public loadingSpinnerTemplate: TemplateRef<any>;\n\n  @Input()\n  public isLoading: boolean;\n\n  @Input()\n  public showOverlay: boolean;\n\n  constructor(public config: DataTableConfigService, public dataStateService: DataTableDataStateService) {}\n}\n","import { Directive, ElementRef, AfterViewInit, NgZone, OnDestroy, Input } from '@angular/core';\n\nimport { Subscription, fromEvent, Subject } from 'rxjs';\nimport { map, pairwise } from 'rxjs/operators';\n\nimport { DataTableScrollPoint } from '../models/data-table-scroll-point.model';\n\n/**\n * Scroll position directive.\n * Track current scroll position of target element.\n */\n@Directive({\n  selector: '[ngScrollPosition]'\n})\nexport class ScrollPositionDirective implements AfterViewInit, OnDestroy {\n  private scrollEventSubscription: Subscription;\n\n  @Input()\n  public ngScrollPosition: Subject<DataTableScrollPoint>;\n\n  constructor(private el: ElementRef, private zone: NgZone) {}\n\n  /**\n   * After component initialize lifecycle event handler.\n   */\n  public ngAfterViewInit(): void {\n    this.zone.runOutsideAngular(() => {\n      this.scrollEventSubscription = fromEvent(this.el.nativeElement, 'scroll')\n        .pipe(\n          map(() => {\n            return {\n              scrollLeft: this.el.nativeElement.scrollLeft,\n              scrollTop: this.el.nativeElement.scrollTop,\n              scrollHeight: this.el.nativeElement.scrollHeight,\n              scrollWidth: this.el.nativeElement.scrollWidth,\n              clientHeight: this.el.nativeElement.clientHeight,\n              clientWidth: this.el.nativeElement.clientWidth,\n            };\n          }),\n          pairwise(),\n          map((pair: DataTableScrollPoint[]) => {\n            const [ previous, current ] = pair;\n\n            return {\n              ...current,\n              isHorizontal: previous.scrollLeft !== current.scrollLeft,\n              isVertical: previous.scrollTop !== current.scrollTop\n            };\n          })\n        )\n        .subscribe((pos: DataTableScrollPoint) => {\n          this.ngScrollPosition.next(pos);\n        });\n    });\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.scrollEventSubscription) {\n      this.scrollEventSubscription.unsubscribe();\n    }\n\n    this.ngScrollPosition.complete();\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\n\nimport { Subscription, Subject } from 'rxjs';\n\nimport { DataTableScrollPoint } from '../models/data-table-scroll-point.model';\n\n/**\n * Scroll element directive.\n * Used to set scroll position to target element.\n */\n@Directive({\n  selector: '[ngScrollElement]'\n})\nexport class ScrollElementDirective implements AfterViewInit, OnDestroy {\n  private scrollPositionSubscription: Subscription;\n\n  @Input()\n  public ngScrollElement: Subject<DataTableScrollPoint>;\n\n  constructor(private el: ElementRef) {}\n\n  /**\n   * After component initialize lifecycle event handler.\n   */\n  public ngAfterViewInit(): void {\n    this.scrollPositionSubscription = this.ngScrollElement.subscribe(value => {\n      this.el.nativeElement.scrollLeft = value.scrollLeft;\n    });\n  }\n\n  /**\n   * Component destroy lifecycle event handler.\n   */\n  public ngOnDestroy(): void {\n    if (this.scrollPositionSubscription) {\n      this.scrollPositionSubscription.unsubscribe();\n    }\n  }\n}\n","import { AfterViewInit, Directive, ElementRef, EventEmitter, Output } from '@angular/core';\n\n/**\n * Element width directive.\n * Used to emit target element width after view init.\n */\n@Directive({\n  selector: '[ngElementWidth]'\n})\nexport class ElementWidthDirective implements AfterViewInit {\n  @Output()\n  public ngElementWidth = new EventEmitter();\n\n  constructor(private el: ElementRef) {}\n\n  /**\n   * After component view initialize lifecycle event handler.\n   */\n  public ngAfterViewInit(): void {\n    this.ngElementWidth.emit(this.el.nativeElement.clientWidth);\n  }\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { get } from '../../utility/services/object-utility.class';\n\nimport { DropdownConfig } from '../models/dropdown-config.model';\nimport { DropdownTranslations } from '../models/dropdown-translations.model';\nimport { DataTableConfig } from '../../data-table/models/data-table-config.model';\n\nimport { DropdownSelectMode } from '../models/dropdown-select-mode.model';\nimport { ViewPosition } from '../../utility/models/view-position.model';\n\nexport const DROPDOWN_CONFIG = new InjectionToken<DataTableConfig>('dropdownConfig');\n\n/**\n * Dropdown config service. Holds all the global configurations of dropdown which can be overridden while importing the module.\n * Used to manage dropdown base configuration state.\n */\n@Injectable()\nexport class DropdownConfigService implements DropdownConfig {\n  public baseTranslations: DropdownTranslations = {\n    noDataMessage: 'No Results Available',\n    filterPlaceholder: 'Search',\n    selectedOptionWrapPlaceholder: 'Options',\n    selectPlaceholder: 'Select'\n  };\n\n  public selectTrackBy = 'key';\n  public displayTrackBy = 'value';\n  public disabledTrackBy = 'disabled';\n  public menuPosition: ViewPosition = 'bottom-left';\n  public selectMode: DropdownSelectMode = 'single-toggle';\n  public filterable = false;\n  public filterDebounce = true;\n  public filterDebounceTime = 500;\n  public groupByField: string = undefined;\n  public wrapDisplaySelectLimit: number = undefined;\n  public showSelectedOptionRemoveButton = false;\n  public showClearSelectionButton = false;\n  public menuWidth = 320;\n  public menuHeight = 250;\n  public loadOnScroll = false;\n  public loadViewDistanceRatio = 1;\n  public limit = 15;\n  public loadDataOnInit = true;\n  public closeMenuOnSelect = false;\n  public showOptionSelectCheckbox = false;\n  public showOptionIndex = false;\n  public showOptionTrackBy = false;\n  public multiSelectOptionMaxWidth = 135;\n  public setFirstOptionSelected = false;\n  public triggerSelectChangeOnInit = false;\n  public triggerSelectChangeOnModelUpdate = false;\n  public triggerSelectChangeOnFirstOptionSelect = false;\n  public dynamicDimensionCalculation = false;\n  public dynamicWidthRatio = 1;\n  public dynamicHeightRatio = 0.5;\n  public relativeParentElement = undefined;\n\n  constructor(@Inject(DROPDOWN_CONFIG) private dropdownConfig: DropdownConfig) {\n    if (dropdownConfig) {\n      Object.assign(this, dropdownConfig);\n    }\n  }\n\n  /**\n   * Set dropdown translations.\n   * @param value Dropdown translations object.\n   */\n  public set translations(value: DropdownTranslations) {\n    this.baseTranslations = { ...this.baseTranslations, ...value };\n  }\n\n  /**\n   * Get dropdown translations.\n   * @return Dropdown translations.\n   */\n  public get translations(): DropdownTranslations {\n    return this.baseTranslations;\n  }\n\n  /**\n   * Get display text by source option.\n   * @param option Source option object.\n   * @return Display text.\n   */\n  public getDisplayText(option: any): string {\n    return get(option, this.displayTrackBy);\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { DropdownOption } from '../models/dropdown-option.model';\nimport { DropdownDataBindCallback } from '../models/dropdown-data-bind-callback.model';\nimport { DropdownOptionGroup } from '../models/dropdown-option-group.model';\nimport { ComponentLoader } from '../../utility/utility.module';\n\n/**\n * Dropdown data state service; Manage dropdown state data.\n */\n@Injectable()\nexport class DropdownDataStateService {\n  public id: string;\n  public dataLoading = false;\n  public selectedOption: any;\n  public selectedOptions: any[] = [];\n  public offset = 0;\n  public totalOptionCount: number;\n  public currentOptionCount = 0;\n  public dropdownOptions: DropdownOption[] = [];\n  public dropdownOptionGroups: DropdownOptionGroup[] = [];\n  public filterText = '';\n  public disabled = false;\n  public componentLoaderRef: ComponentLoader<any>;\n  public dropdownOptionTemplate: TemplateRef<any>;\n  public dropdownOptionGroupHeaderTemplate: TemplateRef<any>;\n\n  public onDataBind: DropdownDataBindCallback<any>;\n\n  /**\n   * Get dropdown option unique id.\n   * @param append Target identifier.\n   * @param index Target index.\n   */\n  public getUniqueId(append: string, index: number): string {\n    return `${this.id}-chk-${append}-${index}`;\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs';\n\nimport { DropdownComponent } from '../components/dropdown/dropdown.component';\n\n/**\n * Dropdown event state service; Manage dropdown event handler state.\n */\n@Injectable()\nexport class DropdownEventStateService {\n  public dataFetchStream = new EventEmitter<boolean>();\n  public dataBoundStream = new EventEmitter<void>();\n  public selectChangeStream = new EventEmitter<any[] | any>();\n  public initStream = new EventEmitter<DropdownComponent>();\n  public staticDataSourceStream = new ReplaySubject<any[]>(1);\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\n\n/**\n * Dropdown options list view component\n */\n@Component({\n  selector: 'ng-dropdown-view',\n  templateUrl: './dropdown-view.component.html'\n})\nexport class DropdownViewComponent implements OnInit, OnDestroy {\n  public scrollEvent = new Subject<any>();\n  private scrollEventSubscription: Subscription;\n\n  constructor(\n    public config: DropdownConfigService,\n    public dataStateService: DropdownDataStateService,\n    private eventStateService: DropdownEventStateService\n  ) {}\n\n  /**\n   * Lifecycle hook that is called when component is initialized.\n   */\n  public ngOnInit(): void {\n    this.scrollEventSubscription = this.scrollEvent.pipe(debounceTime(100)).subscribe((event: any) => {\n      this.checkScrollPosition(event);\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called when component is destroyed.\n   */\n  public ngOnDestroy(): void {\n    if (this.scrollEventSubscription) {\n      this.scrollEventSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Performs data loading when scrolling when scroll threshold is met. This will be trigger only when load on scroll is enabled.\n   * @param event Target event arguments reference.\n   */\n  public checkScrollPosition(event: any) {\n    const scrollTop = event.target.scrollTop;\n    const scrollHeight = event.target.scrollHeight;\n    const scrollElementHeight = event.target.clientHeight;\n\n    const roundingPixel = 1;\n    const gutterPixel = 1;\n\n    if (\n      scrollTop >= scrollHeight - (1 + this.config.loadViewDistanceRatio) * scrollElementHeight - roundingPixel - gutterPixel &&\n      this.dataStateService.currentOptionCount < this.dataStateService.totalOptionCount &&\n      !this.dataStateService.dataLoading\n    ) {\n      this.dataStateService.dataLoading = true;\n      this.dataStateService.offset = this.dataStateService.offset + this.config.limit;\n      this.eventStateService.dataFetchStream.emit(false);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ReplaySubject, Observable, of, Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { get } from '../../utility/services/object-utility.class';\n\nimport { DropdownQueryResult } from '../models/dropdown-query-result.model';\nimport { DropdownRequestParams } from '../models/dropdown-request-params.model';\n\n/**\n * Dropdown resource service. Dropdown client side data query is handled via this service.\n */\n@Injectable()\nexport class DropdownResourceService<T> {\n  private optionDataStream: ReplaySubject<T[]>;\n  private dataSourceSubscription: Subscription;\n\n  /**\n   * Set source data source.\n   * @param dataSource Data source observable.\n   */\n  public setDataSource(dataSource: Observable<T[]>): void {\n    this.dispose();\n\n    if (this.optionDataStream && !this.optionDataStream.closed) {\n      this.optionDataStream.complete();\n    }\n\n    this.optionDataStream = new ReplaySubject<T[]>(1);\n    this.dataSourceSubscription = dataSource.subscribe((options: T[]) => {\n      this.optionDataStream.next(options);\n    });\n  }\n\n  /**\n   * Query data.\n   * @param params Dropdown request parameters.\n   */\n  public query(params: DropdownRequestParams): Observable<DropdownQueryResult<T>> {\n    return this.optionDataStream.pipe(\n      switchMap((options: T[]) => {\n        let result: T[] = options.slice();\n\n        if (params.filter && params.filter.value) {\n          const value = String(params.filter.value).toLowerCase();\n          result = result.filter((option: T) => {\n            const key = String(get(option, params.filter.key)).toLowerCase();\n            return key.includes(value);\n          });\n        }\n\n        if (params.offset !== undefined) {\n          const offset = params.offset + 1 > result.length ? 0 : params.offset;\n\n          if (params.limit === undefined) {\n            result = result.slice(offset, result.length);\n          } else {\n            result = result.slice(offset, offset + params.limit);\n          }\n        }\n\n        return of({\n          options: result,\n          count: options.length\n        });\n      })\n    );\n  }\n\n  /**\n   * Dispose data source.\n   */\n  public dispose(): void {\n    if (this.dataSourceSubscription) {\n      this.dataSourceSubscription.unsubscribe();\n      this.dataSourceSubscription = null;\n    }\n\n    if (this.optionDataStream && !this.optionDataStream.closed) {\n      this.optionDataStream.complete();\n    }\n  }\n}\n","import {\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription, Observable, of } from 'rxjs';\nimport { catchError, debounceTime, switchMap } from 'rxjs/operators';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DropdownTranslations } from '../../models/dropdown-translations.model';\nimport { DropdownOption } from '../../models/dropdown-option.model';\nimport { DropdownOptionGroup } from '../../models/dropdown-option-group.model';\nimport { DropdownRequestParams } from '../../models/dropdown-request-params.model';\nimport { DropdownDataBindCallback } from '../../models/dropdown-data-bind-callback.model';\nimport { DropdownQueryResult } from '../../models/dropdown-query-result.model';\n\nimport { DropdownSelectMode } from '../../models/dropdown-select-mode.model';\n\nimport { DropdownViewComponent } from '../dropdown-view/dropdown-view.component';\n\nimport { PopoverComponentLoaderFactoryService } from '../../../utility/utility.module';\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\nimport { DropdownResourceService } from '../../services/dropdown-resource.service';\nimport { ViewPosition } from '../../../utility/models/view-position.model';\nimport { ValidatorService } from '../../../utility/services/validator.service';\n\n/**\n * Dropdown main component.\n */\n@Component({\n  selector: 'ng-dropdown',\n  templateUrl: './dropdown.component.html',\n  providers: [\n    DropdownConfigService,\n    DropdownDataStateService,\n    DropdownEventStateService,\n    DropdownResourceService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DropdownComponent),\n      multi: true\n    }\n  ]\n})\nexport class DropdownComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  private onSelectChangeSubscription: Subscription;\n\n  @ContentChild('ngDropdownLoadingSpinner', { static: true })\n  public loadingSpinnerTemplate: TemplateRef<any>;\n\n  @ContentChild('ngDropdownOption', { static: true })\n  public set optionTemplate(value: TemplateRef<any>) {\n    this.dataStateService.dropdownOptionTemplate = value;\n  }\n\n  @ContentChild('ngDropdownOptionGroupHeader', { static: true })\n  public set optionGroupHeaderTemplate(value: TemplateRef<any>) {\n    this.dataStateService.dropdownOptionGroupHeaderTemplate = value;\n  }\n\n  // Outputs : Event Handlers\n  /**\n   * Dropdown initialize event handler\n   */\n  @Output()\n  public init: EventEmitter<DropdownComponent>;\n\n  /**\n   * Dropdown option select change event handler\n   */\n  @Output()\n  public selectChange: EventEmitter<any[] | any>;\n\n  /**\n   * Dropdown data bind event handler\n   */\n  @Output()\n  public dataBound: EventEmitter<void>;\n\n  // Input - Event handlers\n\n  /**\n   * Set data bind callback. This handler is fired on each data fetch request.\n   */\n  @Input()\n  public set onDataBind(value: DropdownDataBindCallback<any>) {\n    this.dataStateService.onDataBind = value;\n  }\n\n  // Inputs\n\n  /**\n   * Set dropdown loading spinner template reference object. Used by data table component to explicitly pass the template reference.\n   */\n  @Input()\n  public set loadingSpinnerTemplateRef(value: TemplateRef<any>) {\n    this.loadingSpinnerTemplate = value;\n  }\n\n  /**\n   * Set dropdown option template reference. Used by data table component to explicitly pass the template reference.\n   */\n  @Input()\n  public set optionTemplateRef(value: TemplateRef<any>) {\n    this.optionTemplate = value;\n  }\n\n  /**\n   * Set dropdown options group header template reference. Used by data table component to explicitly pass the template reference.\n   */\n  @Input()\n  public set optionGroupHeaderTemplateRef(value: TemplateRef<any>) {\n    this.optionGroupHeaderTemplate = value;\n  }\n\n  /**\n   * Set static dropdown options collection. No need to set data source when static options collection is provided.\n   */\n  @Input()\n  public set options(value: any[]) {\n    if (!value) {\n      return;\n    }\n\n    this.eventStateService.staticDataSourceStream.next(value);\n  }\n\n  /**\n   * Set data source observable. This observable is used to retrieve dropdown options for data binding.\n   */\n  @Input()\n  public set dataSource(source: Observable<any[]>) {\n    this.initDataSource(source);\n  }\n\n  /**\n   * Set dropdown unique identifier.\n   */\n  @Input()\n  public set id(value: string) {\n    if (!ValidatorService.idPatternValidatorExpression.test(value)) {\n      throw Error('Invalid [id] input value. Unique identifier parameter only accept string begin with a letter ([A-Za-z]) and may be followed by any number of letters, digits ([0-9]), hyphens (\"-\"), underscores (\"_\").');\n    }\n\n    this.dataStateService.id = value;\n  }\n\n  /**\n   * Set translation data object. Used to localize table static label text.\n   */\n  @Input()\n  public set translations(value: DropdownTranslations) {\n    this.config.translations = value;\n  }\n\n  /**\n   * Set select option track by field path which is used to uniquely identify options for selection tracking.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set selectTrackBy(value: string) {\n    this.config.selectTrackBy = value;\n  }\n\n  /**\n   * Set display value track by field path which is used to extract dropdown option display value.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set displayTrackBy(value: string) {\n    this.config.displayTrackBy = value;\n  }\n\n  /**\n   * Set options group field path which is used to group the dropdown options.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set groupByField(value: string) {\n    this.config.groupByField = value;\n  }\n\n  /**\n   * Set dropdown option disable state field path which is used to disabled state dropdown options.\n   * This field support object paths expressions 'root[0].nest'.\n   */\n  @Input()\n  public set disabledTrackBy(value: string) {\n    this.config.disabledTrackBy = value;\n  }\n\n  /**\n   * Set selected options collection. These options will be set selected by default on initial load.\n   * Applicable only when multi select mode is enabled.\n   */\n  @Input()\n  public set selectedOptions(value: any[]) {\n    this.dataStateService.selectedOptions = value || [];\n  }\n\n  /**\n   * Set selected option. This option is selected by default on initial load.\n   * Applicable only when single select mode is enabled.\n   */\n  @Input()\n  public set selectedOption(value: any) {\n    this.dataStateService.selectedOption = value;\n  }\n\n  /**\n   * Set number of options to fetch on scroll to bottom action when load on scroll mode is enabled.\n   */\n  @Input()\n  public set limit(value: number) {\n    this.config.limit = value;\n  }\n\n  /**\n   * Set wrap selected options in dropdown view and show the number of options selected instead when\n   * limit is met or exceeded. Applicable only when multi select mode is enabled.\n   */\n  @Input()\n  public set wrapDisplaySelectLimit(value: number) {\n    this.config.wrapDisplaySelectLimit = value;\n  }\n\n  /**\n   * Set infinite scrollable state to load data on demand with scroll motion. Dropdown data fetch call is\n   * initiated with limit and offset when user scroll to bottom hence loading the full data set on init.\n   */\n  @Input()\n  public set loadOnScroll(value: boolean) {\n    this.config.loadOnScroll = value;\n  }\n\n  /**\n   * Set view height ratio to trigger data fetch with infinite scrollable mode.\n   * Higher ratio will will increase the scroll sensitivity.\n   */\n  @Input()\n  public set loadViewDistanceRatio(value: number) {\n    this.config.loadViewDistanceRatio = value;\n  }\n\n  /**\n   * Set option select mode.\n   * - 'multi' : Support selecting multiple options.\n   * - 'single' : Support selecting a single option from options collection.\n   * - 'single-toggle' : Support selecting a single option from options collection. Selection can not be removed but\n   * only toggled by tapping on another option.\n   */\n  @Input()\n  public set selectMode(value: DropdownSelectMode) {\n    this.config.selectMode = value;\n  }\n\n  /**\n   * Show dropdown option search filter text-box if true.\n   */\n  @Input()\n  public set filterable(value: boolean) {\n    this.config.filterable = value;\n  }\n\n  /**\n   * Set default filter value to be applied on initial load. All options are displayed when filter text value is\n   * empty string. Applicable only when dropdown is filterable.\n   */\n  @Input()\n  public set filterText(value: string) {\n    this.dataStateService.filterText = value;\n  }\n\n  /**\n   * Set time based filter debounce to optimize performance and avoid request flooding by reducing the filter\n   * request frequency if true. Applicable only when dropdown filterable state is enabled.\n   */\n  @Input()\n  public set filterDebounce(value: boolean) {\n    this.config.filterDebounce = value;\n  }\n\n  /**\n   * Set filter debounce time in milliseconds. Applicable only when searchDebounce is true.\n   */\n  @Input()\n  public set filterDebounceTime(value: number) {\n    this.config.filterDebounceTime = value;\n  }\n\n  /**\n   * Set load data on component initialize if true.\n   */\n  @Input()\n  public set loadDataOnInit(value: boolean) {\n    this.config.loadDataOnInit = value;\n  }\n\n  /**\n   * Show selected option remove button if true.\n   * Applicable only when multi select mode ios enabled.\n   */\n  @Input()\n  public set showSelectedOptionRemoveButton(value: boolean) {\n    this.config.showSelectedOptionRemoveButton = value;\n  }\n\n  /**\n   * Set show all select options clear button if true.\n   * Applicable only when multi select mode ios enabled.\n   */\n  @Input()\n  public set showClearSelectionButton(value: boolean) {\n    this.config.showClearSelectionButton = value;\n  }\n\n  /**\n   * Set options menu width in pixels.\n   */\n  @Input()\n  public set menuWidth(value: number) {\n    this.config.menuWidth = value;\n  }\n\n  /**\n   * Set options menu height in pixels.\n   */\n  @Input()\n  public set menuHeight(value: number) {\n    this.config.menuHeight = value;\n  }\n\n  /**\n   * Set popup options menu display position relative to dropdown component.\n   * Support 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' values.\n   */\n  @Input()\n  public set menuPosition(value: ViewPosition) {\n    this.config.menuPosition = value;\n  }\n\n  /**\n   * Set dropdown view disabled state.\n   */\n  @Input()\n  public set disabled(value: boolean) {\n    this.dataStateService.disabled = value;\n  }\n\n  /**\n   * Set Close dropdown menu on option select if true.\n   */\n  @Input()\n  public set closeMenuOnSelect(value: boolean) {\n    this.config.closeMenuOnSelect = value;\n  }\n\n  /**\n   * Set show dropdown option select checkbox if true.\n   */\n  @Input()\n  public set showOptionSelectCheckbox(value: boolean) {\n    this.config.showOptionSelectCheckbox = value;\n  }\n\n  /**\n   * Set show dropdown option index checkbox if true.\n   */\n  @Input()\n  public set showOptionIndex(value: boolean) {\n    this.config.showOptionIndex = value;\n  }\n\n  /**\n   * Set show dropdown option TrackBy id checkbox if true.\n   */\n  @Input()\n  public set showOptionTrackBy(value: boolean) {\n    this.config.showOptionTrackBy = value;\n  }\n\n  /**\n   * Multi select option selected item maximum width. Apply ellipsis when selected option display text\n   * exceed the max width.\n   */\n  @Input()\n  public set multiSelectOptionMaxWidth(value: number) {\n    this.config.multiSelectOptionMaxWidth = value;\n  }\n\n  /**\n   * Set first dropdown option selected on data fetch if true.\n   */\n  @Input()\n  public set setFirstOptionSelected(value: boolean) {\n    this.config.setFirstOptionSelected = value;\n  }\n\n  /**\n   * Trigger select change event on init if true.\n   * Can be used to enable selectedOptions or selectedOption associated change trigger.\n   */\n  @Input()\n  public set triggerSelectChangeOnInit(value: boolean) {\n    this.config.triggerSelectChangeOnInit = value;\n  }\n\n  /**\n   * Set trigger select change on explicit model update if true.\n   * Applicable only when form binding is used.\n   */\n  @Input()\n  public set triggerSelectChangeOnModelUpdate(value: boolean) {\n    this.config.triggerSelectChangeOnModelUpdate = value;\n  }\n\n  /**\n   * Set trigger select change on first option select change if true.\n   * Applicable only when setFirstOptionSelected is true.\n   */\n  @Input()\n  public set triggerSelectChangeOnFirstOptionSelect(value: boolean) {\n    this.config.triggerSelectChangeOnFirstOptionSelect = value;\n  }\n\n  /**\n   * Set dynamically calculate dropdown view dimensions relative to dropdown button width.\n   * MenuWith and menuHeight values are ignored when true.\n   */\n  @Input()\n  public set dynamicDimensionCalculation(value: boolean) {\n    this.config.dynamicDimensionCalculation = value;\n  }\n\n  /**\n   * Set dynamic dropdown options view dimensions calculation width ratio relative to dropdown selector.\n   */\n  @Input()\n  public set dynamicWidthRatio(value: number) {\n    this.config.dynamicWidthRatio = value;\n  }\n\n  /**\n   * Set dynamic dropdown options view dimensions calculation height ratio relative to dropdown selector.\n   */\n  @Input()\n  public set dynamicHeightRatio(value: number) {\n    this.config.dynamicHeightRatio = value;\n  }\n\n  /**\n   * Set relative parent element to render dropdown view container.\n   */\n  @Input()\n  public set relativeParentElement(value: HTMLElement) {\n    this.config.relativeParentElement = value;\n  }\n\n  constructor(\n    private componentLoaderFactory: PopoverComponentLoaderFactoryService,\n    private injector: Injector,\n    private eventStateService: DropdownEventStateService,\n    private dropdownResourceService: DropdownResourceService<any>,\n    private renderer: Renderer2,\n    public dataStateService: DropdownDataStateService,\n    public config: DropdownConfigService\n  ) {\n    this.dataStateService.componentLoaderRef = this.componentLoaderFactory.createLoader(this.renderer);\n\n    this.dataBound = this.eventStateService.dataBoundStream;\n    this.selectChange = this.eventStateService.selectChangeStream;\n    this.init = this.eventStateService.initStream;\n  }\n\n  /**\n   * Initialize data source.\n   * @param source Data source stream.\n   */\n  private initDataSource(source: Observable<any>): void {\n    this.dropdownResourceService.setDataSource(source);\n\n    this.dataStateService.onDataBind = (params: DropdownRequestParams): Observable<DropdownQueryResult<any>> => {\n      if (params.hardReload) {\n        this.dropdownResourceService.setDataSource(source);\n      }\n\n      return this.dropdownResourceService.query(params);\n    };\n  }\n\n  /**\n   * Performs dropdown toggle event.\n   * @param event Mouse click event args.\n   * @param element Dropdown button element.\n   */\n  public toggleDropdown(event: MouseEvent, element: HTMLElement): void {\n    const target = event.target as HTMLElement;\n    if (target && target.classList && target.classList.contains('ng-ignore-propagation')) {\n      return;\n    }\n\n    this.dataStateService.componentLoaderRef.toggle(DropdownViewComponent, element, this.injector, {\n      relativeParentElement: this.config.relativeParentElement,\n      position: this.config.menuPosition\n    });\n\n    if (this.config.dynamicDimensionCalculation) {\n      this.config.menuWidth = element.offsetWidth * this.config.dynamicWidthRatio;\n      this.config.menuHeight = element.offsetWidth * this.config.dynamicHeightRatio;\n    }\n  }\n\n  /**\n   * Get options wrapped state.\n   */\n  public get wrapSelectedOptions(): boolean {\n    if (this.config.wrapDisplaySelectLimit !== undefined) {\n      return this.dataStateService.selectedOptions.length > this.config.wrapDisplaySelectLimit;\n    }\n\n    return false;\n  }\n\n  /**\n   * Get wrapped option display text.\n   */\n  public get wrappedOptionDisplayText(): string {\n    return `(${this.dataStateService.selectedOptions.length}) ${this.config.translations.selectedOptionWrapPlaceholder}`;\n  }\n\n  /**\n   * Lifecycle hook that is called when component is destroyed.\n   */\n  public ngOnDestroy(): void {\n    if (this.onSelectChangeSubscription) {\n      this.onSelectChangeSubscription.unsubscribe();\n    }\n\n    this.dataStateService.componentLoaderRef.dispose();\n  }\n\n  /**\n   * Get selected options availability state.\n   */\n  public get hasSelectedOptions(): boolean {\n    if (this.config.selectMode === 'multi') {\n      return !!this.dataStateService.selectedOptions.length;\n    }\n\n    return !!this.dataStateService.selectedOption;\n  }\n\n  /**\n   * Trigger select change.\n   */\n  public triggerSelectChange(): void {\n    if (this.config.selectMode === 'multi') {\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n    } else {\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n    }\n  }\n\n  /**\n   * Clear selected options.\n   */\n  public clearSelectedOptions(): void {\n    if (this.config.selectMode === 'multi') {\n      this.dataStateService.selectedOptions = [];\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n    } else {\n      this.dataStateService.selectedOption = undefined;\n      this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n    }\n  }\n\n  /**\n   * Set disabled state.\n   * ControlValueAccessor implementation.\n   * @param isDisabled True if disabled.\n   */\n  public setDisabledState?(isDisabled: boolean): void {\n    this.dataStateService.disabled = isDisabled;\n  }\n\n  /**\n   * Called when value selected value gets updated.\n   * ControlValueAccessor implementation.\n   * @param value Selected value.\n   */\n  public writeValue(value: any): void {\n    if (this.config.selectMode === 'multi') {\n      this.dataStateService.selectedOptions = value || [];\n    } else {\n      this.dataStateService.selectedOption = value;\n    }\n\n    if (this.config.triggerSelectChangeOnModelUpdate) {\n      this.triggerSelectChange();\n    }\n  }\n\n  /**\n   * Register on change event.\n   * ControlValueAccessor implementation.\n   * @param onSelectChange On select change callback function.\n   */\n  public registerOnChange(onSelectChange: (value: any[] | any) => void): void {\n    this.onSelectChangeSubscription = this.selectChange.subscribe(value => {\n      onSelectChange(value);\n    });\n  }\n\n  /**\n   * Register on touched event.\n   * ControlValueAccessor implementation.\n   * @param fn Function reference.\n   */\n  public registerOnTouched(fn: any): void {\n    // TODO: Implement touch event handler\n  }\n\n  /**\n   * Lifecycle hook that is called when component is initialized.\n   */\n  public ngOnInit(): void {\n    if (!this.dataStateService.id) {\n      throw Error('Missing required parameter value for [id] input.');\n    }\n\n    if (!this.dataStateService.onDataBind) {\n      this.dataSource = this.eventStateService.staticDataSourceStream;\n    }\n\n    this.initDataFetchEvent();\n\n    if (this.config.loadDataOnInit) {\n      this.eventStateService.dataFetchStream.emit(false);\n    }\n\n    if (this.config.triggerSelectChangeOnInit) {\n      this.triggerSelectChange();\n    }\n\n    this.eventStateService.initStream.emit(this);\n  }\n\n  /**\n   * Map source data object to dropdown option model.\n   * @param option Source dropdown option.\n   * @param index Current index.\n   */\n  private mapDropdownOption(option: any, index: number): DropdownOption {\n    const id = get(option, this.config.selectTrackBy);\n\n    return {\n      disabled: get(option, this.config.disabledTrackBy),\n      id,\n      index: index + this.dataStateService.offset + 1,\n      option,\n      text: get(option, this.config.displayTrackBy)\n    };\n  }\n\n  /**\n   *\n   * Set dropdown options data.\n   * @param queryResult Query result object reference.\n   */\n  private setDropdownOptions(queryResult: DropdownQueryResult<any>) {\n    if (this.config.groupByField) {\n      this.dataStateService.dropdownOptionGroups = queryResult.options.reduce(\n        (accumulator: DropdownOptionGroup[], option: any, index: number) => {\n          const groupFieldValue = get(option, this.config.groupByField);\n          const currentGroup = accumulator.find((group: DropdownOptionGroup) => group.groupName === groupFieldValue);\n\n          if (currentGroup) {\n            currentGroup.options.push(this.mapDropdownOption(option, index));\n          } else {\n            accumulator.push({\n              groupName: groupFieldValue,\n              options: [this.mapDropdownOption(option, index)]\n            });\n          }\n\n          return accumulator;\n        },\n        this.config.loadOnScroll && this.dataStateService.offset > 0 ? this.dataStateService.dropdownOptionGroups : []\n      );\n    } else {\n      this.dataStateService.dropdownOptions = queryResult.options.reduce(\n        (accumulator: DropdownOption[], option: any, index: number) => {\n          accumulator.push(this.mapDropdownOption(option, index));\n          return accumulator;\n        },\n        this.config.loadOnScroll && this.dataStateService.offset > 0 ? this.dataStateService.dropdownOptions : []\n      );\n    }\n\n    if (this.config.setFirstOptionSelected && queryResult.options.length) {\n      if (this.config.selectMode === 'multi') {\n        this.dataStateService.selectedOptions = [queryResult.options[0]];\n      } else {\n        this.dataStateService.selectedOption = queryResult.options[0];\n      }\n\n      if (this.config.triggerSelectChangeOnFirstOptionSelect) {\n        this.triggerSelectChange();\n      }\n    }\n\n    this.dataStateService.totalOptionCount = queryResult.count;\n    this.dataStateService.currentOptionCount += queryResult.options.length;\n  }\n\n  /**\n   * On after data bind event handler.\n   * @param queryResult Query result object reference.\n   */\n  private onAfterDataBind(queryResult: DropdownQueryResult<any>): void {\n    this.setDropdownOptions(queryResult);\n    this.dataStateService.dataLoading = false;\n    this.eventStateService.dataBoundStream.emit();\n  }\n\n  /**\n   * Fetch query results.\n   * @param hardReload Hard reload state.\n   */\n  private fetchQueryResults(hardReload: boolean): Observable<DropdownQueryResult<any>> {\n    this.dataStateService.dataLoading = true;\n\n    if (hardReload) {\n      this.dataStateService.offset = 0;\n      this.dataStateService.filterText = '';\n    }\n\n    const requestParams: DropdownRequestParams = {\n      hardReload\n    };\n\n    if (this.config.loadOnScroll) {\n      requestParams.limit = this.config.limit;\n      requestParams.offset = this.dataStateService.offset;\n    }\n\n    if (this.config.filterable) {\n      requestParams.filter = {\n        key: this.config.displayTrackBy,\n        value: this.dataStateService.filterText\n      };\n    }\n\n    return this.dataStateService.onDataBind(requestParams);\n  }\n\n  /**\n   * Initialize data fetch event.\n   */\n  private initDataFetchEvent(): void {\n    const noop = {\n      options: [],\n      count: 0\n    };\n\n    this.eventStateService.dataFetchStream\n      .pipe(\n        debounceTime(20),\n        switchMap((hardReload: boolean) => this.fetchQueryResults(hardReload)),\n        catchError(() => {\n          return of(noop);\n        })\n      )\n      .subscribe(\n        (queryResult: DropdownQueryResult<any>) => {\n          this.onAfterDataBind(queryResult);\n        },\n        () => {\n          this.onAfterDataBind(noop);\n        }\n      );\n  }\n\n  /**\n   * Trigger explicit data fetch.\n   * @param hardReload Hard reload state.\n   */\n  public fetchData(hardReload: boolean = false): void {\n    this.eventStateService.dataFetchStream.emit(hardReload);\n  }\n\n  /**\n   * On select option remove event handler.\n   * @param index Selected option index.\n   */\n  public onSelectOptionRemove(index: number): void {\n    this.dataStateService.selectedOptions.splice(index, 1);\n    this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n  }\n\n  /**\n   * Close dropdown options menu.\n   */\n  public close(): void {\n    this.dataStateService.componentLoaderRef.hide();\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\n\n/**\n * Dropdown filter component.\n */\n@Component({\n  selector: 'ng-dropdown-filter',\n  templateUrl: './dropdown-filter.component.html'\n})\nexport class DropdownFilterComponent implements OnDestroy, OnInit {\n  private dataFilterStream = new Subject();\n  private dataFilterSubscription: Subscription;\n\n  constructor(\n    public config: DropdownConfigService,\n    public dataStateService: DropdownDataStateService,\n    public eventStateService: DropdownEventStateService\n  ) {}\n\n  /**\n   * Clear applied filter value.\n   */\n  public clearFilter(): void {\n    this.dataStateService.offset = 0;\n    this.dataStateService.filterText = '';\n    this.eventStateService.dataFetchStream.emit(false);\n  }\n\n  /**\n   * Filter key up event handler.\n   */\n  public filterKeyUp(): void {\n    if (this.config.filterDebounce) {\n      this.dataFilterStream.next(this.dataStateService.filterText);\n    } else {\n      this.dataStateService.offset = 0;\n      this.eventStateService.dataFetchStream.emit(false);\n    }\n  }\n\n  /**\n   * Initialize filter stream debounce.\n   */\n  private initFilterDebounceEvent(): void {\n    this.dataFilterSubscription = this.dataFilterStream.pipe(debounceTime(this.config.filterDebounceTime)).subscribe(() => {\n      this.dataStateService.offset = 0;\n      this.eventStateService.dataFetchStream.emit(false);\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called when component is destroyed.\n   */\n  public ngOnDestroy(): void {\n    if (this.dataFilterSubscription) {\n      this.dataFilterSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called when component is initialized.\n   */\n  public ngOnInit(): void {\n    this.initFilterDebounceEvent();\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { get } from '../../../utility/services/object-utility.class';\n\nimport { DropdownOption } from '../../models/dropdown-option.model';\n\nimport { DropdownDataStateService } from '../../services/dropdown-data-state.service';\nimport { DropdownConfigService } from '../../services/dropdown-config.service';\nimport { DropdownEventStateService } from '../../services/dropdown-event-state.service';\n\n/**\n * Dropdown options list component.\n */\n@Component({\n  selector: 'ng-dropdown-options',\n  templateUrl: './dropdown-options.component.html'\n})\nexport class DropdownOptionsComponent {\n  constructor(\n    public config: DropdownConfigService,\n    public dataStateService: DropdownDataStateService,\n    private eventStateService: DropdownEventStateService\n  ) {}\n\n  /**\n   * Unique data row tracking callback.\n   * @param index Current index.\n   * @param option Dropdown option reference.\n   */\n  public optionTrackBy(index: number, option: DropdownOption): number {\n    return option.index;\n  }\n\n  /**\n   * Get selected state by option identifier.\n   * @param id Option select track by identifier.\n   */\n  public getSelectedState(id: any): boolean {\n    if (this.config.selectMode === 'multi') {\n      return this.dataStateService.selectedOptions.some((option: any) => {\n        return get(option, this.config.selectTrackBy) === id;\n      });\n    }\n\n    return get(this.dataStateService.selectedOption, this.config.selectTrackBy) === id;\n  }\n\n  /**\n   * Option click event handler.\n   * @param option Option object reference.\n   * @param event Click event arguments object.\n   */\n  public onOptionClick(option: DropdownOption, event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (target && target.classList && target.classList.contains('ng-ignore-propagation')) {\n      return;\n    }\n\n    this.toggleOptionSelectedState(option);\n  }\n\n  /**\n   * Option checkbox click event handler.\n   * @param option Option object reference.\n   * @param event Click event arguments object.\n   */\n  public onOptionCheckboxClick(option: DropdownOption, event: MouseEvent): void {\n    // Prevent single mode checkbox getting unchecked on tapping already selected.\n    if (this.config.selectMode === 'single') {\n      const selectedId = get(this.dataStateService.selectedOption, this.config.selectTrackBy);\n      const id = get(option.option, this.config.selectTrackBy);\n      if (selectedId === id) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /**\n   * Toggle option select state and update selected items depending on select mode.\n   * @param option Option object reference.\n   */\n  public toggleOptionSelectedState(option: DropdownOption): void {\n    const id = get(option.option, this.config.selectTrackBy);\n\n    switch (this.config.selectMode) {\n      case 'multi': {\n        const selectedIndex = this.dataStateService.selectedOptions.findIndex((value: any) => {\n          return get(value, this.config.selectTrackBy) === id;\n        });\n\n        if (selectedIndex < 0) {\n          this.dataStateService.selectedOptions.push(option.option);\n        } else {\n          this.dataStateService.selectedOptions.splice(selectedIndex, 1);\n        }\n\n        this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOptions);\n        break;\n      }\n      case 'single-toggle': {\n        if (get(this.dataStateService.selectedOption, this.config.selectTrackBy) === id) {\n          this.dataStateService.selectedOption = undefined;\n        } else {\n          this.dataStateService.selectedOption = option.option;\n        }\n\n        this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n        break;\n      }\n      case 'single': {\n        const selectedId = get(this.dataStateService.selectedOption, this.config.selectTrackBy);\n        this.dataStateService.selectedOption = option.option;\n\n        if (selectedId !== id) {\n          this.eventStateService.selectChangeStream.emit(this.dataStateService.selectedOption);\n        }\n        break;\n      }\n    }\n\n    if (this.config.closeMenuOnSelect) {\n      this.dataStateService.componentLoaderRef.hide();\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { DropdownConfig } from './models/dropdown-config.model';\n\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { DropdownViewComponent } from './components/dropdown-view/dropdown-view.component';\nimport { DropdownFilterComponent } from './components/dropdown-filter/dropdown-filter.component';\nimport { DropdownOptionsComponent } from './components/dropdown-options/dropdown-options.component';\n\nimport { DROPDOWN_CONFIG } from './services/dropdown-config.service';\n\nimport { UtilityModule } from '../utility/utility.module';\n\nconst COMPONENTS = [DropdownComponent, DropdownViewComponent, DropdownFilterComponent, DropdownOptionsComponent];\n\n/**\n * Module representing dropdown component.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, UtilityModule.forRoot()],\n  declarations: [...COMPONENTS],\n  exports: [DropdownComponent],\n  entryComponents: [DropdownViewComponent]\n})\nexport class DropdownModule {\n  /**\n   * Set module root configuration overrides.\n   * @param dropdownConfig Dropdown configuration object.\n   * @return Module with custom providers.\n   */\n  static forRoot(dropdownConfig?: DropdownConfig): ModuleWithProviders {\n    return {\n      ngModule: DropdownModule,\n      providers: [\n        {\n          provide: DROPDOWN_CONFIG,\n          useValue: dropdownConfig\n        }\n      ]\n    };\n  }\n}\n\nexport { DropdownTranslations } from './models/dropdown-translations.model';\nexport { DropdownOption } from './models/dropdown-option.model';\nexport { DropdownRequestParams } from './models/dropdown-request-params.model';\nexport { DropdownFilter } from './models/dropdown-filter.model';\nexport { DropdownDataBindCallback } from './models/dropdown-data-bind-callback.model';\nexport { DropdownQueryResult } from './models/dropdown-query-result.model';\nexport { DropdownConfig } from './models/dropdown-config.model';\n\nexport { DropdownSelectMode } from './models/dropdown-select-mode.model';\n\nexport { DropdownComponent } from './components/dropdown/dropdown.component';\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { DataTableConfig } from './models/data-table-config.model';\n\nimport { DataTableColumnComponent } from './components/data-table-column/data-table-column.component';\n\n// tslint:disable-next-line\nimport { DataTableColumnFilterHeaderComponent } from './components/data-table-column-filter-header/data-table-column-filter-header.component';\n// tslint:disable-next-line\nimport { DataTableColumnFilterTemplateComponent } from './components/data-table-column-filter-template/data-table-column-filter-template.component';\nimport { DataTableColumnTitleHeaderComponent } from './components/data-table-column-title-header/data-table-column-title-header.component';\nimport { DataTableHeaderComponent } from './components/data-table-header/data-table-header.component';\nimport { DataTableColGroupComponent } from './components/data-table-col-group/data-table-col-group.component';\nimport { DataTablePaginationComponent } from './components/data-table-pagination/data-table-pagination.component';\nimport { DataTableComponent } from './components/data-table/data-table.component';\nimport { DataTableBodyComponent } from './components/data-table-body/data-table-body.component';\nimport { DataTableColumnSelectorComponent } from './components/data-table-column-selector/data-table-column-selector.component';\nimport { DataTableNoDataBodyComponent } from './components/data-table-no-data-body/data-table-no-data-body.component';\nimport { DataTableHeadComponent } from './components/data-table-head/data-table-head.component';\nimport { DataTableLoadingSpinnerComponent } from './components/data-table-loading-spinner/data-table-loading-spinner.component';\n\nimport { DATA_TABLE_CONFIG } from './services/data-table-config.service';\n\nimport { ScrollPositionDirective } from './directives/scroll-position.directive';\nimport { ScrollElementDirective } from './directives/scroll-element.directive';\nimport { ElementWidthDirective } from './directives/element-width.directive';\n\nimport { DropdownModule } from '../dropdown/dropdown.module';\nimport { UtilityModule } from '../utility/utility.module';\n\nconst COMPONENTS = [\n  DataTableHeaderComponent,\n  DataTableColumnComponent,\n  DataTableColGroupComponent,\n  DataTableBodyComponent,\n  DataTablePaginationComponent,\n  DataTableComponent,\n  DataTableColumnSelectorComponent,\n  DataTableNoDataBodyComponent,\n  DataTableColumnFilterHeaderComponent,\n  DataTableColumnFilterTemplateComponent,\n  DataTableColumnTitleHeaderComponent,\n  DataTableHeadComponent,\n  DataTableLoadingSpinnerComponent\n];\n\nconst DIRECTIVES = [ScrollPositionDirective, ScrollElementDirective, ElementWidthDirective];\n\nconst PROVIDERS = [];\n\n/**\n * Module representing data table component.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, UtilityModule.forRoot(), DropdownModule.forRoot()],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  providers: [...PROVIDERS],\n  exports: [DataTableColumnComponent, DataTableComponent],\n  entryComponents: [DataTableColumnSelectorComponent]\n})\nexport class DataTableModule {\n  /**\n   * Set module root configuration overrides.\n   * @param dataTableConfig Data table configuration object.\n   * @return Module with custom providers.\n   */\n  public static forRoot(dataTableConfig?: DataTableConfig): ModuleWithProviders {\n    return {\n      ngModule: DataTableModule,\n      providers: [\n        {\n          provide: DATA_TABLE_CONFIG,\n          useValue: dataTableConfig\n        }\n      ]\n    };\n  }\n}\n\n// exports\nexport { DataTableCellBindEventArgs } from './models/data-table-cell-bind-event-args.model';\nexport { DataTableQueryResult } from './models/data-table-query-result.model';\nexport { DataTableQueryField } from './models/data-table-query-field.model';\nexport { DataTableFilterOption } from './models/data-table-filter-option.model';\nexport { DataTableCellClickEventArgs } from './models/data-table-cell-click-event-args.model';\nexport { DataTableHeaderClickEventArgs } from './models/data-table-header-click-event-args.model';\nexport { DataTableDoubleClickEventArgs } from './models/data-table-double-click-event-args.model';\nexport { DataTableRowClickEventArgs } from './models/data-table-row-click-event-args.model';\nexport { DataTableScrollPoint } from './models/data-table-scroll-point.model';\nexport { DataTableRow } from './models/data-table-row.model';\nexport { DataTableRequestParams } from './models/data-table-request-params.model';\nexport { DataTableTranslations } from './models/data-table-translations.model';\nexport { DataTableDynamicRowSpanExtractorCallback } from './models/data-table-group-field-extractor-callback.model';\nexport { DataTableFilterValueExtractCallback } from './models/data-table-filter-value-extract-callback.model';\nexport { DataTableFilterFieldMapperCallback } from './models/data-table-filter-field-mapper-callback.model';\nexport { DataTableFilterExpressionCallback } from './models/data-table-filter-expression-callback.model';\nexport { DataTableCellColorRenderCallback } from './models/data-table-cell-color-render-callback.model';\nexport { DataTableSelectMode } from './models/data-table-select-mode.model';\nexport { DataTableDataBindCallback } from './models/data-table-data-bind-callback.model';\n\nexport { DataTableSortOrder } from './models/data-table-sort-order.model';\nexport { DataTableStorageMode } from './models/data-table-storage-mode.model';\nexport { DataFetchMode } from './models/data-fetch-mode.enum';\n\nexport { DataTableComponent } from './components/data-table/data-table.component';\nexport { DataTableColumnComponent } from './components/data-table-column/data-table-column.component';\n","import { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpRequestOptions } from '../models/http-request-options.model';\nimport { RequestOptions } from '../models/request-options.model';\nimport { ResourceOptions } from '../models/resource-options.model';\n\n/**\n * Request parameter mapper service.\n */\n@Injectable()\nexport class RequestParamMapperService {\n  /**\n   * Map HTTP query parameters by request options.\n   * @param requestOptions Request options object reference.\n   */\n  public mapQueryParams(requestOptions: HttpRequestOptions): HttpParams {\n    if (requestOptions && requestOptions.params) {\n      if (requestOptions.params instanceof HttpParams) {\n        return requestOptions.params;\n      } else {\n        let queryParams = new HttpParams();\n        for (const key in requestOptions.params) {\n          if (requestOptions.params.hasOwnProperty(key)) {\n            queryParams = queryParams.set(key, requestOptions.params[key]);\n          }\n        }\n\n        return queryParams;\n      }\n    } else {\n      return new HttpParams();\n    }\n  }\n\n  /**\n   * Map request options by http request data.\n   * @param options Request options object reference.\n   */\n  public mapRequestOptions(options: string|ResourceOptions): RequestOptions {\n    const requestOptions: RequestOptions = {\n      url: '',\n      options: {}\n    };\n\n    if (typeof options === 'object') {\n      requestOptions.options = options;\n      requestOptions.url = options.url;\n    } else {\n      requestOptions.url = options;\n    }\n\n    return requestOptions;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Utility config service which holds all the global configurations of utility which can be overridden while\n * importing the module.\n */\n@Injectable()\nexport class ResourceUtilityConfigService {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { RequestParamMapperService } from './services/request-param-mapper.service';\nimport { ResourceUtilityConfigService } from './services/resource-utility-config.service';\n\n\nconst PROVIDERS = [RequestParamMapperService];\n\n/**\n * Resource utility module.\n */\n@NgModule({\n  imports: [],\n  providers: [...PROVIDERS]\n})\nexport class ResourceUtilityModule {\n  /**\n   * Set module root configuration overrides.\n   * @return Module with custom providers.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ResourceUtilityModule,\n      providers: [ResourceUtilityConfigService]\n    };\n  }\n}\n\nexport { ResourceOptions } from './models/resource-options.model';\nexport { RequestOptions } from './models/request-options.model';\nexport { HttpRequestOptions } from './models/http-request-options.model';\n\nexport { RequestParamMapperService };\n","import { Injectable } from '@angular/core';\n\n/**\n * Data table resource config service holds all the global configurations of data table resource which can be overridden\n * while importing the module\n */\n@Injectable()\nexport class DataTableResourceConfigService {}\n","import { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DataTableRequestParams } from '../../data-table/models/data-table-request-params.model';\nimport { DataTableQueryResult } from '../../data-table/models/data-table-query-result.model';\nimport { DataTableQueryField } from '../../data-table/models/data-table-query-field.model';\nimport { DataTableDataBindCallback } from '../../data-table/models/data-table-data-bind-callback.model';\nimport { DataTableFilterValueExtractCallback } from '../../data-table/models/data-table-filter-value-extract-callback.model';\nimport { DataTableFilterOption } from '../../data-table/models/data-table-filter-option.model';\nimport { HttpRequestOptions } from '../../resource-utility/models/http-request-options.model';\nimport { ResourceOptions } from '../../resource-utility/models/resource-options.model';\n\nimport { DataTableColumnComponent } from '../../data-table/components/data-table-column/data-table-column.component';\n\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\n\n/**\n * Data table HTTP data fetch service.\n */\nexport class DataTableHttpDataFetchService<T> {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {}\n\n  /**\n   * Get data bind event handler.\n   * @param options Request options or resource path.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Data table bind event handler.\n   */\n  public onDataBind(\n    options: string|ResourceOptions,\n    mapper?: <Q>(response: Observable<Q>) => Observable<DataTableQueryResult<T>>,\n  ): DataTableDataBindCallback<T> {\n    return (params?: DataTableRequestParams): Observable<DataTableQueryResult<T>> => {\n      const requestOptions = this.requestParamMapperService.mapRequestOptions(options);\n      let queryParams = this.requestParamMapperService.mapQueryParams(requestOptions.options);\n\n      if (params) {\n        if (params.limit !== undefined) {\n          queryParams = queryParams.set('limit', String(params.limit));\n        }\n\n        if (params.offset !== undefined) {\n          queryParams = queryParams.set('offset', String(params.offset));\n        }\n\n        params.fields.forEach((column: DataTableQueryField) => {\n          let query = '';\n\n          if (column.filterable) {\n            if (typeof column.filterValue === 'string') {\n              if (column.filterValue !== '') {\n                query += column.filterValue;\n              }\n            } else if (Array.isArray(column.filterValue) && column.filterValue.length) {\n              query += column.filterValue.join(',');\n            }\n          }\n\n          if (column.sortable && column.sortOrder !== '') {\n            query += `|${column.sortOrder}|${column.sortPriority}`;\n          }\n\n          if (query) {\n            queryParams = queryParams.set(column.field, query);\n          }\n        });\n\n        requestOptions.options.params = queryParams;\n\n        const resource = this.http.get<any>(requestOptions.url, requestOptions.options as any) as Observable<any>;\n\n        if (mapper) {\n          return mapper(resource);\n        }\n\n        return resource;\n      }\n    };\n  }\n\n  /**\n   * Get filter value extract event handler.\n   * @param options Request options or resource path.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Data table filter options event handler.\n   */\n  public onFilterValueExtract(\n    options: string|HttpRequestOptions,\n    mapper?: <Q>(response: Observable<Q>) => Observable<DataTableFilterOption[]>,\n  ): DataTableFilterValueExtractCallback {\n    return (column: DataTableColumnComponent): Observable<DataTableFilterOption[]> => {\n      const requestOptions = this.requestParamMapperService.mapRequestOptions(options);\n      let queryParams = this.requestParamMapperService.mapQueryParams(requestOptions.options);\n\n      const filterField = column.filterField || column.field;\n      queryParams = queryParams.set('field', filterField);\n\n      const resource = this.http.get<any>(requestOptions.url, { params: queryParams, ...requestOptions }) as Observable<any>;\n\n      if (mapper) {\n        return mapper(resource);\n      }\n\n      return resource;\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataTableHttpDataFetchService } from './data-table-http-data-fetch.service';\n\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\n\n/**\n * Data table HTTP data fetch service factory.\n */\n@Injectable()\nexport class DataTableHttpResourceFactoryService {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {\n  }\n\n  /**\n   * Get new data table HTTP data fetch service instance.\n   */\n  public getResourceProvider<T>(): DataTableHttpDataFetchService<T> {\n    return new DataTableHttpDataFetchService<T>(this.http, this.requestParamMapperService);\n  }\n}\n","import { Subscription, Subject, Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\n\nimport { DataTableRequestParams } from '../../data-table/models/data-table-request-params.model';\nimport { DataTableQueryResult } from '../../data-table/models/data-table-query-result.model';\nimport { DataTableDataBindCallback } from '../../data-table/models/data-table-data-bind-callback.model';\n\n/**\n * Data table web socket data fetch service.\n */\nexport class DataTableWebsocketDataFetchService<T> {\n  private socket: WebSocketSubject<DataTableQueryResult<T>>;\n  private subject: Subject<DataTableQueryResult<T>>;\n  private socketSubscription: Subscription;\n\n  constructor() {}\n\n  /**\n   * Initialize web socket connection.\n   * @param config Socket configuration parameters.\n   */\n  public init(config?: WebSocketSubjectConfig<DataTableQueryResult<T>>): void {\n    this.socket = webSocket<any>(config);\n    this.subject = new Subject<DataTableQueryResult<T>>();\n  }\n\n  /**\n   * Get socket stream reference.\n   */\n  public get socketStream(): WebSocketSubject<DataTableQueryResult<T>> {\n    return this.socket;\n  }\n\n  /**\n   * Web socket data bind event handler.\n   * Must call init prior to calling this function.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Data table bind event handler.\n   */\n  public onDataBind(mapper?: <Q>(source: Observable<Q>) => Observable<DataTableQueryResult<T>>): DataTableDataBindCallback<T> {\n    if (!this.socket) {\n      throw Error('Initialize socket data source before data bind.');\n    }\n\n    this.socketSubscription = this.socket.subscribe(this.subject);\n\n    return (params?: DataTableRequestParams): Observable<DataTableQueryResult<T>> => {\n      if (params) {\n        this.socket.next({\n          type: 'data-fetch',\n          offset: params.offset,\n          limit: params.limit,\n          fields: params.fields\n        } as any);\n\n        if (mapper) {\n          return mapper(this.subject);\n        }\n\n        return this.subject;\n      }\n    };\n  }\n\n  /**\n   * Dispose web socket connection.\n   */\n  public dispose(): void {\n    if (this.socket) {\n      this.socket.complete();\n    }\n\n    if (this.socketSubscription) {\n      this.socketSubscription.unsubscribe();\n    }\n\n    if (this.subject) {\n      this.subject.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataTableWebsocketDataFetchService } from './data-table-websocket-data-fetch.service';\n\n/**\n * Data table web socket data fetch service factory.\n */\n@Injectable()\nexport class DataTableWebsocketResourceFactoryService {\n\n  /**\n   * Get new data table websocket fetch service instance.\n   */\n  public getResourceProvider<T>(): DataTableWebsocketDataFetchService<T> {\n    return new DataTableWebsocketDataFetchService<T>();\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ResourceUtilityModule } from '../resource-utility/resource-utility.module';\n\nimport { DataTableHttpDataFetchService } from './services/data-table-http-data-fetch.service';\nimport { DataTableWebsocketDataFetchService } from './services/data-table-websocket-data-fetch.service';\nimport { DataTableResourceConfigService } from './services/data-table-resource-config.service';\nimport { DataTableHttpResourceFactoryService } from './services/data-table-http-resource-factory.service';\nimport { DataTableWebsocketResourceFactoryService } from './services/data-table-websocket-resource-factory.service';\n\nconst PROVIDERS = [DataTableHttpResourceFactoryService, DataTableWebsocketResourceFactoryService];\n\n/**\n * Data table data source module.\n */\n@NgModule({\n  imports: [ResourceUtilityModule],\n  providers: [...PROVIDERS]\n})\nexport class DataTableResourceModule {\n  /**\n   * Set module root configuration overrides\n   * @return Module with custom providers\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DataTableResourceModule,\n      providers: [DataTableResourceConfigService]\n    };\n  }\n}\n\nexport { DataTableHttpDataFetchService } from './services/data-table-http-data-fetch.service';\nexport { DataTableHttpResourceFactoryService };\n\nexport { DataTableWebsocketDataFetchService } from './services/data-table-websocket-data-fetch.service';\nexport { DataTableWebsocketResourceFactoryService };\n","import { Injectable } from '@angular/core';\n\n/**\n * Dropdown resource config service which holds all the global configurations of dropdown resource which can be overridden\n * while importing the module.\n */\n@Injectable()\nexport class DropdownResourceConfigService {}\n","import { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DropdownDataBindCallback } from '../../dropdown/models/dropdown-data-bind-callback.model';\nimport { DropdownQueryResult } from '../../dropdown/models/dropdown-query-result.model';\nimport { DropdownRequestParams } from '../../dropdown/models/dropdown-request-params.model';\n\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\nimport { ResourceOptions } from '../../resource-utility/models/resource-options.model';\n\n/**\n * Dropdown HTTP data fetch service.\n */\nexport class DropdownHttpDataFetchService<T> {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {}\n\n  /**\n   * Get data bind event handler.\n   * @param options Request options or resource path.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Dropdown bind event handler.\n   */\n  public onDataBind(\n    options: string|ResourceOptions,\n    mapper?: <Q>(response: Observable<Q>) => Observable<DropdownQueryResult<T>>,\n  ): DropdownDataBindCallback<T> {\n    return (params?: DropdownRequestParams): Observable<DropdownQueryResult<T>> => {\n      const requestOptions = this.requestParamMapperService.mapRequestOptions(options);\n      let queryParams = this.requestParamMapperService.mapQueryParams(requestOptions.options);\n\n      if (params) {\n        if (params.limit !== undefined) {\n          queryParams = queryParams.set('limit', String(params.limit));\n        }\n\n        if (params.offset !== undefined) {\n          queryParams = queryParams.set('offset', String(params.offset));\n        }\n\n        if (params.filter && params.filter.value) {\n          queryParams = queryParams.set('field', params.filter.key);\n          queryParams = queryParams.set('filter', params.filter.value);\n        }\n\n        requestOptions.options.params = queryParams;\n\n        const resource = this.http.get<any>(requestOptions.url, requestOptions.options as any) as Observable<any>;\n\n        if (mapper) {\n          return mapper(resource);\n        }\n\n        return resource;\n      }\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DropdownHttpDataFetchService } from './dropdown-http-data-fetch.service';\nimport { RequestParamMapperService } from '../../resource-utility/services/request-param-mapper.service';\n\n/**\n * Dropdown HTTP data fetch service factory.\n */\n@Injectable()\nexport class DropdownHttpResourceFactoryService {\n  constructor(private http: HttpClient, public requestParamMapperService: RequestParamMapperService) {\n  }\n\n  /**\n   * Get new dropdown HTTP data fetch service instance.\n   */\n  public getResourceProvider<T>(): DropdownHttpDataFetchService<T> {\n    return new DropdownHttpDataFetchService<T>(this.http, this.requestParamMapperService);\n  }\n}\n","import { Subscription, Subject, Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\n\nimport { DropdownDataBindCallback } from '../../dropdown/models/dropdown-data-bind-callback.model';\nimport { DropdownQueryResult } from '../../dropdown/models/dropdown-query-result.model';\nimport { DropdownRequestParams } from '../../dropdown/models/dropdown-request-params.model';\n\n/**\n * Dropdown websocket data fetch service.\n */\nexport class DropdownWebsocketDataFetchService<T> {\n  private socket: WebSocketSubject<DropdownQueryResult<T>>;\n  private subject: Subject<DropdownQueryResult<T>>;\n  private socketSubscription: Subscription;\n\n  constructor() {}\n\n  /**\n   * Initialize websocket connection.\n   * @param config Websocket configuration object reference.\n   */\n  public init(config?: WebSocketSubjectConfig<DropdownQueryResult<T>>): void {\n    this.socket = webSocket<any>(config);\n    this.subject = new Subject<DropdownQueryResult<T>>();\n  }\n\n  /**\n   * Get socket stream reference.\n   */\n  public get socketStream(): WebSocketSubject<DropdownQueryResult<T>> {\n    return this.socket;\n  }\n\n  /**\n   * Websocket data bind event handler.\n   * Must call init prior to calling this function.\n   * @param mapper Response data mapper callback. map source stream format to data table expected stream or apply additional formatting.\n   * @return Dropdown bind event handler.\n   */\n  public onDataBind(mapper?: <Q>(response: Observable<Q>) => Observable<DropdownQueryResult<T>>): DropdownDataBindCallback<T> {\n    if (!this.socket) {\n      throw Error('Initialize socket data source before data bind.');\n    }\n\n    this.socketSubscription = this.socket.subscribe(this.subject);\n\n    return (params?: DropdownRequestParams): Observable<DropdownQueryResult<T>> => {\n      if (params) {\n        this.socket.next({\n          type: 'data-fetch',\n          filter: params.filter,\n          offset: params.offset,\n          limit: params.limit\n        } as any);\n\n        if (mapper) {\n          return mapper(this.subject);\n        }\n\n        return this.subject;\n      }\n    };\n  }\n\n  /**\n   * Dispose websocket connection.\n   */\n  public dispose(): void {\n    if (this.socket) {\n      this.socket.complete();\n    }\n\n    if (this.socketSubscription) {\n      this.socketSubscription.unsubscribe();\n    }\n\n    if (this.subject) {\n      this.subject.unsubscribe();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DropdownWebsocketDataFetchService } from './dropdown-websocket-data-fetch.service';\n\n/**\n * Dropdown web socket data fetch service factory.\n */\n@Injectable()\nexport class DropdownWebsocketResourceFactoryService {\n\n  /**\n   * Get new dropdown websocket fetch service instance.\n   */\n  public getResourceProvider<T>(): DropdownWebsocketDataFetchService<T> {\n    return new DropdownWebsocketDataFetchService<T>();\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ResourceUtilityModule } from '../resource-utility/resource-utility.module';\n\nimport { DropdownHttpDataFetchService } from './services/dropdown-http-data-fetch.service';\nimport { DropdownWebsocketDataFetchService } from './services/dropdown-websocket-data-fetch.service';\nimport { DropdownResourceConfigService } from './services/dropdown-resource-config.service';\nimport { DropdownHttpResourceFactoryService } from './services/dropdown-http-resource-factory.service';\nimport { DropdownWebsocketResourceFactoryService } from './services/dropdown-websocket-resource-factory.service';\n\nconst PROVIDERS = [DropdownHttpResourceFactoryService, DropdownWebsocketResourceFactoryService];\n\n/**\n * Dropdown data source module.\n */\n@NgModule({\n  imports: [ResourceUtilityModule],\n  providers: [...PROVIDERS]\n})\nexport class DropdownResourceModule {\n  /**\n   * Set module root configuration overrides.\n   * @return Module with custom providers.\n   */\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DropdownResourceModule,\n      providers: [DropdownResourceConfigService]\n    };\n  }\n}\n\nexport { DropdownHttpDataFetchService } from './services/dropdown-http-data-fetch.service';\nexport { DropdownHttpResourceFactoryService };\n\nexport { DropdownWebsocketDataFetchService } from './services/dropdown-websocket-data-fetch.service';\nexport { DropdownWebsocketResourceFactoryService };\n"],"names":["tslib_1.__values","COMPONENTS","DIRECTIVES","PROVIDERS"],"mappings":"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"}