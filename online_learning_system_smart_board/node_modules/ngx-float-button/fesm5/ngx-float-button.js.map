{"version":3,"file":"ngx-float-button.js.map","sources":["ng://ngx-float-button/lib/ngx-float-button.service.ts","ng://ngx-float-button/lib/ngx-float-item-button.component.ts","ng://ngx-float-button/lib/ngx-float-button.component.ts","ng://ngx-float-button/lib/ngx-float-button.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFloatButtonService {\n\n  constructor() { }\n}\n","import { Component, Input, Output, EventEmitter, ViewChild, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-float-item-button',\r\n  styles: [\r\n    `\r\n      .item {\r\n        width: 250px;\r\n        height: 40px;\r\n        left: -203px;\r\n        transform: translate3d(0, 0, 0);\r\n        transition: transform, opacity ease-out 200ms;\r\n        transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);\r\n        transition-duration: 180ms;\r\n        position: absolute;\r\n        cursor: pointer;\r\n        top: 5px;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n      }\r\n\r\n      .item.disabled {\r\n        pointer-events: none;\r\n      }\r\n\r\n      .item.disabled .fab-item {\r\n        background-color: lightgray;\r\n      }\r\n\r\n      .content {\r\n        background: #333333;\r\n        margin-right: 50px;\r\n        line-height: 25px;\r\n        color: white;\r\n        padding: 2px 7px;\r\n        border-radius: 3px;\r\n        display: none;\r\n        font-size: 12px;\r\n        height: 25px;\r\n        margin-top: 4px;\r\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\r\n      }\r\n\r\n      .fab-item {\r\n        right: 0;\r\n        background: white;\r\n        border-radius: 100%;\r\n        width: 40px;\r\n        height: 40px;\r\n        position: absolute;\r\n        color: #797979;\r\n        text-align: center;\r\n        cursor: pointer;\r\n        line-height: 50px;\r\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <div #elementref class=\"item {{ disabled ? 'disabled' : ''}}\" (click)=\"emitClickEvent($event)\">\r\n        <div class=\"content-wrapper\" #contentref>\r\n          <div class=\"content\" [style.display]=\"content ? 'block' : 'none'\">{{content}}</div>\r\n        </div>\r\n        <a class=\"fab-item\" [style.backgroundColor]=\"color\">\r\n           <mat-icon> {{ icon }} </mat-icon>\r\n        </a>\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgxFloatItemButtonComponent {\r\n  @Input()\r\n  icon: string;\r\n  @Input()\r\n  content: string;\r\n  @Input()\r\n  color = 'white';\r\n  @Input()\r\n  disabled = false;\r\n\r\n  @Output()\r\n  clicked: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ViewChild('elementref')\r\n  elementref;\r\n\r\n  @ViewChild('contentref')\r\n  contentref;\r\n\r\n  emitClickEvent($event: Event) {\r\n    if (this.disabled) {\r\n      return this.disabled;\r\n    }\r\n    this.clicked.emit($event);\r\n  }\r\n}\r\n","import {\n  Component,\n  Input,\n  ContentChildren,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  OnChanges\n} from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NgxFloatItemButtonComponent } from './ngx-float-item-button.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'ngx-float-button',\n  styles: [\n    `\n      :host {\n        position: absolute;\n      }\n\n      .fab-menu {\n        box-sizing: border-box;\n        font-size: 20px;\n        width: 55px;\n        height: 55px;\n        text-align: left;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        z-index: 9;\n      }\n\n      .fab-toggle {\n        border-radius: 100%;\n        width: 40px;\n        height: 40px;\n        color: white;\n        text-align: center;\n        line-height: 50px;\n        transform: translate3d(0, 0, 0);\n        transition: all ease-out 200ms;\n        z-index: 2;\n        transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n        transition-duration: 400ms;\n        transform: scale(1.1, 1.1) translate3d(0, 0, 0);\n        cursor: pointer;\n        box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n      }\n\n      .fab-menu .fab-toggle:hover {\n        transform: scale(1.2, 1.2) translate3d(0, 0, 0);\n      }\n\n      .fab-menu /deep/ .item {\n        opacity: 0;\n      }\n\n      .fab-menu.active /deep/ .item {\n        opacity: 1;\n      }\n\n      .fab-menu.active /deep/ .content-wrapper {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .fab-menu.active /deep/ .content {\n        display: block;\n      }\n\n      .fab-menu.active .fab-toggle {\n        transition-timing-function: linear;\n        transition-duration: 200ms;\n        transform: scale(0.8, 0.8) translate3d(0, 0, 0);\n      }\n    `\n  ],\n  template: `\n    <nav class=\"fab-menu\" [class.active]=\"(state | async).display\">\n        <a class=\"fab-toggle\" (click)=\"toggle()\" [style.backgroundColor]=\"color\">\n          <mat-icon> {{icon}} </mat-icon>\n        </a>\n        <ng-content></ng-content>\n    </nav>\n  `\n})\nexport class NgxFloatButtonComponent implements AfterContentInit, OnDestroy, OnChanges {\n  public state: BehaviorSubject<any>;\n\n  @Input()\n  icon: string;\n  @Input()\n  direction: string;\n  @Input()\n  spaceBetweenButtons = 55;\n  @Input()\n  open: Subject<boolean>;\n  @Input()\n  color = '#dd0031';\n  @Input()\n  disabled = false;\n  @Output()\n  events: Subject<any> = new Subject();\n  @ContentChildren(NgxFloatItemButtonComponent)\n  buttons;\n\n  private _destroy$ = new Subject();\n\n  constructor(private cd: ChangeDetectorRef) {\n    this.state = new BehaviorSubject({\n      display: false,\n      direction: 'top',\n      event: 'start',\n      spaceBetweenButtons: this.spaceBetweenButtons\n    });\n  }\n\n  public toggle() {\n    if (this.disabled) {\n      return this.disabled;\n    }\n    this.state.next({\n      ...this.state.getValue(),\n      display: !this.state.getValue().display,\n      event: !this.state.getValue().display ? 'open' : 'close'\n    });\n  }\n\n  // only top and bottom support content element\n  private checkDirectionType() {\n    if (this.buttons.toArray()) {\n      let display = 'block';\n\n      if (this.direction === 'right' || this.direction === 'left') {\n        display = 'none';\n      }\n\n      this.buttons.toArray().forEach(element => {\n        element.contentref.nativeElement.style.display = display;\n      });\n    }\n  }\n\n  // transition\n  private animateButtons(eventType) {\n    this.buttons.toArray().forEach((btn, i) => {\n      i += 1;\n      const style = btn.elementref.nativeElement.style;\n\n      if (eventType !== 'directionChanged' && this.state.getValue().display) {\n        style['transform'] = 'scale(1)';\n        style['transition-duration'] = '0s';\n\n        if (btn.timeout) {\n          clearTimeout(btn.timeout);\n        }\n      }\n\n      setTimeout(() => {\n        style['transition-duration'] = this.state.getValue().display ? `${90 + 100 * i}ms` : '';\n        style['transform'] = this.state.getValue().display ? this.getTranslate(i) : '';\n      }, 50);\n\n      if (eventType !== 'directionChanged' && !this.state.getValue().display) {\n        btn.timeout = setTimeout(() => {\n          style['transform'] = 'scale(0)';\n        }, 90 + 100 * i);\n      }\n    });\n  }\n\n  // get transition direction\n  private getTranslate(i) {\n    let animation;\n\n    switch (this.direction) {\n      case 'right':\n        animation = `translate3d(${this.state.getValue().spaceBetweenButtons * i}px,0,0)`;\n        break;\n      case 'bottom':\n        animation = `translate3d(0,${this.state.getValue().spaceBetweenButtons * i}px,0)`;\n        break;\n      case 'left':\n        animation = `translate3d(-${this.state.getValue().spaceBetweenButtons * i}px,0,0)`;\n        break;\n      default:\n        animation = `translate3d(0,-${this.state.getValue().spaceBetweenButtons * i}px,0)`;\n        break;\n    }\n\n    return animation;\n  }\n\n  ngAfterContentInit() {\n    if (this.direction) {\n      // first time to check\n      this.checkDirectionType();\n    }\n\n    this.buttons.toArray().map(v => {\n      v.clicked.pipe(takeUntil(this._destroy$)).subscribe(() => {\n        this.state.next({\n          ...this.state.getValue(),\n          display: false,\n          event: 'close'\n        });\n      });\n    });\n\n    this.state.pipe(takeUntil(this._destroy$)).subscribe(v => {\n      this.animateButtons(v.event);\n\n      this.events.next({\n        display: v.display,\n        event: v.event,\n        direction: v.direction\n      });\n    });\n  }\n\n  // if @Input values changes, we need check the direction type\n  ngOnChanges(changes) {\n    if (changes.direction && !changes.direction.firstChange) {\n      this.state.next({\n        ...this.state.getValue(),\n        event: 'directionChanged',\n        direction: changes.direction.currentValue\n      });\n      // if changes happens\n      this.checkDirectionType();\n    }\n\n    if (changes.open && changes.open.currentValue) {\n      this.open.pipe(takeUntil(this._destroy$)).subscribe(v => {\n        if (v !== this.state.getValue().display) {\n          this.state.next({\n            ...this.state.getValue(),\n            event: v ? 'open' : 'close',\n            display: v\n          });\n\n          // make angular happy\n          this.cd.markForCheck();\n        }\n      });\n    }\n\n    if (changes.spaceBetweenButtons && changes.spaceBetweenButtons.currentValue) {\n      this.state.next({\n        ...this.state.getValue(),\n        event: 'spaceBetweenButtonsChanged',\n        spaceBetweenButtons: changes.spaceBetweenButtons.currentValue\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material';\nimport { NgxFloatButtonComponent } from './ngx-float-button.component';\nimport { NgxFloatItemButtonComponent } from './ngx-float-item-button.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [NgxFloatButtonComponent, NgxFloatItemButtonComponent],\n  exports: [NgxFloatButtonComponent, NgxFloatItemButtonComponent]\n})\nexport class NgxFloatButtonModule {}\n"],"names":[],"mappings":"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"}
